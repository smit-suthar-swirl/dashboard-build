{"version":3,"file":"static/js/116.c8443074.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/InputGroupText.js","../node_modules/react-bootstrap/esm/InputGroup.js","../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/DropdownButton.js","pages/VideoEditPage.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nInputGroupText.displayName = 'InputGroupText';\nexport default InputGroupText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n}), PropTypes.object]);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n  /**\n   * Allow Dropdown to flip in case of an overlapping on the reference element. For more information refer to\n   * Popper.js's flip [docs](https://popper.js.org/docs/v2/modifiers/flip/).\n   *\n   */\n  flip: PropTypes.bool,\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n  /** @ignore */\n  variant: PropTypes.string,\n  /** @ignore */\n  size: PropTypes.string\n};\n\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  flip,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    flip: flip,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Dropdown, DropdownButton, Form, InputGroup } from 'react-bootstrap';\r\nimport { ChromePicker } from 'react-color';\r\nimport \"../components/upload-video/upload.css\"\r\nimport { IoColorPaletteOutline } from \"react-icons/io5\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport RangeSlider from 'react-range-slider-input';\r\nimport { FaPlay, FaSpinner } from \"react-icons/fa\";\r\nimport 'react-range-slider-input/dist/style.css';\r\n\r\nimport { MdAddShoppingCart } from \"react-icons/md\";\r\nimport { BiArrowBack, BiStar, BiTrash } from 'react-icons/bi';\r\nimport { BsFillStarFill } from 'react-icons/bs';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { FallingLines } from 'react-loader-spinner';\r\nimport countryCodes from '../utils/countryCodes';\r\nimport VideoPreviewModel from '../components/video-preview/VideoPreviewModel';\r\nimport SelecteProducts from '../components/upload/SelecteProducts';\r\nimport UplaodFile from '../components/upload/UplaodFIle';\r\nimport SelectPlayList from '../components/upload/SelectPlayList';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\n\r\n\r\nfunction getPhoneCodeByCountryCode(code) {\r\n    const country = countryCodes.find(country => country.code === code);\r\n    return country ? country.phoneCode : null;\r\n}\r\nfunction getCountryCodeByPhoneCode(phonecode) {\r\n    let x;\r\n    if (phonecode == \"+1\") {\r\n        x = \"US\"\r\n    } else if (phonecode == \"+91\") {\r\n        x = \"IN\"\r\n    } else if (phonecode == \"+61\") {\r\n        x = \"AU\"\r\n    }\r\n\r\n    return x\r\n}\r\nconst VideoEditPage = () => {\r\n    const navigate = useNavigate()\r\n    const [selectedTab, setSelectedTab] = useState('0');\r\n    const [selectedCTATab, setSelectedCTATab] = useState('0');\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n    const [selectedCountry, setSelectedCountry] = useState('US')\r\n    const [selectedCallNowType, setSelectedCallNowType] = useState('0')\r\n    const [color, setColor] = useState('#000000');\r\n    const [color2, setColor2] = useState('#ffa800');\r\n    const [showColorPicker, setShowColorPicker] = useState(false);\r\n    const [showColorPicker2, setShowColorPicker2] = useState(false);\r\n    const [previewUrl, setPreviewUrl] = useState(null);\r\n    const [videoFIle, setvideoFIle] = useState(null);\r\n    const [previewModel, setPreviewModel] = useState(false)\r\n    const colorPickerRef = useRef(null);\r\n    const colorPickerRef2 = useRef(null);\r\n    const [coverImageData, setCoverImageData] = useState(null);\r\n    const [selectedPlalist, setselectedPlalist] = useState([]);\r\n    const [loadingPercent, setLoadingPercent] = useState(0)\r\n    const [imagePreview, setImagePreview] = useState(null)\r\n    const user = useSelector(state => state.auth.user)\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [products, setProducts] = useState([])\r\n    const [videoSettings, setVideoSettings] = useState({})\r\n    const [number, setNumber] = useState(\"\")\r\n    const [image, setImage] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [inputFields, setInputFields] = useState({\r\n        videoTitle: '',\r\n        ctaBtn: '',\r\n        videURL: '',\r\n        pageUrl: '',\r\n        videoType: '',\r\n        videLength: 0\r\n\r\n    })\r\n    const [fetchedVideoData, setFetchedVideoData] = useState({})\r\n\r\n    const location = useLocation()\r\n    const urlarray = location.pathname.split('/')\r\n    const video_id = urlarray[urlarray.length - 1]\r\n    const videoData = useSelector(state => state.auth.videoDataForEdit)\r\n\r\n    // setPreviewUrl(videoData.)\r\n    function extractFieldAndJoin(array, fieldName) {\r\n        // Check if the array is not empty\r\n        if (array.length === 0) {\r\n            return \"\"; // Return an empty string if the array is empty\r\n        }\r\n\r\n        // Extract the specified field from each object\r\n        const values = array.map(obj => obj[fieldName]);\r\n\r\n        // Join the values into a comma-separated string\r\n        const result = values.join(\", \");\r\n\r\n        return result;\r\n    }\r\n    const videoRef = useRef(null);\r\n    const handleColorChange = (newColor) => {\r\n        setColor(newColor.hex);\r\n    };\r\n    const clearPreview = () => {\r\n        setPreviewUrl(null);\r\n        setvideoFIle(null)\r\n    };\r\n\r\n    const handleClosePreviewModel = () => {\r\n        setPreviewModel(false)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setShowColorPicker(!showColorPicker);\r\n    };\r\n    const handleColorChange2 = (newColor) => {\r\n        setColor2(newColor.hex);\r\n    };\r\n    const handleInputChangeAllFields = (e) => {\r\n        const { name, value } = e.target;\r\n        setInputFields(prevInputFields => ({\r\n            ...prevInputFields,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleClick2 = () => {\r\n        setShowColorPicker2(!showColorPicker2);\r\n    };\r\n\r\n    const handleTabChange = (event) => {\r\n        setSelectedTab(event.target.value);\r\n        setPreviewUrl(null)\r\n        setvideoFIle(null)\r\n    };\r\n    const handleCTATabChange = (event) => {\r\n        setSelectedCTATab(event.target.value);\r\n    };\r\n    const handleDropdownSelect = (value) => {\r\n        setSelectedCountry(value);\r\n    };\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (colorPickerRef.current && !colorPickerRef.current.contains(event.target)) {\r\n                setShowColorPicker(false);\r\n            }\r\n            if (colorPickerRef2.current && !colorPickerRef2.current.contains(event.target)) {\r\n                setShowColorPicker2(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n    const handleInputChange = (event) => {\r\n        setvideoFIle(event.target.value);\r\n        handleInputChangeAllFields(event)\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     if (videoRef.current) {\r\n    //         const videoElement = videoRef.current\r\n    //         videoElement.addEventListener('loadedmetadata', () => {\r\n    //             width = videoElement.videoWidth;\r\n    //             height = videoElement.videoHeight;\r\n\r\n\r\n    //         });\r\n    //     }\r\n    // }, [videoRef])\r\n\r\n    const videoDimentionType = () => {\r\n        const video = videoRef.current\r\n        if (video) {\r\n            video.addEventListener('loadedmetadata', () => {\r\n                const width = video.videoWidth;\r\n                const height = video.videoHeight;\r\n\r\n                setInputFields(prevInputFields => ({\r\n                    ...prevInputFields,\r\n                    videLength: video.duration,\r\n                }));\r\n                if (height > width) {\r\n                    setInputFields(prevInputFields => ({\r\n                        ...prevInputFields,\r\n                        videoType: \"portrait\",\r\n                    }));\r\n                } else if (width === height) {\r\n                    setInputFields(prevInputFields => ({\r\n                        ...prevInputFields,\r\n                        videoType: \"square\",\r\n                    }));\r\n                } else {\r\n                    setInputFields(prevInputFields => ({\r\n                        ...prevInputFields,\r\n                        videoType: \"landscape\",\r\n                    }));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // // Function to handle file selection\r\n    // const handleFileSelect = event => {\r\n    //     const file = event.target.files[0];\r\n    //     setCoverImageData(file);\r\n\r\n    // }\r\n\r\n    const handleFileSelect = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if (file) {\r\n            setImage(file)\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                const imageData = reader.result;\r\n                setImagePreview(imageData);\r\n                // You can send the binary data (imageData) to your server here\r\n            };\r\n            reader.readAsDataURL(file); // Convert the file to a base64 encoded string\r\n        }\r\n    };\r\n    const fileInputRef = useRef(null);\r\n\r\n    const clearSelection = () => {\r\n        setCoverImageData(null);\r\n        setImagePreview(null)\r\n        if (fileInputRef.current) {\r\n            fileInputRef.current.value = ''; // Reset file input value\r\n        }\r\n    };\r\n    const handleSubmitEdit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n\r\n        try {\r\n            // setLoadingPercent(0);\r\n            const formData = new FormData();\r\n\r\n            formData.append('image', image);\r\n\r\n            formData.append('videoId', videoData.video_id);\r\n            formData.append('uploadType', selectedTab);\r\n            formData.append('selectedCallNowType', selectedCallNowType);\r\n            formData.append('videURL', inputFields.videURL);\r\n            formData.append('videoTitle', inputFields.videoTitle);\r\n            formData.append('cta_type', selectedCTATab);\r\n            formData.append('tollfree_or_phone', selectedCallNowType);\r\n            formData.append('ctaButton', JSON.stringify({\r\n                cta_btn_text: inputFields.ctaBtn,\r\n                cta_bg_color: color,\r\n                cta_text_color: color2\r\n            }));\r\n\r\n            formData.append('selectedPlylist', extractFieldAndJoin(selectedPlalist, \"id\"));\r\n            formData.append('connected_products', extractFieldAndJoin(selectedItems, \"productId\"));\r\n            // formData.append('cover_image', image);\r\n            formData.append('videoType', inputFields.videoType);\r\n            formData.append('video_duration', inputFields.videLength);\r\n            formData.append('country', getPhoneCodeByCountryCode(selectedCountry));\r\n            formData.append('number', number);\r\n            // formData.append('videoId', res.data.key.split(\".\")[0]);\r\n            // formData.append('uploadedVideoUrl', res.data.url.split('?')[0]);\r\n            formData.append('brandId', user.brand_id);\r\n            formData.append('productUrl', inputFields.pageUrl);\r\n            await axios.patch(\"https://liveshopping.asia/updateVideoData\", formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then((res) => {\r\n\r\n                setLoading(false)\r\n                toast.success(\"Swirl updated successfully!\")\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                setLoading(false)\r\n                toast.error(\"Something went wrong !\")\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(\"Something went wrong !\")\r\n        }\r\n    }\r\n\r\n    const getPlalists = async () => {\r\n        try {\r\n            await axios.get(`https://liveshopping.asia/getPlaylistByBrandId?brandId=${user.brand_id}`).then((res) => {\r\n                if (res.data.playlist) {\r\n                    setPlaylists(res.data.playlist)\r\n                } else {\r\n                    setPlaylists([])\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const getProducts = async () => {\r\n        try {\r\n            await axios.get(`https://liveshopping.asia/getProductsByBrandId?brandId=${user.brand_id}`).then((res) => {\r\n                if (res.data.products) {\r\n                    setProducts(res.data.products)\r\n                } else {\r\n                    setProducts([])\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const getVideoSettings = async () => {\r\n        try {\r\n            await axios.get(`https://liveshopping.asia/getSwirlShortCodeInfoByBrandId?brandId=${user.brand_id}`).then((res) => {\r\n\r\n                if (res.data.sscResponse) {\r\n                    setVideoSettings(res.data.sscResponse.brandCustomization)\r\n                }\r\n\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const getVideoData = async () => {\r\n        try {\r\n            await axios.get(`https://liveshopping.asia/getVideoInfoByVideoId?videoId=${videoData.video_id}`).then((res) => {\r\n                if (res.data?.swirl) {\r\n                    setFetchedVideoData(res.data.swirl)\r\n\r\n                }\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPlalists()\r\n        getProducts()\r\n        getVideoSettings()\r\n        getVideoData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (fetchedVideoData) {\r\n            const filteredObjects = playlists.filter(obj => {\r\n                // Get the array of IDs from fetchedVideoData.playlistId\r\n                const playlistIds = fetchedVideoData?.playlistId?.split(',') || [];\r\n\r\n                // Check if the current object's ID matches any ID in the playlistIds array\r\n                return playlistIds.includes(obj.id.toString());\r\n            });\r\n\r\n            setselectedPlalist(filteredObjects)\r\n            setImagePreview(fetchedVideoData.coverImage)\r\n            setImage(fetchedVideoData.coverImage)\r\n            setvideoFIle(fetchedVideoData.serverUrl)\r\n            setInputFields(prevInputFields => ({\r\n                ...prevInputFields,\r\n                pageUrl: fetchedVideoData.shopifyUrl,\r\n            }));\r\n            if (fetchedVideoData.shopifyUrl) {\r\n                if (fetchedVideoData.shopifyUrl.includes(\"https\") || fetchedVideoData.shopifyUrl.includes(\"http\")) {\r\n                    setSelectedCTATab(\"1\")\r\n                    setInputFields(prevInputFields => ({\r\n                        ...prevInputFields,\r\n                        \"pageUrl\": fetchedVideoData?.shopifyUrl?.trim(),\r\n                    }));\r\n                } else {\r\n                    setSelectedCTATab(\"2\")\r\n\r\n                    if (fetchedVideoData.shopifyUrl.includes(\"+\")) {\r\n                        setSelectedCallNowType(\"1\")\r\n                        // setNumber(fetchedVideoData.shopifyUrl)\r\n                        const arr = fetchedVideoData?.shopifyUrl?.split(\"+\")\r\n                        setNumber(arr[2].trim())\r\n                        // console.log(getCountryCodeByPhoneCode(`+${arr[1].trim()}`));\r\n                        setSelectedCountry((getCountryCodeByPhoneCode(`+${arr[1].trim()}`)))\r\n\r\n                    } else {\r\n                        setSelectedCallNowType(\"0\")\r\n                        setNumber(fetchedVideoData?.shopifyUrl?.trim())\r\n                    }\r\n                }\r\n            } else if (fetchedVideoData.productId) {\r\n                // console.log(products);\r\n                setSelectedCTATab(\"0\")\r\n                const filteredObjects = products.filter(obj => {\r\n                    // Get the array of IDs from fetchedVideoData.playlistId\r\n                    const productIds = fetchedVideoData?.productId?.split(',')?.map(id => id.trim()) || [];\r\n                    // Check if the current object's ID matches any ID in the playlistIds array\r\n                    return productIds.includes(obj.productId.toString());\r\n                });\r\n                setSelectedItems(filteredObjects)\r\n            }\r\n            // if()\r\n        }\r\n\r\n    }, [playlists, fetchedVideoData])\r\n\r\n\r\n    useEffect(() => {\r\n        // setInputFields(prevInputFields => ({\r\n        //     ...prevInputFields,\r\n        //     ctaBtn: videoSettings.buy_btn,\r\n        // }));\r\n        setInputFields(prevInputFields => ({\r\n            ...prevInputFields,\r\n            videoTitle: fetchedVideoData.videoTitle,\r\n        }));\r\n        if (fetchedVideoData?.ctaButton) {\r\n\r\n            if (!JSON.parse(fetchedVideoData?.ctaButton).cta_bg_color) {\r\n                setInputFields(prevInputFields => ({\r\n                    ...prevInputFields,\r\n                    ctaBtn: videoSettings.buy_btn,\r\n                }));\r\n\r\n                setColor(videoSettings.bk_color_buy_btn)\r\n                setColor2(videoSettings.front_color_buy_btn)\r\n            } else {\r\n                setInputFields(prevInputFields => ({\r\n                    ...prevInputFields,\r\n                    ctaBtn: JSON.parse(fetchedVideoData.ctaButton).cta_btn_text,\r\n                }));\r\n                setColor(JSON.parse(fetchedVideoData.ctaButton).cta_bg_color)\r\n                setColor2(JSON.parse(fetchedVideoData.ctaButton).cta_text_color)\r\n            }\r\n        }\r\n\r\n    }, [videoSettings, fetchedVideoData])\r\n    useEffect(() => {\r\n        videoDimentionType()\r\n    }, [videoFIle])\r\n    // video length\r\n    // phone num\r\n    // country code\r\n    const fetchDta = async () => {\r\n        const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\n        const targetUrl = inputFields.pageUrl;\r\n\r\n        try {\r\n            const response = await axios.get(proxyUrl + targetUrl);\r\n            const parser = new DOMParser();\r\n            const doc = parser.parseFromString(response.data, 'text/html');\r\n            const titleTag = doc.getElementsByTagName('title')[0];\r\n            const titleText = titleTag ? titleTag.innerText : 'No title found';\r\n            if (titleText) {\r\n                setInputFields(prevInputFields => ({\r\n                    ...prevInputFields,\r\n                    videoTitle: titleText,\r\n                }));\r\n            }\r\n            // setTitle(titleText);\r\n            // setError(null);\r\n        } catch (err) {\r\n            // setTitle(null);\r\n            // setError('Failed to fetch the title');\r\n            console.log(err);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (inputFields.pageUrl) {\r\n            fetchDta()\r\n        }\r\n    }, [inputFields.pageUrl])\r\n\r\n    return (\r\n        <div style={{ overflow: \"hidden\" }}>\r\n            <Helmet>\r\n                <title>SWIRL | Video edit</title>\r\n            </Helmet>\r\n            <div className='row' >\r\n                <div className='col-8' style={{ height: \"80vh\", overflow: \"auto\" }}>\r\n                    <p className='d-flex align-items-center gap-2'><BiArrowBack title='back' style={{ cursor: \"pointer\" }} onClick={() => navigate(\"/admin/svideos\")} size={20} />Edit Video</p>\r\n                    <div className='row text-muted'>\r\n                        <Form onSubmit={(e) => {\r\n                            {\r\n\r\n                                handleSubmitEdit(e)\r\n                            }\r\n                        }}>\r\n\r\n\r\n                            <label className='mt-3'>Title <sup className='text-danger'>*</sup></label>\r\n                            <Form.Control type='text' className='mt-2' placeholder='Enter video title' value={inputFields.videoTitle} name=\"videoTitle\" onChange={(e) => {\r\n                                handleInputChangeAllFields(e)\r\n                            }} required />\r\n                            <div className='d-flex mt-3'>\r\n                                <Form.Check\r\n                                    type=\"radio\"\r\n                                    label=\"Connect products\"\r\n                                    name=\"connect_product\"\r\n                                    id=\"connect_product\"\r\n                                    value=\"0\"\r\n                                    className={selectedCTATab === '0' ? 'selected-radio' : ''}\r\n                                    checked={selectedCTATab === '0'}\r\n                                    onChange={handleCTATabChange}\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"radio\"\r\n                                    label=\"Add URL\"\r\n                                    name=\"add_url\"\r\n                                    id=\"add_url\"\r\n                                    value=\"1\"\r\n                                    className={`ms-3 ${selectedCTATab === '1' ? 'selected-radio' : ''}`}\r\n                                    checked={selectedCTATab === '1'}\r\n                                    onChange={handleCTATabChange}\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"radio\"\r\n                                    label=\"Call now\"\r\n                                    name=\"c_now\"\r\n                                    id=\"c_now\"\r\n                                    value=\"2\"\r\n                                    className={`ms-3 ${selectedCTATab === '2' ? 'selected-radio' : ''}`}\r\n                                    checked={selectedCTATab === '2'}\r\n                                    onChange={handleCTATabChange}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                {selectedCTATab === '0' && (\r\n                                    <SelecteProducts data={products} selectedItems={selectedItems} setSelectedItems={setSelectedItems} />\r\n                                )}\r\n                                {selectedCTATab === '1' && (\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        className='form-control mt-3'\r\n                                        placeholder=\"Add page URL\"\r\n                                        name=\"pageUrl\"\r\n                                        value={inputFields.pageUrl}\r\n                                        onChange={(e) => {\r\n                                            handleInputChangeAllFields(e)\r\n                                        }}\r\n\r\n                                    // Add your props or state management for female input here\r\n                                    />\r\n                                )}\r\n\r\n                                {selectedCTATab === '2' && (\r\n                                    <>\r\n                                        <div className='row mt-3'>\r\n                                            <div className='col-3'>\r\n                                                <Form.Select aria-label=\"select call now type\" className='text-muted' onChange={(e) => {\r\n                                                    setSelectedCallNowType(e.target.value)\r\n                                                }}>\r\n                                                    <option selected={selectedCallNowType === \"0\"} value=\"0\">Toll-free</option>\r\n                                                    <option selected={selectedCallNowType === \"1\"} value=\"1\">Phone number</option>\r\n\r\n                                                </Form.Select>\r\n                                            </div>\r\n                                            <div className='col-9'>\r\n                                                {selectedCallNowType == \"0\" ? <Form.Control type='number' value={number} onChange={(e) => setNumber(e.target.value)} placeholder={selectedCallNowType == \"0\" ? \"Enter toll-free number\" : \"Enter phone number\"} aria-label=\"Text input with dropdown button\" /> : <InputGroup className=\"mb-3 country_btn\">\r\n                                                    <DropdownButton\r\n                                                        variant=\"outline-dark\"\r\n                                                        title={selectedCountry}\r\n                                                        className='country_btn'\r\n                                                        onSelect={(e) => handleDropdownSelect(e)}\r\n                                                        style={{ border: \"1px solid red\" }}\r\n\r\n                                                    >\r\n                                                        <Dropdown.Item eventKey=\"US\">US</Dropdown.Item>\r\n                                                        <Dropdown.Item eventKey=\"IN\">IN</Dropdown.Item>\r\n                                                        <Dropdown.Item eventKey=\"AU\">AU</Dropdown.Item>\r\n                                                    </DropdownButton>\r\n                                                    <Form.Control type='number' value={number} placeholder={selectedCallNowType == \"0\" ? \"Enter toll-free number\" : \"Enter phone number\"} aria-label=\"Text input with dropdown button\" onChange={(e) => setNumber(e.target.value)} />\r\n                                                </InputGroup>}\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                                <p className='mt-3'>Overlay CTA button</p>\r\n                                <div className='row mt-2'>\r\n                                    <div className='col-4'>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={inputFields.ctaBtn}\r\n                                            placeholder='Enquire now'\r\n                                            className=\"form-control\"\r\n                                            name='ctaBtn'\r\n                                            onChange={(e) => handleInputChangeAllFields(e)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className='col-4'>\r\n\r\n                                        <div className=\"input-group mb-3\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <span className=\"color_badge\" style={{ backgroundColor: color }}></span>\r\n                                            </span>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={color}\r\n                                                onClick={handleClick}\r\n                                                className=\"form-control pointer_cursor\"\r\n\r\n                                            />\r\n                                            <span className=\"input-group-text pointer_cursor\" onClick={handleClick}>\r\n                                                <IoColorPaletteOutline />\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        {showColorPicker && (\r\n                                            <div ref={colorPickerRef} style={{ position: 'absolute', zIndex: '2' }}>\r\n                                                <ChromePicker color={color} onChange={handleColorChange} />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className='col-4'>\r\n                                        <div className=\"input-group mb-3\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <span className=\"color_badge\" style={{ backgroundColor: color2 }}></span>\r\n                                            </span>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={color2}\r\n                                                onClick={handleClick2}\r\n                                                className=\"form-control pointer_cursor\"\r\n\r\n                                            />\r\n                                            <span className=\"input-group-text pointer_cursor\" onClick={handleClick2}>\r\n                                                <IoColorPaletteOutline />\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        {showColorPicker2 && (\r\n                                            <div ref={colorPickerRef2} style={{ position: 'absolute', zIndex: '2' }}>\r\n                                                <ChromePicker color={color2} onChange={handleColorChange2} />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <p className='d-none'>Select playlist</p>\r\n                            {/* <SelectPlayList className=\"d-none\" data={playlists} selectedPlalist={selectedPlalist} setselectedPlalist={setselectedPlalist} /> */}\r\n                            <p className='mt-2'>Cover image</p>\r\n                            <div className=\"input-group \">\r\n                                <Form.Control ref={fileInputRef} type=\"file\" accept=\"image/*\" placeholder=\"Select an image file\" // Change the placeholder\r\n                                    data-browse=\"Browse\" onChange={handleFileSelect} />\r\n                                {/* <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder='Select image'\r\n                                /> */}\r\n                                {/* <span className=\"input-group-text\">\r\n                                    <small >Browse</small>\r\n                                </span> */}\r\n                            </div>\r\n\r\n                            <small>File format: .png, .jpg, .webp</small>\r\n                            {imagePreview && <>\r\n                                <div className='card p-2 col-4 mt-4 m-auto'>\r\n                                    <img alt='preview' className='rounded' src={imagePreview} />\r\n                                </div>\r\n                            </>}\r\n                            {/* {imagePreview && image && <div className='card p-1 mt-2'>\r\n                                <div className='d-flex w-100'>\r\n                                    <img style={{ height: \"50px\", width: \"35px\", borderRadius: \"3px\" }} src={imagePreview} />\r\n                                    <div className='d-flex flex-column ps-2 pt-1'>\r\n                                        <small className='text-muted'>{fileInputRef?.current?.files[0]?.name}</small>\r\n                                        <small style={{ color: \"rgb(162, 162, 164)\" }}>{`${(fileInputRef?.current?.files[0]?.size / 1024).toFixed(2)}KB`} <b>.</b> <span className='text-success'>Uploaded</span></small>\r\n                                    </div>\r\n                                    <div className='ms-auto' onClick={() => clearSelection()}>\r\n                                        <IoClose className='pointer_cursor' />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>} */}\r\n                            <div>\r\n                                <button className='btn btn-sm mt-3 btn-dark'>Update {loading ? <FaSpinner className=\"spinning\" /> : \"\"}</button>\r\n                            </div>\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='col-4' >\r\n                    <div className='card' style={{ height: \"80vh\", padding: \"50px\", paddingTop: \"20px\", borderRadius: \"20px\", overflow: \"hidden\", backgroundColor: \"#F8F8FF\", borderRadius: '10px' }}>\r\n\r\n                        <div>\r\n\r\n                            <div style={{ position: \"relative\", height: \"70vh\", maxWidth: \"100%\", overflow: \"hidden\", borderRadius: \"20px\" }}>\r\n\r\n                                {videoFIle ? <video ref={videoRef} style={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\", objectFit: \"cover\" }} src={videoFIle} autoPlay muted /> : <div className='h-100 w-100' style={{ backgroundColor: \"#D9D9D9\" }}></div>}\r\n\r\n                                {previewUrl && <div style={{ position: \"absolute\", top: 0, right: 0, padding: \"10px\", color: \"white\" }} onClick={clearPreview}>\r\n                                    <span style={{ height: \"34px\", width: \"34px\", backgroundColor: \"#a2a2a4\", cursor: \"pointer\", borderRadius: \"50%\", display: \"grid\", placeItems: \"center\" }}>\r\n                                        <BiTrash className=' float-end' />\r\n                                    </span>\r\n                                </div>}\r\n                                <div style={{ position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", textAlign: \"center\", color: \"white\" }}>\r\n                                    <div style={{ backgroundColor: \"#ffffff\", height: \"44px\", width: \"44px\", display: \"grid\", placeItems: \"center\", borderRadius: \"50%\" }}>\r\n                                        <FaPlay size={20} className='ps-1 pointer_cursor' color='#09121F' />\r\n                                    </div>\r\n                                </div>\r\n                                {selectedItems.length > 0 &&\r\n                                    <div className='w-100 p-3' style={{ position: \"absolute\", bottom: \"0\" }}>\r\n                                        <div className='d-flex bg-light rounded overflow-hidden' style={{\r\n                                            boxShadow: \"0px 4px 4px 0px #00000040\"\r\n                                        }}>\r\n                                            {/* <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS3CoT43dhDs24KOBENldI_y_OMEpP430XknIzXNGfp2Q&s' style={{ height: \"105px\", width: \"76px\" }} />\r\n                                            <div className='d-flex flex-column w-100 ps-2'>\r\n                                                <div className='m-0 p-0' style={{ fontSize: \"12px\",left:\"80%\" }}><span className='badge text-muted p-2' style={{ backgroundColor: \"#FCFCE4\" }}><BsFillStarFill className='text-success' />4.5</span></div>\r\n                                                <span className='product_title_preview' style={{ fontSize: \"13px\" }}>{selectedItems[0].productTitle.substring(0, 25)}</span>\r\n                                                <span style={{ fontSize: \"12px\", padding: \"2px\" }}>$300 <del className=\"text-muted\">$600</del><span className='badge_discount bg-success text-white fw-light p-1 rounded ms-1'><small>30%</small></span></span>\r\n                                                <div className='d-flex align-items-center gap-2'>\r\n                                                    <button className='btn btn-sm btn-dark' style={{ fontSize: \"12px\", width: \"68%\" }}>Buy Now</button>\r\n                                                    <MdAddShoppingCart size={35} className='pe-2' />\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n                                    </div>}\r\n\r\n                            </div>\r\n\r\n                            {/* <div style={{ height: \"70vh\", maxWidth: \"100%\", objectFit: \"cover\", borderRadius: \"20px\", overflow: \"hidden\", position: \"absolute\" }}>\r\n                                <video ref={videoRef} style={{ height: \"70vh\", objectFit: \"cover\" }} src={previewUrl} autoPlay width=\"100%\" />\r\n                            </div>\r\n                            <div style={{ position: \"relative\", height: \"70vh\", color: \"#fff\" }}>\r\n                                <div>\r\n                                    <BiTrash className='text-danger float-end' />\r\n                                </div>\r\n                                <div style={{ height: '70vh', display: \"grid\", placeItems: \"center\" }}>\r\n                                    <div style={{ backgroundColor: \"#ffffff\", height: \"44px\", width: \"44px\", display: \"grid\", placeItems: \"center\", borderRadius: \"50%\" }}>\r\n                                        <FaPlay size={20} className='ps-1 pointer_cursor' color='#09121F' />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='text-center'>\r\n                                <button className='btn btn-dark mt-2' disabled={previewUrl ? false : true} onClick={() => setPreviewModel(true)}>Preview</button>\r\n                            </div> */}\r\n                            <div className='text-center'>\r\n                                <button className='btn btn-dark mt-2' disabled={imagePreview ? false : true} onClick={() => setPreviewModel(true)}>Preview</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <RangeSlider min=\"5\" max=\"20\" id=\"range-slider\" /> */}\r\n                    </div>\r\n\r\n                </div>\r\n                <VideoPreviewModel show={previewModel} url={videoFIle} handleClose={handleClosePreviewModel} />\r\n            </div>\r\n            {/* {loading && <div style={{ position: \"relative\", height: \"80vh\", backgroundColor: \"rgba(255,255,255,0.6)\", width: \"100%\", display: \"grid\", placeItems: \"center\" }}>\r\n                <FallingLines\r\n                    color=\"#EEEE77\"\r\n                    width=\"100\"\r\n                    visible={true}\r\n                    ariaLabel=\"falling-circles-loading\"\r\n                />\r\n            </div>} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoEditPage"],"names":["propTypes","type","PropTypes","tooltip","as","Feedback","React","_ref","ref","Component","className","props","_jsx","classNames","concat","displayName","FormCheckInput","id","bsPrefix","isValid","isInvalid","controlId","useContext","FormContext","useBootstrapPrefix","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","toArray","some","child","hasChildOfType","input","Provider","value","_jsxs","_Fragment","Object","assign","Input","Label","FormControl","size","htmlSize","plaintext","readOnly","FormFloating","FormGroup","context","FormLabel","column","visuallyHidden","columnClass","classes","Col","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","validated","Form","Group","Control","Floating","Check","Text","Range","Select","InputGroupText","InputGroup","hasValidation","contextValue","InputGroupContext","Radio","Checkbox","alignDirection","alignPropType","sm","md","lg","xl","xxl","href","onClick","isRequired","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","flip","variant","DropdownButton","Dropdown","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","VideoEditPage","navigate","useNavigate","selectedTab","setSelectedTab","useState","selectedCTATab","setSelectedCTATab","selectedItems","setSelectedItems","selectedCountry","setSelectedCountry","selectedCallNowType","setSelectedCallNowType","color","setColor","color2","setColor2","showColorPicker","setShowColorPicker","showColorPicker2","setShowColorPicker2","previewUrl","setPreviewUrl","videoFIle","setvideoFIle","previewModel","setPreviewModel","colorPickerRef","useRef","colorPickerRef2","coverImageData","setCoverImageData","selectedPlalist","setselectedPlalist","loadingPercent","setLoadingPercent","imagePreview","setImagePreview","user","useSelector","state","auth","playlists","setPlaylists","products","setProducts","videoSettings","setVideoSettings","number","setNumber","image","setImage","loading","setLoading","inputFields","setInputFields","videoTitle","ctaBtn","videURL","pageUrl","videoType","videLength","fetchedVideoData","setFetchedVideoData","urlarray","useLocation","pathname","split","videoData","length","videoDataForEdit","extractFieldAndJoin","array","fieldName","map","obj","join","videoRef","handleClick","handleInputChangeAllFields","e","name","target","prevInputFields","handleClick2","handleCTATabChange","event","useEffect","handleClickOutside","current","contains","document","addEventListener","removeEventListener","fileInputRef","handleSubmitEdit","async","preventDefault","formData","FormData","append","video_id","JSON","stringify","cta_btn_text","cta_bg_color","cta_text_color","code","country","countryCodes","phoneCode","getPhoneCodeByCountryCode","brand_id","axios","patch","headers","then","res","toast","success","catch","err","console","log","error","get","data","playlist","getPlalists","getProducts","sscResponse","brandCustomization","getVideoSettings","_res$data","swirl","getVideoData","filteredObjects","filter","_fetchedVideoData$pla","playlistId","includes","toString","coverImage","serverUrl","shopifyUrl","_fetchedVideoData$sho","trim","_fetchedVideoData$sho2","arr","phonecode","x","getCountryCodeByPhoneCode","_fetchedVideoData$sho3","productId","_fetchedVideoData$pro","_fetchedVideoData$pro2","ctaButton","parse","buy_btn","bk_color_buy_btn","front_color_buy_btn","videoDimentionType","video","width","videoWidth","height","videoHeight","duration","targetUrl","response","titleTag","DOMParser","parseFromString","getElementsByTagName","titleText","innerText","fetchDta","overflow","Helmet","BiArrowBack","cursor","onSubmit","placeholder","onChange","required","checked","SelecteProducts","selected","onSelect","border","Item","eventKey","backgroundColor","IoColorPaletteOutline","position","zIndex","ChromePicker","newColor","hex","accept","file","files","reader","FileReader","onloadend","imageData","result","readAsDataURL","alt","src","FaSpinner","padding","paddingTop","borderRadius","maxWidth","top","left","objectFit","autoPlay","right","clearPreview","display","placeItems","BiTrash","transform","textAlign","FaPlay","bottom","boxShadow","VideoPreviewModel","show","url","handleClose","handleClosePreviewModel"],"sourceRoot":""}