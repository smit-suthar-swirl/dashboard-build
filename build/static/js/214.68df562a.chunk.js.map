{"version":3,"file":"static/js/214.68df562a.chunk.js","mappings":"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","sources":["components/ZeroToHeroCount.js","components/charts/EngageMent.js","components/charts/Perfomance.js","components/charts/SalesConversion.js","pages/DashBoard.js","utils/utils.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nfunction formatNumber(number) {\r\n    if (number >= 1e9) {\r\n        return (number / 1e9).toFixed(1) + 'b';\r\n    }\r\n    if (number >= 1e6) {\r\n        return (number / 1e6).toFixed(1) + 'm';\r\n    }\r\n    if (number >= 1e3) {\r\n        return (number / 1e3).toFixed(1) + 'k';\r\n    }\r\n    return number;\r\n}\r\n\r\nfunction ZeroToHeroCount({ targetNumber }) {\r\n    const [currentNumber, setCurrentNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const duration = 2000; // Animation duration in milliseconds\r\n        const increment = Math.ceil(targetNumber / (duration / 50)); // Assuming 50 steps per second\r\n\r\n        const interval = setInterval(() => {\r\n            setCurrentNumber((prevNumber) => {\r\n                const newNumber = prevNumber + increment;\r\n                return newNumber >= targetNumber ? targetNumber : newNumber;\r\n            });\r\n        }, 20); // Update every 20 milliseconds\r\n\r\n        return () => clearInterval(interval); // Cleanup function to clear interval on unmount\r\n    }, [targetNumber]);\r\n\r\n    return formatNumber(currentNumber);\r\n}\r\n\r\nexport default ZeroToHeroCount;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { BarChart, Bar, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Rectangle, Label } from 'recharts';\r\nimport \"../chart.css\"\r\nimport ZeroToHeroCount from '../ZeroToHeroCount';\r\n\r\n\r\nconst EngageMent = () => {\r\n    const [data, setData] = useState(\r\n    );\r\n\r\n    // useEffect hook example (optional, use it if needed)\r\n    useEffect(() => {\r\n        setData([\r\n            { name: 'Jan', uv: 4000, pv: 2400, amt: 400 },\r\n            { name: 'Feb', uv: 3000, pv: 1398, amt: 210 },\r\n            { name: 'Mar', uv: 2000, pv: 9800, amt: 290 },\r\n            { name: 'Apr', uv: 2780, pv: 3908, amt: 100 },\r\n            { name: 'May', uv: 1890, pv: 4800, amt: 181 },\r\n            { name: 'Jun', uv: 2390, pv: 3800, amt: 500 },\r\n            { name: 'July', uv: 3490, pv: 4300, amt: 100 },\r\n            { name: 'Aug', uv: 3490, pv: 4300, amt: 330 },\r\n            { name: 'Sep', uv: 3490, pv: 4300, amt: 430 },\r\n            { name: 'Oct', uv: 3490, pv: 4300, amt: 140 },\r\n            { name: 'Nov', uv: 3490, pv: 4300, amt: 230 },\r\n            { name: 'Dec', uv: 3490, pv: 4300, amt: 110 },\r\n        ])\r\n    }, []);\r\n\r\n    const [activeTab, setActiveTab] = useState('tab1');\r\n\r\n    const handleTabClick = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex w-100 align-items-center\">\r\n                <ul className=\"nav nav-tabs\">\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'tab1' ? 'active' : ''}`} onClick={() => handleTabClick('tab1')}>\r\n                            <p>Engagement rate</p>\r\n                            <h3><ZeroToHeroCount targetNumber={50} />%</h3>\r\n\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'tab2' ? 'active' : ''}`} onClick={() => handleTabClick('tab2')}>\r\n                            <p>CTR</p>\r\n                            <h3> <ZeroToHeroCount targetNumber={12} />%</h3>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'tab3' ? 'active' : ''}`} onClick={() => handleTabClick('tab3')}>\r\n                            <p>Add to cart</p>\r\n                            <h3> <ZeroToHeroCount targetNumber={1255} /></h3>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'tab4' ? 'active' : ''}`} onClick={() => handleTabClick('tab4')}>\r\n                            <p>Buy now</p>\r\n                            <h3> <ZeroToHeroCount targetNumber={540} /></h3>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'tab5' ? 'active' : ''}`} onClick={() => handleTabClick('tab5')}>\r\n                            <p>Ask question</p>\r\n                            <h3> <ZeroToHeroCount targetNumber={213} /></h3>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item d-none\">\r\n                        <div className={`nav-link ${activeTab === 'tab6' ? 'active' : ''}`} onClick={() => handleTabClick('tab6')}>\r\n                            <p>Share</p>\r\n                            <h3> <ZeroToHeroCount targetNumber={78} /></h3>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item d-none\">\r\n                        <div className={`nav-link ${activeTab === 'tab7' ? 'active' : ''}`} onClick={() => handleTabClick('tab7')}>\r\n                            <p>Mute</p>\r\n                            <h3> <ZeroToHeroCount targetNumber={78} /></h3>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n                <div className='ms-auto'>\r\n                    <button className='btn btn-sm btn-outline-dark'>View more</button>\r\n                </div>\r\n            </div>\r\n            <ResponsiveContainer className=\"chart_engagement\" width=\"100%\" height=\"100%\">\r\n                <BarChart\r\n                    width={500}\r\n                    height={300}\r\n                    data={data}\r\n                    margin={{\r\n                        top: 20,\r\n                        right: 0,\r\n                        left: 0,\r\n                        bottom: 5,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    {/* <XAxis dataKey=\"name\" /> */}\r\n                    <XAxis dataKey=\"name\">\r\n                        <Label value=\"Dates\" offset={-5} position=\"insideBottom\" />\r\n                    </XAxis>\r\n                    <YAxis>\r\n                        <Label value=\"Views\" offset={7} position=\"insideLeft\" angle={-90} />\r\n                    </YAxis>\r\n\r\n                    {/* <Tooltip /> */}\r\n                    {/* <Legend /> */}\r\n                    <Bar dataKey=\"amt\" maxBarSize={20} fill=\"#77BBFF\" activeBar={<Rectangle fill=\"pink\" stroke=\"blue\" />} />\r\n                    {/* <Bar dataKey=\"uv\" fill=\"#82ca9d\" activeBar={<Rectangle fill=\"gold\" stroke=\"purple\" />} /> */}\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EngageMent;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { BarChart, Bar, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Legend, Tooltip } from 'recharts';\r\nimport \"../chart.css\"\r\nimport axios from 'axios';\r\nimport { numberFormatShort } from '../../utils/utils';\r\nimport { useSelector } from 'react-redux';\r\nimport { format } from 'date-fns';\r\nimport \"../chart.css\"\r\nconst Perfomance = ({ selectedDate }) => {\r\n    const [data, setData] = useState([])\r\n    const [overalldata, setOverallData] = useState({})\r\n    const user = useSelector((state) => state.auth.user)\r\n\r\n\r\n    const [activeTab, setActiveTab] = useState('tab1');\r\n\r\n    const handleTabClick = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n\r\n    function convertSecondsToTime(seconds) {\r\n        if (isNaN(seconds) || seconds < 0) {\r\n            return \"0\";\r\n        }\r\n\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        const remainingSeconds = seconds % 60;\r\n\r\n        if (hours > 0) {\r\n            return `${hours}hr ${minutes}min ${remainingSeconds}sec`;\r\n        } else if (minutes > 0) {\r\n            return `${minutes}min ${remainingSeconds}sec`;\r\n        } else {\r\n            return `${remainingSeconds}sec`;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function calculateTotals(data) {\r\n        return data.reduce((totals, entry) => {\r\n            totals.unique_views += entry.unique_views;\r\n            totals.total_views += entry.total_views;\r\n            totals.watch_time += entry.watch_time;\r\n            return totals;\r\n        }, { unique_views: 0, total_views: 0, watch_time: 0 });\r\n    }\r\n    function addBarDate(array) {\r\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n        const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n        return array.map(obj => {\r\n            const [year, month, day] = obj.date.split('_').map(Number);\r\n            const date = new Date(year, month - 1, day);\r\n            const shortYear = date.getFullYear().toString().substr(-2); // Extract last two digits of the year\r\n            const barDate = `${date.getDate()} ${months[date.getMonth()]} ${shortYear} ${days[date.getDay()]}`;\r\n            return { ...obj, bar_date: barDate };\r\n        });\r\n    }\r\n\r\n\r\n    const getDataForPerfomance = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`https://goswirl.world:3001/getBrandVideoDataByDateAndBrandId?brandId=${user.brand_id}&start_date=${format(selectedDate.startDate, 'yyyy-MM-dd')}&end_date=${format(selectedDate.endDate, 'yyyy-MM-dd')}`);\r\n\r\n            if (response.data.resp) {\r\n                const totalData = calculateTotals(response.data.resp); // Assuming calculateTotals is defined somewhere\r\n                setOverallData(totalData);\r\n            }\r\n\r\n            const newData = addBarDate(response.data.resp); // Assuming addBarDate is defined somewhere\r\n            setData(newData);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, [user, selectedDate]);\r\n    useEffect(() => {\r\n        getDataForPerfomance()\r\n    }, [selectedDate, getDataForPerfomance])\r\n    const CustomXAxisTick = ({ x, y, payload }) => {\r\n        // Format the date string to display only the part you want\r\n        const formattedDate = payload.value.slice(0, 9); // Assuming you want to display from the month onwards\r\n\r\n        return (\r\n            <text style={{ fontSize: \"10px\" }} x={x} y={y} dy={16} textAnchor=\"middle\" fill=\"#666\">\r\n                {formattedDate}\r\n            </text>\r\n        );\r\n    };\r\n\r\n    const CustomTooltip = ({ active, payload, label }) => {\r\n        if (active && payload && payload.length) {\r\n            return (\r\n                <div className=\"custom-tooltip bg-white p-2\" style={{ borderRight: \"2px solid #77BBFF\", borderLeft: \"2px solid #77BBFF\", borderRadius: \"5px\" }}>\r\n                    <span className=\"label\">Date : {`${label}`}</span> <br />\r\n                    {/* {activeTab !== \"tab3\" && <span>Value : {payload[0].value}</span> } */}\r\n                    {activeTab === \"tab3\" ? <span>Watch Time : {convertSecondsToTime(payload[0].value)}</span> : <span>Value : {payload[0].value}</span>}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    };\r\n    return (\r\n        <>\r\n            <div>\r\n                <ul className=\"nav nav-tabs\">\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'tab1' ? 'active' : ''}`} onClick={() => handleTabClick('tab1')}>\r\n                            <p>Total Views</p>\r\n                            <h3>{numberFormatShort(overalldata?.total_views)}</h3>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'tab2' ? 'active' : ''}`} onClick={() => handleTabClick('tab2')}>\r\n                            <p>Total Unique Views</p>\r\n                            <h3>{numberFormatShort(overalldata?.unique_views)}</h3>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'tab3' ? 'active' : ''}`} onClick={() => handleTabClick('tab3')}>\r\n                            <p>Video Watch Time</p>\r\n                            <h3>{convertSecondsToTime(overalldata?.watch_time)}</h3>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item d-none\">\r\n                        <div className={`nav-link ${activeTab === 'tab4' ? 'active' : ''}`} onClick={() => handleTabClick('tab4')}>\r\n                            <p>Drop-out rate</p>\r\n                            <h3>10% </h3>\r\n                        </div>\r\n                    </li>\r\n\r\n                </ul>\r\n                {/* <div className=\"tab-content mt-3\">\r\n                    <div className={`tab-pane fade ${activeTab === 'tab1' ? 'show active' : ''}`} id=\"tab1\" role=\"tabpanel\">\r\n                        <h5>Content of Tab 1</h5>\r\n                    </div>\r\n                    <div className={`tab-pane fade ${activeTab === 'tab2' ? 'show active' : ''}`} id=\"tab2\" role=\"tabpanel\">\r\n                        <h5>Content of Tab 2</h5>\r\n                    </div>\r\n                    <div className={`tab-pane fade ${activeTab === 'tab3' ? 'show active' : ''}`} id=\"tab3\" role=\"tabpanel\">\r\n                        <h5>Content of Tab 3</h5>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n            <ResponsiveContainer className=\"chart_engagement\" width=\"100%\" height=\"100%\">\r\n                <BarChart\r\n                    // width={500}\r\n                    // height={300}\r\n                    data={data}\r\n                    margin={{\r\n                        top: 20,\r\n                        right: 0,\r\n                        left: 0,\r\n                        bottom: 5,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"1 1\" />\r\n                    <XAxis dataKey=\"bar_date\" tick={<CustomXAxisTick />} />\r\n                    <YAxis />\r\n                    {/* <XAxis dataKey=\"bar_date\" tick={<CustomXAxisTick />} label={{ value: 'Month', position: 'insideLeft', offset: -10, style: { fontWeight: 'bold', fontSize: '12px' } }} />\r\n                    <YAxis label={{ value: 'Sales', angle: -90, position: 'insideLeft', offset: 0, style: { fontWeight: 'bold', fontSize: '12px' } }} /> */}\r\n                    <Tooltip content={<CustomTooltip />} />\r\n\r\n\r\n\r\n                    {activeTab === \"tab1\" && <Bar dataKey=\"total_views\" maxBarSize={20} fill=\"#77BBFF\" />}\r\n                    {activeTab === \"tab2\" && <Bar dataKey=\"unique_views\" maxBarSize={20} fill=\"#77BBFF\" />}\r\n                    {activeTab === \"tab3\" && <Bar dataKey=\"watch_time\" maxBarSize={20} fill=\"#77BBFF\" />}\r\n\r\n                    {activeTab === \"tab1\" && <Legend payload={\r\n                        [1].map(\r\n                            (item, index) => ({\r\n                                id: \"index\",\r\n                                type: \"rect\",\r\n                                value: `Total Views`,\r\n                                color: \"#77BBFF\"\r\n                            })\r\n                        )\r\n                    } />}\r\n                    {activeTab === \"tab2\" && <Legend payload={\r\n                        [1].map(\r\n                            (item, index) => ({\r\n                                id: \"index\",\r\n                                type: \"rect\",\r\n                                value: `Unique Views`,\r\n                                color: \"#77BBFF\"\r\n                            })\r\n                        )\r\n                    } />}\r\n                    {activeTab === \"tab3\" && <Legend payload={\r\n                        [1].map(\r\n                            (item, index) => ({\r\n                                id: \"index\",\r\n                                type: \"rect\",\r\n                                value: `Watch Time`,\r\n                                color: \"#77BBFF\"\r\n                            })\r\n                        )\r\n                    } />\r\n                    }\r\n\r\n\r\n                    {/* <Bar dataKey=\"uv\" fill=\"#82ca9d\" activeBar={<Rectangle fill=\"gold\" stroke=\"purple\" />} /> */}\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Perfomance;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { BarChart, Bar, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Rectangle } from 'recharts';\r\nimport \"../chart.css\"\r\nconst SalesConversion = () => {\r\n    const [data, setData] = useState([\r\n        { name: 'Jan', uv: 4000, pv: 2400, amt: 400 },\r\n        { name: 'Feb', uv: 3000, pv: 1398, amt: 210 },\r\n        { name: 'Mar', uv: 2000, pv: 9800, amt: 290 },\r\n        { name: 'Apr', uv: 2780, pv: 3908, amt: 100 },\r\n        { name: 'May', uv: 1890, pv: 4800, amt: 181 },\r\n        { name: 'Jun', uv: 2390, pv: 3800, amt: 500 },\r\n        { name: 'July', uv: 3490, pv: 4300, amt: 100 },\r\n        { name: 'Aug', uv: 3490, pv: 4300, amt: 330 },\r\n        { name: 'Sep', uv: 3490, pv: 4300, amt: 430 },\r\n        { name: 'Oct', uv: 3490, pv: 4300, amt: 140 },\r\n        { name: 'Nov', uv: 3490, pv: 4300, amt: 230 },\r\n        { name: 'Dec', uv: 3490, pv: 4300, amt: 110 },\r\n    ]);\r\n\r\n    // useEffect hook example (optional, use it if needed)\r\n    useEffect(() => {\r\n        setData([\r\n            { name: 'Jan', uv: 4000, pv: 2400, amt: 400 },\r\n            { name: 'Feb', uv: 3000, pv: 1398, amt: 210 },\r\n            { name: 'Mar', uv: 2000, pv: 9800, amt: 290 },\r\n            { name: 'Apr', uv: 2780, pv: 3908, amt: 100 },\r\n            { name: 'May', uv: 1890, pv: 4800, amt: 181 },\r\n            { name: 'Jun', uv: 2390, pv: 3800, amt: 500 },\r\n            { name: 'July', uv: 3490, pv: 4300, amt: 100 },\r\n            { name: 'Aug', uv: 3490, pv: 4300, amt: 330 },\r\n            { name: 'Sep', uv: 3490, pv: 4300, amt: 430 },\r\n            { name: 'Oct', uv: 3490, pv: 4300, amt: 140 },\r\n            { name: 'Nov', uv: 3490, pv: 4300, amt: 230 },\r\n            { name: 'Dec', uv: 3490, pv: 4300, amt: 110 },\r\n        ])\r\n    }, []);\r\n\r\n    const [activeTab, setActiveTab] = useState('totalsales');\r\n\r\n    const handleTabClick = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n    return (\r\n        <>\r\n            <div >\r\n                <ul className=\"nav nav-tabs\">\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'totalsales' ? 'active' : ''}`} onClick={() => handleTabClick('totalsales')}>\r\n                            <p>Total sales</p>\r\n                            <h3>$84.8k</h3>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'videosales' ? 'active' : ''}`} onClick={() => handleTabClick('videosales')}>\r\n                            <p>Sales from videos</p>\r\n                            <h3>$42.4k</h3>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'productsales' ? 'active' : ''}`} onClick={() => handleTabClick('productsales')}>\r\n                            <p>Sales from products</p>\r\n                            <h3>$42.4k</h3>\r\n                        </div>\r\n                    </li>\r\n\r\n                </ul>\r\n                {/* <div className=\"tab-content mt-3\">\r\n                    <div className={`tab-pane fade ${activeTab === 'totalsales' ? 'show active' : ''}`} id=\"totalsales\" role=\"tabpanel\">\r\n                        <h5>Content of Tab 1</h5>\r\n                    </div>\r\n                    <div className={`tab-pane fade ${activeTab === 'videosales' ? 'show active' : ''}`} id=\"videosales\" role=\"tabpanel\">\r\n                        <h5>Content of Tab 2</h5>\r\n                    </div>\r\n                    <div className={`tab-pane fade ${activeTab === 'productsales' ? 'show active' : ''}`} id=\"productsales\" role=\"tabpanel\">\r\n                        <h5>Content of Tab 3</h5>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n            <ResponsiveContainer className=\"chart_engagement\" width=\"100%\" height=\"100%\">\r\n                <BarChart\r\n                    width={500}\r\n                    height={300}\r\n                    data={data}\r\n                    margin={{\r\n                        top: 20,\r\n                        right: 0,\r\n                        left: 0,\r\n                        bottom: 5,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    {/* <Tooltip /> */}\r\n                    {/* <Legend /> */}\r\n                    <Bar dataKey=\"amt\" maxBarSize={20} fill=\"#77BBFF\" activeBar={<Rectangle fill=\"pink\" stroke=\"blue\" />} />\r\n                    {/* <Bar dataKey=\"uv\" fill=\"#82ca9d\" activeBar={<Rectangle fill=\"gold\" stroke=\"purple\" />} /> */}\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SalesConversion;\r\n","import React, { useState } from 'react'\r\nimport img from \"../assets/images/fake-dashboard.jpg\"\r\nimport EngageMent from '../components/charts/EngageMent'\r\nimport Perfomance from '../components/charts/Perfomance'\r\nimport SalesConversion from '../components/charts/SalesConversion'\r\nimport { DateRangePicker } from 'react-date-range'\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst DashBoard = () => {\r\n    const today = new Date();\r\n    const yesterday = new Date(today);\r\n    yesterday.setDate(today.getDate() - 1);\r\n    const [state, setState] = useState([\r\n        {\r\n            startDate: new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000),\r\n            endDate: yesterday,\r\n            key: 'selection'\r\n        }\r\n    ]);\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n    const handleApply = () => {\r\n        // Your apply logic here\r\n        setDropdownOpen(false); // Close the dropdown\r\n    };\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>SWIRL | Dashboard</title>\r\n            </Helmet>\r\n            <div className='card '>\r\n                <div className=\"row p-2\" >\r\n                    <div className=\"col\">\r\n                        <div className='d-flex'>\r\n                            <ul className=\"nav nav-tabs\" id=\"responsive-tabs\" role=\"tablist\">\r\n                                <li className=\"nav-item\" role=\"presentation\">\r\n                                    <button className=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#home\" type=\"button\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Shoppable Video</button>\r\n                                </li>\r\n                                <li className=\"nav-item\" role=\"presentation\">\r\n                                    <button className=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#profile\" type=\"button\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Live Stream</button>\r\n                                </li>\r\n\r\n                            </ul>\r\n                            <div className='ms-auto d-flex align-items-center' >\r\n                                <div className=\"dropdown\">\r\n\r\n                                    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\r\n                                        <Dropdown.Toggle id=\"dropdown-basic\" className='bg-transparent text-dark border-dark'>\r\n                                            {state[0].endDate !== null ? `${state[0].startDate.toString().slice(4, 15)} to ${state[0].endDate.toString().slice(4, 15)}` : \"Filter by date\"}\r\n                                        </Dropdown.Toggle>\r\n\r\n                                        <Dropdown.Menu>\r\n                                            <DateRangePicker\r\n                                                editableDateInputs={false}\r\n                                                onChange={item => setState([item.selection])}\r\n                                                moveRangeOnFirstSelection={true}\r\n                                                ranges={state}\r\n                                                months={2}\r\n                                                direction='horizontal'\r\n                                                maxDate={yesterday}\r\n                                            />\r\n                                            <div className='w-100'>\r\n                                                <button id=\"dropdown-basic\" className='btn btn-sm btn-primary float-end me-3' onClick={handleApply}>Done</button>\r\n                                                <button id=\"dropdown-basic\" className='btn btn-sm btn-outline-primary float-end me-3' onClick={() => {\r\n                                                    setState([\r\n                                                        {\r\n                                                            startDate: new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000),\r\n                                                            endDate: yesterday,\r\n                                                            key: 'selection'\r\n                                                        }\r\n                                                    ])\r\n                                                }}>Reset</button>\r\n\r\n                                            </div>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tab-content p-3\" id=\"responsive-tabs-content\">\r\n                            <div className=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\r\n                                <ul className=\"nav nav-tabs\" id=\"responsive-tabs\" role=\"tablist\">\r\n\r\n                                    <li className=\"nav-item\" role=\"presentation\">\r\n                                        <button className=\"nav-link active\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#engagement\" type=\"button\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Engagment</button>\r\n                                    </li>\r\n                                    <li className=\"nav-item\" role=\"presentation\">\r\n                                        <button className=\"nav-link \" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#Performance\" type=\"button\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Performance</button>\r\n                                    </li>\r\n                                    <li className=\"nav-item\" role=\"presentation\">\r\n                                        <button className=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#sconversion\" type=\"button\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Sales Conversion</button>\r\n                                    </li>\r\n\r\n                                </ul>\r\n                                <div className=\"tab-content p-3\" id=\"responsive-tabs-content\">\r\n                                    <div className=\"tab-pane fade show active\" id=\"engagement\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\r\n                                        <EngageMent selectedDate={state[0]} />\r\n\r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"Performance\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\r\n                                        <Perfomance selectedDate={state[0]} />\r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"sconversion\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\r\n                                        <SalesConversion selectedDate={state[0]} />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"tab-pane fade\" id=\"profile\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\r\n                                <div style={{ height: \"60vh\", width: \"70vw\", position: \"absolute\" }}>\r\n                                    <img src={img} alt='coming_soon' style={{ height: \"60vh\", width: \"70vw\" }} />\r\n                                </div>\r\n                                <div style={{ height: \"60vh\", width: \"70vw\", backgroundColor: \"rgba(0,0,0,0.6)\", position: \"relative\", display: \"grid\", placeItems: \"center\" }}>\r\n\r\n                                    <div className='text-center text-white'>\r\n                                        <h2>Coming soon...</h2>\r\n                                        <p>We are working on it.</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashBoard","function numberFormatShort(n, precision = 1) {\r\n    if (n < 900) {\r\n        // 0 - 900\r\n        let n_format = parseInt(n);\r\n        let suffix = \"\";\r\n        return n_format + suffix;\r\n    } else if (n < 900000) {\r\n        // 0.9k-850k\r\n        let n_format = (parseInt(n) / 1000).toFixed(precision);\r\n        let suffix = \"K\";\r\n        return n_format + suffix;\r\n    } else if (n < 900000000) {\r\n        // 0.9m-850m\r\n        let n_format = (parseInt(n) / 1000000).toFixed(precision);\r\n        let suffix = \"M\";\r\n        return n_format + suffix;\r\n    } else if (n < 900000000000) {\r\n        // 0.9b-850b\r\n        let n_format = (parseInt(n) / 1000000000).toFixed(precision);\r\n        let suffix = \"B\";\r\n        return n_format + suffix;\r\n    } else if (n === undefined || n === null) {\r\n        return 0\r\n    } else {\r\n        // 0.9t+\r\n        let n_format = (parseInt(n) / 1000000000000).toFixed(precision);\r\n        let suffix = \"T\";\r\n        return n_format + suffix;\r\n    }\r\n}\r\n\r\nfunction animateCount(targetNumber, duration) {\r\n    let currentNumber = 0;\r\n    const increment = Math.ceil(targetNumber / (duration / 50)); // Assuming 50 steps per second\r\n\r\n    const interval = setInterval(() => {\r\n        currentNumber += increment;\r\n        document.getElementById('counter').innerText = currentNumber;\r\n\r\n        if (currentNumber >= targetNumber) {\r\n            clearInterval(interval);\r\n            document.getElementById('counter').innerText = targetNumber;\r\n        }\r\n    }, 20); // Update every 20 milliseconds\r\n}\r\nmodule.exports = {\r\n    numberFormatShort,\r\n    animateCount\r\n}"],"names":["_ref","targetNumber","currentNumber","setCurrentNumber","useState","useEffect","increment","Math","ceil","interval","setInterval","prevNumber","newNumber","clearInterval","number","toFixed","EngageMent","data","setData","name","uv","pv","amt","activeTab","setActiveTab","handleTabClick","tab","_jsxs","_Fragment","children","className","_jsx","concat","onClick","ZeroToHeroCount","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","Label","value","offset","position","YAxis","angle","Bar","maxBarSize","fill","activeBar","Rectangle","stroke","selectedDate","overalldata","setOverallData","user","useSelector","state","auth","convertSecondsToTime","seconds","isNaN","hours","floor","minutes","remainingSeconds","getDataForPerfomance","useCallback","async","response","axios","get","brand_id","format","startDate","endDate","resp","totalData","reduce","totals","entry","unique_views","total_views","watch_time","calculateTotals","newData","array","months","days","map","obj","year","month","day","date","split","Number","Date","shortYear","getFullYear","toString","substr","barDate","getDate","getMonth","getDay","bar_date","addBarDate","error","console","log","CustomXAxisTick","_ref2","x","y","payload","formattedDate","slice","style","fontSize","dy","textAnchor","CustomTooltip","_ref3","active","label","length","borderRight","borderLeft","borderRadius","numberFormatShort","tick","Tooltip","content","Legend","item","index","id","type","color","SalesConversion","DashBoard","today","yesterday","setDate","setState","getTime","key","dropdownOpen","setDropdownOpen","Helmet","role","Dropdown","show","onToggle","toggleDropdown","Toggle","Menu","DateRangePicker","editableDateInputs","onChange","selection","moveRangeOnFirstSelection","ranges","direction","maxDate","handleApply","Perfomance","src","img","alt","backgroundColor","display","placeItems","module","exports","n","precision","arguments","undefined","parseInt","animateCount","duration","document","getElementById","innerText"],"sourceRoot":""}