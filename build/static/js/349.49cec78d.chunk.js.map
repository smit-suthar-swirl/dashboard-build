{"version":3,"file":"static/js/349.49cec78d.chunk.js","mappings":"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","sources":["firebase-config.js","components/videomodal/Comment.js","components/videomodal/PinComment.js","components/videomodal/VideoModal.js","components/ask-question-modal/AskQuestionModel.js","components/reports/Report.js","components/video-settings/VideoplayerSetting.js","pages/SSVpage.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"@firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: window.atob('QUl6YVN5QXVCWEJUb2NzaFU1a2V4T28tTzNqNW40SkZsblZReU9v'),\r\n    authDomain: 'swirl-short-vido.firebaseapp.com',\r\n    projectId: 'swirl-short-vido',\r\n    storageBucket: 'swirl-short-vido.appspot.com'\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const db = getFirestore(app);","import React, { useState } from 'react'\r\nimport { RiPushpin2Fill, RiPushpin2Line, RiPushpinFill } from \"react-icons/ri\";\r\nimport { FaTrash } from 'react-icons/fa';\r\nimport { IoTrashOutline } from \"react-icons/io5\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport moment from 'moment';\r\nconst Comment = ({ el, updatePinStatus, removeComment }) => {\r\n    const [visible, setVisible] = useState(false)\r\n    // Convert the timestamp to a number\r\n    const timestampNumber = Number(el.createdAt);\r\n\r\n    // Create a Moment.js object from the timestamp\r\n    const momentTime = moment(timestampNumber);\r\n    const timeFromNow = momentTime.fromNow()\r\n    return (\r\n        <div className={`d-flex ps-2 pe-2 pt-2 hover-target-${el.id}`} onMouseEnter={() => {\r\n            setVisible(true)\r\n        }}\r\n            onMouseLeave={() => { setVisible(false) }}>\r\n            <img style={{ height: \"30px\", width: \"30px\", borderRadius: \"50%\" }} src={el.brand_logo} />\r\n            <div className='d-flex ms-2 w-100 justify-content-between'>\r\n                <div>\r\n                    <b>{el.uName}<GoDotFill size={10} color='#D9D9D9' /><small className='ps-1' style={{ color: \"rgba(0,0,0,0.5)\" }}>{timeFromNow}</small></b>\r\n                    <p style={{ fontWeight: \"lighter\", color: \"#515151\" }}>{el.comment} </p>\r\n                </div>\r\n                <div className={`d-flex hidden-div-${el.id} gap-1`} style={{ visibility: visible ? \"visible\" : \"hidden\", cursor: \"pointer\" }}>\r\n                    {el.isPinned == 1 ? <RiPushpin2Fill onClick={() => updatePinStatus(el)} size={21} /> : <RiPushpin2Line onClick={() => updatePinStatus(el)} size={21} />}\r\n                    <IoTrashOutline size={18} onClick={() => removeComment(el)} color='red' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment","import React, { useState } from 'react'\r\nimport { RiPushpin2Fill, RiPushpin2Line, RiPushpinFill } from \"react-icons/ri\";\r\nimport { FaTrash } from 'react-icons/fa';\r\nimport { IoTrashOutline } from \"react-icons/io5\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport moment from 'moment';\r\nconst PinComment = ({ el, updatePinStatus, removeComment }) => {\r\n    const [visible, setVisible] = useState(false)\r\n    // Convert the timestamp to a number\r\n    const timestampNumber = Number(el.createdAt);\r\n\r\n    // Create a Moment.js object from the timestamp\r\n    const momentTime = moment(timestampNumber);\r\n    const timeFromNow = momentTime.fromNow()\r\n    return (\r\n        <div className={`d-flex ps-2 pe-2 pt-2 hover-target-${el.id}`} style={{ backgroundColor: \"#F3F4F8\" }} onMouseEnter={() => {\r\n            setVisible(true)\r\n        }}\r\n            onMouseLeave={() => { setVisible(false) }}>\r\n            <img style={{ height: \"30px\", width: \"30px\", borderRadius: \"50%\" }} src={el.brand_logo} />\r\n            <div className='d-flex ms-2 w-100 justify-content-between'>\r\n                <div>\r\n                    <b>{el.uName}<GoDotFill size={10} color='#D9D9D9' /><small className='ps-1' style={{ color: \"rgba(0,0,0,0.5)\" }}>{timeFromNow}</small></b>\r\n                    <p style={{ fontWeight: \"lighter\", color: \"#515151\" }}>{el.comment} </p>\r\n                </div>\r\n                <div className={`d-flex hidden-div-${el.id} gap-1`} style={{ visibility: visible ? \"visible\" : \"hidden\", cursor: \"pointer\" }}>\r\n                    {el.isPinned == 1 ? <RiPushpin2Fill onClick={() => updatePinStatus(el)} size={21} /> : <RiPushpin2Line onClick={() => updatePinStatus(el)} size={21} />}\r\n                    <IoTrashOutline size={18} onClick={() => removeComment(el)} color='red' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PinComment","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { db } from '../../firebase-config';\r\nimport { getDocs, collection, orderBy, query, addDoc, doc, setDoc, updateDoc, onSnapshot } from 'firebase/firestore';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport \"./uploadmodel.css\"\r\nimport Comment from './Comment';\r\nimport PinComment from './PinComment';\r\n// import firestore from 'firebase/firestore';\r\n\r\n\r\n\r\nconst VideoModal = ({ show, handleClose, data }) => {\r\n    const user = useSelector(state => state.auth.user);\r\n    const [products, setProducts] = useState([])\r\n    const [loadingProducts, setLoadingProducts] = useState(false)\r\n    const [comments, setComments] = useState([])\r\n    const [message, setMessage] = useState(\"\")\r\n    const [pinMessage, setPinMessage] = useState([])\r\n    const [tab, setTab] = useState(\"products\")\r\n    // var element = document.getElementById('');\r\n    const [pinnSecHeight, setPinsecHeight] = useState()\r\n    const chatEndRef = useRef(null);\r\n\r\n    const scrollToBottom = () => {\r\n        chatEndRef.current?.scrollIntoView();\r\n    };\r\n    const fetchData = async (videoId) => {\r\n        try {\r\n\r\n            // Reference to the 'comment' collection under the 'v8760' document\r\n            const commentRef = collection(db, 'ssv13_comments', `v${videoId}`, 'comments');\r\n\r\n            // Query the documents in the 'comment' collection, sorted by 'createdAt' in descending order\r\n            const q = query(commentRef, orderBy('createdAt', 'asc'));\r\n            const snapshot = await getDocs(q);\r\n\r\n            // Extract the data from each document\r\n            const commentsData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n\r\n\r\n\r\n            const cms = commentsData.filter(obj => obj.isRemoved != 1);\r\n            const objectsWithPin1 = cms.filter(obj => obj.isPinned == 1);\r\n\r\n            setComments(cms)\r\n            setPinMessage(objectsWithPin1)\r\n            setTimeout(() => {\r\n                scrollToBottom()\r\n            }, 100);\r\n        } catch (error) {\r\n            console.error('Error fetching data: ', error);\r\n        }\r\n    };\r\n\r\n    // const addCommentsListnerssv13 = (vId) => {\r\n    //     // Assuming you're using Firestore for real-time updates\r\n    //     const commentRef = db.collection(`ssv13_comments/v${vId}/comments`);\r\n\r\n    //     // Subscribe to real-time updates for comments\r\n    //     const unsubscribe = commentRef.onSnapshot((snapshot) => {\r\n    //         snapshot.docChanges().forEach((change) => {\r\n    //             if (change.type === \"added\") {\r\n    //                 // Handle newly added comments\r\n    //                 console.log(\"New comment added:\", change.doc.data());\r\n    //             }\r\n    //             // You can handle other types of changes here (modified, removed)\r\n    //         });\r\n    //     });\r\n\r\n    //     // Optionally, you can return the unsubscribe function if you want to stop listening to updates\r\n    //     return unsubscribe;\r\n    // };\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if (show && tab == \"comments\") {\r\n            fetchData(data?.video_id);\r\n\r\n        }\r\n\r\n    }, [show, data.video_id, tab]);\r\n\r\n    const fetchProducts = async () => {\r\n        setLoadingProducts(true)\r\n        try {\r\n            await axios.get(`https://liveshopping.asia/getProductInfoByVideoId?brandId=${user.brand_id}&videoId=${data.video_id}`).then((res) => {\r\n                if (res.data) {\r\n                    setProducts(res.data.productResp)\r\n                    // setProducts([])\r\n                    setLoadingProducts(false)\r\n                    scrollToBottom()\r\n                } else {\r\n                    setProducts([])\r\n                    setLoadingProducts(false)\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            setProducts([])\r\n            setLoadingProducts(false)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (show) {\r\n            fetchProducts()\r\n        }\r\n    }, [show])\r\n\r\n    const addVideoComment = async (vId, cData) => {\r\n        try {\r\n\r\n            const videoDocRef = doc(db, `ssv13_comments/v${vId}`);\r\n            await setDoc(videoDocRef, {});\r\n            const commentDocRef = await addDoc(collection(db, `ssv13_comments/v${vId}/comments`), cData);\r\n            // if (!ssv13_commentsLoaded.includes(vId)) {\r\n            //     // addCommentsListnerssv13(vId);\r\n            // }\r\n            // await fetchData(data?.video_id)\r\n            scrollToBottom()\r\n            subComment()\r\n\r\n            return commentDocRef.id; // Assuming you might need the ID of the added comment\r\n        } catch (error) {\r\n            console.error(\"Error adding video comment document: \", error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            let cData = {\r\n                uName: user.first_name,\r\n                comment: message,\r\n                createdAt: new Date().getTime(),\r\n                isPinned: 0,\r\n                isRemoved: 0,\r\n                brand_logo: user?.user_profile\r\n            }\r\n\r\n            await addVideoComment(data.video_id, cData)\r\n            subComment()\r\n            e.target.reset()\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const updatePinStatus = async (comment) => {\r\n        const commentDocRef = doc(db, 'ssv13_comments', `v${data.video_id}`, 'comments', comment.id);\r\n        if (pinMessage.length < 4) {\r\n            await updateDoc(commentDocRef, { isPinned: comment.isPinned == 0 ? 1 : 0 });\r\n        }\r\n        else {\r\n            await updateDoc(commentDocRef, { isPinned: 1 ? 0 : 0 });\r\n        }\r\n        subComment()\r\n        // await fetchData(data.video_id)\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const removeComment = async (comment) => {\r\n        const commentDocRef = doc(db, 'ssv13_comments', `v${data.video_id}`, 'comments', comment.id);\r\n        await updateDoc(commentDocRef, { isRemoved: 1 });\r\n        subComment()\r\n        // await fetchData(data.video_id)\r\n    }\r\n    const videoId = data.video_id;\r\n    const subComment = () => {\r\n        // Reference to the 'comments' collection under the 'v{videoId}' document\r\n        const commentRef = collection(db, 'ssv13_comments', `v${videoId}`, 'comments');\r\n        // Query the documents in the 'comments' collection, sorted by 'createdAt' in ascending order\r\n        const q = query(commentRef, orderBy('createdAt', 'asc'));\r\n\r\n        // Setting up the onSnapshot listener for real-time updates\r\n        const unsubscribe = onSnapshot(q, (snapshot) => {\r\n            // Extract the data from each document\r\n            const commentsData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n\r\n            const cms = commentsData.filter(obj => obj.isRemoved != 1);\r\n            const objectsWithPin1 = cms.filter(obj => obj.isPinned == 1);\r\n            setComments(cms);\r\n            setPinMessage(objectsWithPin1);\r\n        }, (error) => {\r\n            console.error('Error fetching data: ', error);\r\n        });\r\n    }\r\n    // useEffect(() => {\r\n\r\n    //     // Clean up the listener on component unmount\r\n    //     return () => unsubscribe();\r\n    // }, [videoId]);\r\n\r\n    useEffect(() => {\r\n        // setTimeout(() => {\r\n        if (tab === \"comments\" && show) {\r\n            const element = document.getElementById('pinnedcommentsection');\r\n\r\n            const pinsecHeight = element.offsetHeight\r\n            const element2 = document.getElementById('unpinnedcommentsection')\r\n            const element3 = document.getElementById('main-section-comments');\r\n            // console.log();\r\n            setPinsecHeight(element3.offsetHeight - pinsecHeight)\r\n            if (element2) {\r\n                element2.style.height = window.innerHeight - pinsecHeight\r\n            }\r\n        }\r\n    }, [tab, pinMessage, show]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setTab(\"products\")\r\n        }\r\n    }, [show])\r\n    // useEffect(() => {\r\n    //     setTimeout(() => {\r\n    //         if (chatEndRef && comments.length > 0) {\r\n    //             scrollToBottom();\r\n    //         }\r\n\r\n    //     }, 300);\r\n    // }, []);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal show={show} className='d-grid modal_video' size='lg' onHide={handleClose} >\r\n\r\n                <Modal.Body>\r\n                    <div className=' d-flex m-0 p-0'  >\r\n                        <div style={{ maxWidth: \"400px\", margin: \"0\", padding: \"0\" }}>\r\n                            <video className='modal_video' controls width=\"600\" autoPlay loop muted>\r\n                                <source src={data.url} type=\"video/mp4\" />\r\n                                Your browser does not support the video tag.\r\n                            </video>\r\n                        </div>\r\n                        {products.length > 0 && <div style={{ width: \"400px\" }} >\r\n                            <ul className=\"nav nav-tabs\" id=\"responsive-tabs\" role=\"tablist\">\r\n                                <li className=\"nav-item\" role=\"presentation\">\r\n                                    <button className=\"nav-link  active\" id=\"product-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#product\" type=\"button\" role=\"tab\" aria-controls=\"video\" aria-selected=\"true\" onClick={() => setTab(\"products\")} >Products</button>\r\n                                </li>\r\n\r\n                                {/* <li className=\"nav-item\" role=\"presentation\">\r\n                                    <button className=\"nav-link \" id=\"comments-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#comments\" type=\"button\" role=\"tab\" aria-controls=\"Reports\" aria-selected=\"false\" onClick={() => setTab(\"comments\")}>Comments</button>\r\n                                </li> */}\r\n                            </ul>\r\n                            <div className=\"tab-content \" id=\"responsive-tabs-content\" style={{ height: \"calc(100% - 42px)\" }}>\r\n                                <div className=\"tab-pane fade show active h-100\" id=\"product\" role=\"tabpanel\" aria-labelledby=\"product-tab\">\r\n                                    {loadingProducts ? <>\r\n                                        <p className='text-muted mt-5 text-center'>  Loading...</p></> : <>\r\n                                        {products.map((el, index) => {\r\n                                            const currencySymbol = new Intl.NumberFormat(undefined, {\r\n                                                style: \"currency\",\r\n                                                currency: el.currencyName,\r\n                                            })\r\n                                                .formatToParts(0)\r\n                                                .find((part) => part.type === \"currency\").value;\r\n\r\n                                            return <div className='p-2 mt-1 m-0 d-flex product_card'>\r\n                                                <img alt='productmini' src={el.image} className='rounded' style={{ height: \"60px\", width: \"60px\", border: \"1px solid #aaa  \" }} />\r\n                                                <div className='ps-2'>\r\n                                                    <h6 className='mb-0 product_title_video_model' title={el.title}>{el.title} </h6>\r\n                                                    <p className='prouct_desc'>{currencySymbol}{parseInt(el.discountPrice)?.toLocaleString()} <span className='text-muted'><del>{currencySymbol}{parseInt(el.price)?.toLocaleString()}</del></span> </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        })}\r\n                                    </>}\r\n\r\n\r\n                                </div>\r\n                                <div className=\"tab-pane fade h-100\" id=\"comments\" role=\"tabpanel\" aria-labelledby=\"comments-tab\">\r\n\r\n                                    <div className=\"card h-100\">\r\n                                        <div className=\"h-100\" style={{ overflow: 'hidden' }} id='main-section-comments'>\r\n                                            {pinMessage.length > 0 ?\r\n                                                <div className='pin display-flex flex-column'   >\r\n                                                    {/* {pinMessage.map((el) => {\r\n                                                        return <p className='bg-dark text-light' >{el.comment}({el.uName})  <span onClick={() => { updatePinStatus(el) }}>(unpin)</span><span onClick={() => { removeComment(el) }}>(delete)</span></p>\r\n                                                    })} */}\r\n                                                    <div id='pinnedcommentsection'>\r\n                                                        {pinMessage.map((el) => {\r\n                                                            return <PinComment el={el} updatePinStatus={updatePinStatus} removeComment={removeComment} />\r\n                                                        })}\r\n                                                    </div>\r\n                                                </div> : <div id='pinnedcommentsection'></div>}\r\n\r\n                                            {comments.length > 0 ?\r\n                                                <>\r\n                                                    <div class='display-flex flex-column' id='unpinnedcommentsection' style={{ overflow: \"auto\", height: `${pinnSecHeight}px` }}>\r\n\r\n                                                        {comments.map((el) => {\r\n\r\n                                                            return <Comment el={el} updatePinStatus={updatePinStatus} removeComment={removeComment} />\r\n                                                        })}\r\n                                                        <div ref={chatEndRef}></div>\r\n                                                    </div>\r\n                                                </> :\r\n                                                <p className='text-muted text-center mt-5'>No comments</p>}\r\n\r\n                                        </div>\r\n                                        <div className='card-footer '>\r\n                                            <form className='d-flex' onSubmit={(e) => { handleSubmit(e) }}>\r\n                                                <input className='form-control mt-auto' onChange={(e) => { setMessage(e.target.value) }} placeholder='Type something here..' type='text' />\r\n                                                <button type='submit' className='btn btn-sm btn-dark ms-2' disabled={message.length > 0 ? false : true}> Send</button>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        {/* <div className='col-6 m-0 '>\r\n                            <div className='p-2 mt-1 m-0 d-flex'>\r\n                                <img alt='productmini' src='https://cdn.shopify.com/s/files/1/0088/4031/4931/files/39_f63c01f8-48d6-41b8-8066-1026f6f98e60.jpg?v=1702991482' className='rounded' style={{ height: \"60px\", width: \"60px\" }} />\r\n                                <div className='ps-2'>\r\n                                    <h6 className='mb-0'>{data.video_title} 1</h6>\r\n                                    <p className='prouct_desc'>Here descc</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='p-2 mt-1 m-0 d-flex border-top'>\r\n                                <img alt='productmini' src='https://cdn.shopify.com/s/files/1/0088/4031/4931/files/39_f63c01f8-48d6-41b8-8066-1026f6f98e60.jpg?v=1702991482' className='rounded' style={{ height: \"60px\", width: \"60px\" }} />\r\n                                <div className='ps-2'>\r\n                                    <h6 className='mb-0'>{data.video_title} 2</h6>\r\n                                    <p className='prouct_desc'>Here descc</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='p-2 mt-1 m-0 d-flex border-top'>\r\n                                <img alt='productmini' src='https://cdn.shopify.com/s/files/1/0088/4031/4931/files/39_f63c01f8-48d6-41b8-8066-1026f6f98e60.jpg?v=1702991482' className='rounded' style={{ height: \"60px\", width: \"60px\" }} />\r\n                                <div className='ps-2'>\r\n                                    <h6 className='mb-0'>{data.video_title} 3</h6>\r\n                                    <p className='prouct_desc'>Here descc</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div> */}\r\n                    </div>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default VideoModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport DataTable from 'react-data-table-component';\r\nimport \"./ask.css\"\r\nimport { BsQuestionCircleFill } from 'react-icons/bs';\r\nimport { format } from 'date-fns';\r\nimport axios from 'axios';\r\nimport { BiExport } from 'react-icons/bi';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport { RotatingLines } from 'react-loader-spinner';\r\nconst AskQuestionModel = ({ show, handleClose, data }) => {\r\n    const [askQuestData, setAskQuestData] = useState([])\r\n    const [pending, setPending] = React.useState(false);\r\n    const columns = [\r\n        {\r\n            name: 'Video Title',\r\n            selector: row => data.video_title,\r\n        },\r\n        {\r\n            name: 'Name',\r\n            selector: row => row.name,\r\n        },\r\n        {\r\n            name: 'Date',\r\n            selector: row => data.date,\r\n        },\r\n        {\r\n            name: 'Mobile',\r\n            selector: row => row.mobile,\r\n        },\r\n        {\r\n            name: 'Message',\r\n            selector: row => row.message,\r\n        }\r\n    ];\r\n\r\n    // console.log(`${data.startDate.getFullYear()}-${data.startDate.getMonth()}-${data.startDate.getDate()}`);\r\n    async function fetchAskQuestionsData() {\r\n        setPending(true)\r\n        try {\r\n            let requestBody = new FormData();\r\n            requestBody.append(\"brand_id\", data.brand_id);\r\n            requestBody.append(\"start_date\", format(data.startDate, 'yyyy-MM-dd'));\r\n            requestBody.append(\"end_date\", format(data.endDate, 'yyyy-MM-dd'));\r\n            requestBody.append(\"video_id\", data.video_id);\r\n            const response = await axios.post(\r\n                \"https://bigleap.live/index.php/APIv1/ShortVideoAnalytics/getAskquestion\",\r\n                requestBody\r\n            ).then((res) => {\r\n                setAskQuestData(res.data.data)\r\n                setPending(false)\r\n            }).catch((errr) => {\r\n                console.log(errr);\r\n                setPending(false)\r\n            })\r\n\r\n\r\n\r\n        } catch (error) {\r\n            setPending(false)\r\n            throw error; // Rethrow the error if any occurs\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (show) {\r\n            fetchAskQuestionsData(data.date)\r\n        }\r\n    }, [data.date])\r\n    const downloadExcel = () => {\r\n        const worksheet = XLSX.utils.json_to_sheet(askQuestData);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n        const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n        saveAs(new Blob([excelBuffer], { type: 'application/octet-stream' }), 'askQuestData.xlsx');\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal show={show} className='d-grid w-100 askquestion_modal ' size='lg' onHide={handleClose}>\r\n                <Modal.Title className='p-3 pb-0'>Asked Questions <BsQuestionCircleFill style={{ cursor: \"pointer\" }} title='These are raised questions asked by viewers on video or product' /><button className='btn btn-sm btn-outline-dark float-end' onClick={() => downloadExcel()}><span className='mt-3'>Export</span> <BiExport size={25} /></button><hr /></Modal.Title>\r\n                <Modal.Body className='p-3 pt-0'>\r\n                    <DataTable\r\n                        columns={columns}\r\n                        data={askQuestData}\r\n                        progressPending={pending}\r\n                        progressComponent={<div className='p-3 m-4' >\r\n                            <RotatingLines height={30} width={30} strokeColor=\"grey\" />\r\n                        </div>}\r\n\r\n                    />\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AskQuestionModel;\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport DataTable from 'react-data-table-component';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { DateRangePicker } from 'react-date-range'\r\nimport { FaFileCsv, FaFileExcel, FaFilePdf, FaSearch } from 'react-icons/fa';\r\nimport VideoModal from '../videomodal/VideoModal';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable'; // Importing jspdf-autotable for table creation\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { format } from 'date-fns';\r\nimport AskQuestionModel from '../ask-question-modal/AskQuestionModel';\r\nimport { AiOutlinePlaySquare } from 'react-icons/ai';\r\nimport { RotatingLines, TailSpin } from 'react-loader-spinner';\r\nimport { BiExport } from 'react-icons/bi';\r\n\r\nconst Report = ({ state, setState }) => {\r\n    const today = new Date();\r\n    const yesterday = new Date(today);\r\n    const [show, setShow] = useState(false);\r\n    const [singleVideoData, setSingleVideoData] = useState([])\r\n    const [askQuestionModelShow, setAskQuestionModelShow] = useState(false)\r\n    const [askquestionData, setAskquestionData] = useState([])\r\n    const [filteredData, setFilteredData] = useState([])\r\n    const [filterText, setFilterText] = useState(\"\")\r\n    const [filtered, setFiltered] = useState(false)\r\n    const handleClose = () => setShow(false);\r\n    const [pending, setPending] = React.useState(false);\r\n    const handleCloseAskQuestion = () => setAskQuestionModelShow(false);\r\n\r\n    const authData = useSelector((state => state.auth.user))\r\n    const [data, setData] = useState([])\r\n    yesterday.setDate(today.getDate() - 1);\r\n    // const [state, setState] = useState([\r\n    //     {\r\n    //         startDate: new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000),\r\n    //         endDate: yesterday,\r\n    //         key: 'selection'\r\n    //     }\r\n    // ]);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     return () => {\r\n    //         setState([\r\n    //             {\r\n    //                 startDate: new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000),\r\n    //                 endDate: yesterday,\r\n    //                 key: 'selection'\r\n    //             }\r\n    //         ])\r\n    //     }\r\n    // }, [])\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n    const handleApply = () => {\r\n        // Your apply logic here\r\n        setDropdownOpen(false); // Close the dropdown\r\n    };\r\n    function convertSecondsToTime(seconds) {\r\n        if (isNaN(seconds) || seconds < 0) {\r\n            return \"0\";\r\n        }\r\n\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        const remainingSeconds = seconds % 60;\r\n\r\n        if (hours > 0) {\r\n            return `${hours}hr ${minutes}min ${remainingSeconds}sec`;\r\n        } else if (minutes > 0) {\r\n            return `${minutes}min ${remainingSeconds}sec`;\r\n        } else {\r\n            return `${remainingSeconds}sec`;\r\n        }\r\n    }\r\n    const myFun = () => {\r\n        let total = 0\r\n        let wtime = 0\r\n        data && data.map((el) => {\r\n            total += parseInt(el.total_views)\r\n            wtime += parseInt(el.total_watchtime)\r\n\r\n        })\r\n        // console.log(total);\r\n        // console.log(convertSecondsToTime(wtime));\r\n    }\r\n    const columns = [\r\n        {\r\n            // name: 'Sr',\r\n            selector: row => row.index + 1,\r\n            sortable: true,\r\n            width: \"4%\"\r\n        },\r\n        {\r\n            name: 'Video Title',\r\n            selector: row => row.video_title,\r\n            sortable: true,\r\n            width: \"22.2%\",\r\n            cell: (row) => {\r\n                return <>\r\n                    <p className='pt-4' title={row.video_title} style={{ padding: \"2px\", overflow: \"hidden\", whiteSpace: \"nowrap\", maxWidth: \"280px\", textOverflow: \"ellipsis\", cursor: \"pointer\" }} onClick={() => {\r\n                        setSingleVideoData(row)\r\n                        setShow(true)\r\n                    }}>{row.video_title ? row.video_title : \"no title\"} </p >\r\n                    <span onClick={() => {\r\n                        setSingleVideoData(row)\r\n                        setShow(true)\r\n                    }} style={{ cursor: \"pointer\" }}>  <AiOutlinePlaySquare size={20} className='ms-1' /></span>\r\n                </>\r\n            },\r\n\r\n        },\r\n        {\r\n            name: 'Total Views',\r\n            selector: row => row.total_views,\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(255, 0, 0,.1)\"\r\n            }\r\n        },\r\n        {\r\n            name: `Unique  Views`,\r\n            selector: row => row.total_unique_views,\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(255, 0, 0,.1)\"\r\n            }\r\n        },\r\n        {\r\n            name: 'Watch Time [Mins]',\r\n            selector: row => row.total_watchtime,\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(255, 0, 0,.1)\"\r\n            },\r\n            cell: (row) => {\r\n                return (parseInt(row.total_watchtime) / 60).toFixed(2)\r\n            }\r\n        },\r\n        {\r\n            name: 'Avg. Watch Time [Secs]',\r\n            selector: row => Math.round(row.average_watchtime),\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(255, 0, 0,.1)\"\r\n            },\r\n\r\n        },\r\n        {\r\n            name: 'Engage. Rate %',\r\n            selector: row => row.engagement_rate === null ? `${\"0\" + \"%\"}` : `${Math.round(row.engagement_rate)}%`,\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(0, 255, 71, .1)\"\r\n            }\r\n        },\r\n        {\r\n            name: 'CTR%',\r\n            selector: row => `${Math.round(row.ctr_rate)}%`,\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(0, 255, 71, .1)\"\r\n            }\r\n        },\r\n        {\r\n            name: 'Add To Cart',\r\n            selector: row => row.addtoCart,\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(0, 255, 71, .1)\"\r\n            }\r\n        },\r\n        {\r\n            name: 'Buy Now',\r\n            selector: row => row.buyNow,\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(0, 255, 71, .1)\"\r\n            }\r\n        },\r\n        {\r\n            name: 'Ask Question',\r\n            selector: row => row.askQuestion,\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(0, 255, 71, .1)\"\r\n            },\r\n            cell: (row) => {\r\n                return row.askQuestion > 0 ? <p onClick={() => {\r\n                    setAskQuestionModelShow(true)\r\n                    setAskquestionData(row)\r\n                }} style={{ cursor: \"pointer\" }}><span className='badge_ask_count'>{row.askQuestion}</span></p> : <p style={{ padding: \"3px 5px\" }}>{row.askQuestion}</p>\r\n            }\r\n        },\r\n    ]\r\n    // const handleRowClicked = (row) => {\r\n    //     setSingleVideoData(row)\r\n    //     setShow(true)\r\n    // }\r\n    const CustomSortIconComponent = () => {\r\n        return <>\r\n\r\n            <div className='ms-3'>\r\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M13.3333 2.6665V10.6665H15.3333L12.6667 13.9998L10 10.6665H12V2.6665H13.3333ZM8 11.9998V13.3332H2V11.9998H8ZM9.33333 7.33317V8.6665H2V7.33317H9.33333ZM9.33333 2.6665V3.99984H2V2.6665H9.33333Z\" fill=\"#09121F\" />\r\n                </svg>\r\n            </div>\r\n        </>\r\n    };\r\n\r\n    const getData = useCallback(async () => {\r\n        setPending(true)\r\n        try {\r\n            await axios.get(`https://goswirl.world:3001/getAnalyticsDataByBrandIdAndDate?brand_id=${authData?.brand_id}&start_date=${format(state[0].startDate, 'yyyy-MM-dd')}&end_date=${format(state[0].endDate, 'yyyy-MM-dd')}`).then((response) => {\r\n                setData(response.data.resp)\r\n                if (response.data) {\r\n                    setPending(false)\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                setPending(false)\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, [authData.brand_id, state])\r\n\r\n\r\n    const filterData = (text) => {\r\n        setFilterText(text)\r\n        const res = data.filter(item => item.video_title && item.video_title.toLowerCase().includes(filterText.toLowerCase()));\r\n        setFilteredData(res)\r\n        // console.log(data);\r\n    }\r\n    // const downloadExcel = () => {\r\n    //     // Define your custom column headers\r\n    //     const headers = ['Total Unique Views', 'Video Title', 'Brand Id', 'Video Id', 'Total Watch Time', 'Id', 'Url', 'Duration', 'Total Views', 'Date', 'Buy Now', 'Add To Cart', 'Ask Questions', 'Average Watch time', 'Engagement Rate', 'CTR'/* Add more titles as needed */];\r\n\r\n    //     // Function to handle missing keys and set default value\r\n    //     const handleMissingKey = (obj, key, defaultValue = '-') => {\r\n    //         return obj.hasOwnProperty(key) ? obj[key] : defaultValue;\r\n    //     };\r\n\r\n    //     // Convert data to an array of arrays with headers as the first row\r\n    //     const excelData = [headers, ...data.map(item => [\r\n    //         handleMissingKey(item, 'total_unique_views'),\r\n    //         handleMissingKey(item, 'video_title'),\r\n    //         handleMissingKey(item, 'brand_id'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'video_id'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'total_watchtime'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'id'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'url'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'duration'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'total_views'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'date'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'buyNow'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'addtoCart'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'askQuestion'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'average_watchtime'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'engagement_rate'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'ctr'), /* Add more fields as needed */\r\n    //     ])];\r\n\r\n    //     // Convert data to worksheet\r\n    //     const worksheet = XLSX.utils.aoa_to_sheet(excelData);\r\n\r\n    //     // Create workbook and append the worksheet\r\n    //     const workbook = XLSX.utils.book_new();\r\n    //     XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n\r\n    //     // Convert workbook to Excel buffer\r\n    //     const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n\r\n    //     // Trigger download\r\n    //     saveAs(new Blob([excelBuffer], { type: 'application/octet-stream' }), 'data.xlsx');\r\n    // };\r\n\r\n\r\n    const downloadExcel = () => {\r\n        // Define your custom column headers\r\n        const headers = ['Date', 'Video Title', 'Total Views', 'Unique Views', \"Watch Time [Mins]\", 'Avg Watch Time [Secs]', 'Buy Now', 'Add to Cart', 'Ask Question', 'Engagement %', 'CTR %'   /* Add more titles as needed */];\r\n\r\n        // Function to handle missing keys and set default value\r\n        const handleMissingKey = (obj, key, defaultValue = '-') => {\r\n            return obj.hasOwnProperty(key) ? obj[key] : defaultValue;\r\n        };\r\n\r\n        // Define which fields to export\r\n        const fieldsToExport = ['date', 'video_title', 'total_views', 'total_unique_views', 'total_watchtime', 'average_watchtime', 'buyNow', 'addtoCart', 'askQuestion', 'engagement_rate', 'ctr_rate'];\r\n\r\n        // Convert data to an array of arrays with headers as the first row\r\n        const modifiedData = data.map(item => {\r\n            // Make changes to the 'video_title' key (example: convert to uppercase)\r\n            const modifiedItem = { ...item, total_watchtime: (parseInt(item.total_watchtime) / 60).toFixed(2) };\r\n            return fieldsToExport.map(field => handleMissingKey(modifiedItem, field));\r\n        });\r\n\r\n        const excelData = [headers, ...modifiedData];\r\n\r\n        // Convert data to worksheet\r\n        const worksheet = XLSX.utils.aoa_to_sheet(excelData);\r\n\r\n        // Create workbook and append the worksheet\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n\r\n        // Convert workbook to Excel buffer\r\n        const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n\r\n        // Trigger download\r\n        saveAs(new Blob([excelBuffer], { type: 'application/octet-stream' }), 'data.xlsx');\r\n    };\r\n\r\n\r\n\r\n    const downloadCSV = () => {\r\n        // Define your custom column headers\r\n        const headers = ['Date', 'Video Title', 'Total Views', 'Unique Views', \"Watch Time [Mins]\", 'Avg Watch Time [Secs]', 'Buy Now', 'Add to Cart', 'Ask Question', 'Engagement %', 'CTR %'   /* Add more titles as needed */];\r\n        const fieldsToExport = ['date', 'video_title', 'total_views', 'total_unique_views', 'total_watchtime', 'average_watchtime', 'buyNow', 'addtoCart', 'askQuestion', 'engagement_rate', 'ctr_rate'];\r\n\r\n        // Function to handle missing keys and set default value\r\n        const handleMissingKey = (obj, key, defaultValue = '-') => {\r\n            return obj.hasOwnProperty(key) ? obj[key] : defaultValue;\r\n        };\r\n\r\n        // Convert data to CSV string\r\n        let csvContent = headers.join(',') + '\\n';\r\n        data.forEach(item => {\r\n            // Modify the 'video_title' key (example: convert to uppercase)\r\n            const modifiedItem = { ...item, total_watchtime: (parseInt(item.total_watchtime) / 60).toFixed(2) };\r\n\r\n            const row = [\r\n                handleMissingKey(modifiedItem, fieldsToExport[0]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[1]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[2]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[3]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[4]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[5]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[6]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[7]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[8]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[9]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[10]),\r\n            ];\r\n            csvContent += row.join(',') + '\\n';\r\n        });\r\n\r\n        // Create Blob from CSV string\r\n        const csvBlob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n\r\n        // Trigger download\r\n        saveAs(csvBlob, 'data.csv');\r\n    };\r\n\r\n\r\n\r\n    const downloadPDF = () => {\r\n        const doc = new jsPDF('l', 'pt', 'a4', true); // Landscape orientation\r\n\r\n        // Define your custom column headers\r\n        const headers = ['Date', 'Video Title', 'Total Views', 'Unique Views', \"Watch Time [Mins]\", 'Avg Watch Time [Secs]', 'Buy Now', 'Add to Cart', 'Ask Question', 'Engagement %', 'CTR %'   /* Add more titles as needed */];\r\n        const fields = ['date', 'video_title', 'total_views', 'total_unique_views', 'total_watchtime', 'average_watchtime', 'buyNow', 'addtoCart', 'askQuestion', 'engagement_rate', 'ctr_rate'];\r\n\r\n        // Function to handle missing keys and set default value\r\n        const handleMissingKey = (obj, key, defaultValue = '-') => {\r\n            return obj.hasOwnProperty(key) ? obj[key] : defaultValue;\r\n        };\r\n\r\n        // Convert data to an array of arrays with custom column headers\r\n        const tableData = [headers];\r\n        data.forEach(item => {\r\n            // Modify the 'video_title' key (example: convert to uppercase)\r\n            const modifiedItem = { ...item, total_watchtime: (parseInt(item.total_watchtime) / 60).toFixed(2) };\r\n\r\n            const row = fields.map(field => handleMissingKey(modifiedItem, field));\r\n            tableData.push(row);\r\n        });\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: tableData.slice(1), // Exclude headers from body data\r\n            headStyles: {\r\n                fillColor: [238, 238, 119],\r\n                textColor: [0, 0, 0]\r\n            },\r\n            styles: { cellPadding: 1, fontSize: 5 },\r\n            columnStyles: { 0: { cellWidth: 'auto' } },\r\n            margin: { top: 20 },\r\n            startY: 20\r\n        });\r\n        doc.save('data.pdf');\r\n    };\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (filterText !== \"\") {\r\n            setFiltered(true)\r\n        } else {\r\n            setFiltered(false)\r\n        }\r\n    }, [filterText])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        myFun()\r\n    }, [state, getData])\r\n\r\n    return (\r\n        <>\r\n            <div className='d-flex'>\r\n                <div className='ms-auto d-flex align-items-center mb-3' >\r\n                    <div className=\"dropdown d-flex\">\r\n                        <div className=\"input-group input-group me-1\">\r\n                            <span className=\"input-group-text border-end-0 border-dark\" >\r\n                                <FaSearch />\r\n                            </span>\r\n                            <input\r\n                                type=\"search\"\r\n                                className=\"form-control border-start-0 border-dark\"\r\n                                name='search'\r\n                                value={filterText}\r\n                                placeholder='Search video...'\r\n                                onChange={(e) => filterData(e.target.value)}\r\n\r\n\r\n                            // onChange={(e) => handleInputChange(\"mobile\", e.target.value)}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        {/* <input className='form-control video_search border-dark me-1 text-dark' placeholder='Search video...' type='search' /> */}\r\n                        <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\r\n                            {window.innerWidth > 556 ? <Dropdown.Toggle id=\"dropdown-basic\" className='bg-transparent text-dark border-dark'>\r\n                                <span>\r\n                                    {state[0].endDate !== null ? `${state[0].startDate.toString().slice(4, 15)} to ${state[0].endDate.toString().slice(4, 15)}` : \"Filter by date\"}\r\n                                </span>\r\n                            </Dropdown.Toggle> : <Dropdown.Toggle id=\"dropdown-basic\" className='bg-transparent text-dark border-dark'>\r\n                                <span>\r\n                                    {state[0].endDate !== null ? `${state[0].startDate.getFullYear().toString().slice(2, 4)}/${state[0].startDate.getFullYear().toString().slice(2, 4)}/${state[0].startDate.getFullYear().toString().slice(2, 4)} - ${state[0].startDate.getFullYear().toString().slice(2, 4)}/${state[0].startDate.getFullYear().toString().slice(2, 4)}/${state[0].startDate.getFullYear().toString().slice(2, 4)}` : \"Filter by date\"}\r\n                                </span>\r\n                            </Dropdown.Toggle>}\r\n\r\n\r\n                            <Dropdown.Menu>\r\n                                <DateRangePicker\r\n                                    editableDateInputs={false}\r\n                                    onChange={item => setState([item.selection])}\r\n                                    moveRangeOnFirstSelection={true}\r\n                                    ranges={state}\r\n                                    months={2}\r\n                                    direction='horizontal'\r\n                                    maxDate={yesterday}\r\n                                    minDate={authData?.brand_id == \"236633565\" ? new Date(2024, 2, 15) : new Date(2024, 3, 5)}\r\n                                />\r\n                                <div className='w-100'>\r\n                                    <button id=\"dropdown-basic\" className='btn btn-sm btn-primary float-end me-3' onClick={handleApply}>Done</button>\r\n                                    <button id=\"dropdown-basic\" className='btn btn-sm btn-outline-primary float-end me-3' onClick={() => {\r\n                                        setState([\r\n                                            {\r\n                                                startDate: new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000),\r\n                                                endDate: yesterday,\r\n                                                key: 'selection'\r\n                                            }\r\n                                        ])\r\n                                    }}>Reset</button>\r\n\r\n                                </div>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        <Dropdown className='ms-1'>\r\n                            {window.innerWidth > 556 ? <Dropdown.Toggle className='bg-transparent text-dark border-dark'>\r\n                                Export\r\n                            </Dropdown.Toggle> : <Dropdown.Toggle className='bg-transparent text-dark border-dark'>\r\n                                <BiExport />\r\n                            </Dropdown.Toggle>}\r\n\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item onClick={downloadCSV}><FaFileCsv color='gray' /> Export as CSV </Dropdown.Item>\r\n                                <Dropdown.Item onClick={downloadExcel}><FaFileExcel color='green' /> Export as XLS</Dropdown.Item>\r\n                                <Dropdown.Item onClick={downloadPDF}><FaFilePdf color='red' /> Export as PDF</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n            <div style={{ width: \"100%\", overflow: \"auto\", height: \"auto\" }}>\r\n                <div style={{ border: \"1px solid #E0E0E0\", minWidth: \"1500px\" }}>\r\n                    <DataTable\r\n                        columns={columns}\r\n                        data={filtered ? filteredData?.map((item, index) => ({ ...item, index })) : data?.map((item, index) => ({ ...item, index }))}\r\n                        subHeader\r\n                        progressPending={pending}\r\n                        pagination\r\n                        progressComponent={<div className='p-3 m-4' >\r\n                            <RotatingLines height={30} width={30} strokeColor=\"grey\" />\r\n                        </div>}\r\n                        sortIcon={<CustomSortIconComponent />}\r\n                        highlightOnHover\r\n                        // sortIconRenderer={() => <CustomSortIconComponent />}\r\n                        // onRowClicked={handleRowClicked}\r\n                        className=\"custom-datatable\"\r\n\r\n                        subHeaderComponent={\r\n                            <>\r\n                                <div className='d-flex w-100 table_header_row' >\r\n                                    <div className='table_blank_column'></div>\r\n                                    <div className='table_higher_column' >\r\n                                        <div className='d-flex text-center'>\r\n                                            <div className='perfomance_column'>Performance</div>\r\n                                            <div className='engagement_column' >Engagement</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </>}\r\n                    />\r\n\r\n                    {/* code for server side rendering  */}\r\n                    {/* <DataTable\r\ntitle=\"My Data Table\"\r\ncolumns={columns}\r\ndata={data}\r\npagination={true}\r\npaginationServer={true}\r\npaginationTotalRows={data.length} // This should be total rows count from your server\r\nonChangePage={async (page, totalRows) => {\r\n// Fetch data for the new page from the server\r\nsetLoading(true);\r\nconst response = await fetch(`your-api-endpoint?page=${page}&pageSize=${totalRows}`);\r\nconst responseData = await response.json();\r\nsetData(responseData);\r\nsetLoading(false);\r\n}}\r\nprogressPending={loading}\r\n/> */}\r\n                </div>\r\n            </div>\r\n            <VideoModal show={show} handleClose={handleClose} data={singleVideoData} />\r\n            <AskQuestionModel show={askQuestionModelShow} handleClose={handleCloseAskQuestion} data={{ ...askquestionData, ...state[0] }} />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Report","import React, { useState, useEffect } from 'react'\r\n\r\nconst VideoplayerSetting = ({ settings, setSettings }) => {\r\n\r\n  const handleToggle = (key) => {\r\n    setSettings(prevSettings => {\r\n      const updatedSettings = {\r\n        ...prevSettings,\r\n        [key]: !prevSettings[key],\r\n      };\r\n      ;\r\n      return updatedSettings;\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div style={{ maxHeight: '70vh', overflowY: 'auto' }}>\r\n      <div className=\"form-check form-switch d-flex justify-content-between align-items-center pt-2 ps-0\">\r\n        <div>\r\n          <label className=\" fs-18 form-check-label ps-2 \" htmlFor=\"muteSwitch\">\r\n            Mute\r\n            <br />\r\n            <div className='fs-16'>\r\n              For first-time viewers, the video is muted.\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"form-check-input switch-lg\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            id=\"muteSwitch\"\r\n            checked={settings.isMuteEnabled}\r\n            onChange={() => handleToggle('isMuteEnabled')}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-check form-switch d-flex justify-content-between align-items-center pt-2 ps-0\">\r\n        <div>\r\n          <label className=\" fs-18 form-check-label ps-2 \" htmlFor=\"pipSwitch\">\r\n            Picture-in-Picture\r\n            <br />\r\n            <div className='fs-16'>\r\n              Watch videos in a small, floating window with Picture-in-Picture mode.\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"form-check-input switch-lg\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            id=\"pipSwitch\"\r\n            checked={settings.ispipEnabled}\r\n            onChange={() => handleToggle('ispipEnabled')}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-check form-switch d-flex justify-content-between align-items-center pt-2 ps-0\">\r\n        <div>\r\n          <label className=\" fs-18 form-check-label ps-2 \" htmlFor=\"previewSwitch\">\r\n            Video preview thumbnail (Desktop only)\r\n            <br />\r\n            <div className='fs-16'>\r\n              Preview the next and previous videos.\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"form-check-input switch-lg\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            id=\"previewSwitch\"\r\n            checked={settings.ispreviewEnabled}\r\n            onChange={() => handleToggle('ispreviewEnabled')}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-check form-switch d-flex justify-content-between align-items-center pt-2 ps-0\">\r\n        <div>\r\n          <label className=\" fs-18 form-check-label ps-2 \" htmlFor=\"previewSwitch\">\r\n            Video download\r\n            <br />\r\n            <div className='fs-16'>\r\n              User can download video with permission.\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"form-check-input switch-lg\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            id=\"videodownloadSwitch\"\r\n            checked={settings.isvideodownloadEnabled}\r\n            onChange={() => handleToggle('isvideodownloadEnabled')}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-check form-switch d-flex justify-content-between align-items-center pt-2 ps-0\">\r\n        <div>\r\n          <label className=\" fs-18 form-check-label ps-2 \" htmlFor=\"previewSwitch\">\r\n            Product Tag\r\n            <br />\r\n            <div className='fs-16'>\r\n              This option enables product tagging for attached items.\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"form-check-input switch-lg\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            id=\"productTagSwitch\"\r\n            checked={settings.isproductTagEnabled}\r\n            onChange={() => handleToggle('isproductTagEnabled')}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-check form-switch d-flex justify-content-between align-items-center pt-2 ps-0\">\r\n        <div>\r\n          <label className=\" fs-18 form-check-label ps-2 \" htmlFor=\"commentSwitch\">\r\n            Comment on Video\r\n            <br />\r\n            <div className='fs-16'>\r\n              Allows users to comment on the video.\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"form-check-input switch-lg\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            id=\"commentSwitch\"\r\n            checked={settings.iscommentEnabled}\r\n            onChange={() => handleToggle('iscommentEnabled')}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-check form-switch d-flex justify-content-between align-items-center pt-2 ps-0\">\r\n        <div>\r\n          <label className=\" fs-18 form-check-label ps-2 \" htmlFor=\"previewSwitch\">\r\n            Product Review\r\n            <br />\r\n            <div className='fs-16'>\r\n              To display a product review for each product associated with the video.\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"form-check-input switch-lg\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            id=\"productreviewSwitch\"\r\n            checked={settings.isproductreviewEnabled}\r\n            onChange={() => handleToggle('isproductreviewEnabled')}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div style={{ backgroundColor: settings.isctaEnabled ? '#F5F5F5' : 'white' }}>\r\n        <div className=\"form-check form-switch d-flex justify-content-between align-items-center pt-2 ps-0\">\r\n          <div>\r\n            <label className=\" fs-18 form-check-label ps-2 \" htmlFor=\"ctaSwitch\">\r\n              Call to action\r\n              <br />\r\n              <div className='fs-16'>\r\n                Encourage users to take action with a compelling call to action.\r\n              </div>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <input\r\n              className=\"form-check-input switch-lg\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"ctaSwitch\"\r\n              checked={settings.isctaEnabled}\r\n              onChange={() => {\r\n                handleToggle('isctaEnabled')\r\n                console.log(settings.isctaEnabled);\r\n                if (settings.isctaEnabled) {\r\n                  setSettings(prevSettings => {\r\n                    const updatedSettings = {\r\n                      ...prevSettings,\r\n                      [\"isbuynowEnabled\"]: false,\r\n                      [\"isaddtocartEnabled\"]: false,\r\n                      [\"isviewcartEnabled\"]: false,\r\n\r\n                    };\r\n                    ;\r\n                    return updatedSettings;\r\n                  });\r\n                }\r\n\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        {settings.isctaEnabled && (\r\n          <div >\r\n            <div className=\"form-check form-switch d-flex justify-content-between align-items-center pt-2 ps-0\">\r\n              <div>\r\n                <label className=\"fs-18 form-check-label ps-2\" htmlFor=\"priceSwitch\">\r\n                  Buy now\r\n                  <br />\r\n                  <div className='fs-16'>\r\n                    This option activates the \"Buy Now\" call to action.\r\n                  </div>\r\n                </label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  className=\"form-check-input switch-lg\"\r\n                  type=\"checkbox\"\r\n                  role=\"switch\"\r\n                  id=\"buynowSwitch\"\r\n                  checked={settings.isbuynowEnabled}\r\n                  onChange={() => handleToggle('isbuynowEnabled')}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div >\r\n              <div className=\"form-check form-switch d-flex justify-content-between align-items-center pt-2 ps-0\">\r\n                <div>\r\n                  <label className=\"fs-18 form-check-label ps-2\" htmlFor=\"priceSwitch\">\r\n                    Add to Cart\r\n                    <br />\r\n                    <div className='fs-16'>\r\n                      This option activates the \"Add to cart\" call to action.\r\n                    </div>\r\n                  </label>\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    className=\"form-check-input switch-lg\"\r\n                    type=\"checkbox\"\r\n                    role=\"switch\"\r\n                    id=\"addtocartSwitch\"\r\n                    checked={settings.isaddtocartEnabled}\r\n                    onChange={() => handleToggle('isaddtocartEnabled')\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        )}\r\n        {settings.isaddtocartEnabled && settings.isctaEnabled && (\r\n\r\n          <div>\r\n            <div className=\"form-check form-switch d-flex justify-content-between align-items-center pt-2 ps-0\">\r\n              <div>\r\n                <label className=\" fs-18 form-check-label ps-2 \" htmlFor=\"muteSwitch\">\r\n                  View Cart\r\n                  <br />\r\n                  <div className='fs-16'>\r\n                    To enable the shopping cart icon for product added to cart.\r\n                  </div>\r\n                </label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  className=\"form-check-input switch-lg\"\r\n                  type=\"checkbox\"\r\n                  role=\"switch\"\r\n                  id=\"cartSwitch\"\r\n                  checked={settings.isviewcartEnabled}\r\n                  onChange={() => handleToggle('isviewcartEnabled')}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VideoplayerSetting;","import React, { useEffect, useState } from 'react'\r\nimport \"./table.css\"\r\nimport { Helmet } from \"react-helmet\";\r\nimport Report from '../components/reports/Report';\r\nimport UploadVideo from '../components/upload-video/UploadVideo';\r\nimport VideoGallery from './VideoGallery';\r\n// import Playlist from '../components/playlist/newplaylist';\r\nimport Playlist from './playlist';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport Newplaylist from '../components/playlist/Newplaylist.js';\r\nimport { PlaylistsTable } from '../components/playlist/PlaylistsTable.js';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport VideoSettingsTabs from '../components/video-settings/VideoSettingsTabs.js';\r\n\r\nconst SSVpage = ({ state, setState }) => {\r\n    const [playlists, setPlaylists] = useState([])\r\n    const user = useSelector(state => state.auth.user)\r\n    const location = useLocation();\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const createTable = searchParams.get('createTable');\r\n\r\n    const getPlalists = async () => {\r\n        try {\r\n            console.log();\r\n            await axios.get(`https://liveshopping.asia/getPlaylistByBrandId?brandId=${user.brand_id}`).then((res) => {\r\n                if (res.data.playlist) {\r\n                    setPlaylists(res.data.playlist)\r\n                } else {\r\n                    setPlaylists([])\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPlalists()\r\n    }, [user])\r\n    const navigate = useNavigate()\r\n\r\n    const setCreateTable = (value) => {\r\n        searchParams.set('createTable', value);\r\n        navigate({ search: searchParams.toString() });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>SWIRL | Short Videos</title>\r\n            </Helmet>\r\n            <div>\r\n                <div className=\"col\">\r\n                    <div className='d-flex'>\r\n                        <ul className=\"nav nav-tabs\" id=\"responsive-tabs\" role=\"tablist\">\r\n                            {/* <li className=\"nav-item\" role=\"presentation\">\r\n                                <button className=\"nav-link show  active\" id=\"video-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#video\" type=\"button\" role=\"tab\" aria-controls=\"video\" aria-selected=\"true\" onClick={() => { setCreateTable(false) }} >Video gallery </button>\r\n                            </li> */}\r\n                            {/* \r\n                            <li className=\"nav-item\" role=\"presentation\">\r\n                                <button className=\"nav-link\" id=\"Upload-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#Upload\" type=\"button\" role=\"tab\" aria-controls=\"Upload\" aria-selected=\"false\" disabled>Upload video</button>\r\n    </li>*/}\r\n                            {/* <li className=\"nav-item\" role=\"presentation\">\r\n                                <button className=\"nav-link\" id=\"playlist-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#playlist\" type=\"button\" role=\"tab\" aria-controls=\"playlist\" aria-selected=\"false\" onClick={() => { setCreateTable(false) }}>Playlist</button>\r\n                            </li>\r\n                            <li className=\"nav-item \" role=\"presentation\">\r\n                                <button className=\"nav-link \" id=\"Upload-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#Upload\" type=\"button\" role=\"tab\" aria-controls=\"Upload\" aria-selected=\"false\" onClick={() => { setCreateTable(false) }}>Upload video</button>\r\n                            </li> */}\r\n                            <li className=\"nav-item\" role=\"presentation\">\r\n                                <button className=\"nav-link show active\" id=\"Reports-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#Reports\" type=\"button\" role=\"tab\" aria-controls=\"Reports\" aria-selected=\"false\" onClick={() => { setCreateTable(false) }}>Reports</button>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\" role=\"presentation\">\r\n                                <button className=\"nav-link\" id=\"Settings-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#Settings\" type=\"button\" role=\"tab\" aria-controls=\"Settings\" aria-selected=\"false\" >Settings</button>\r\n                            </li> */}\r\n\r\n                        </ul>\r\n                        <div className='ms-auto d-flex align-items-center' >\r\n                            {/* <div className=\"dropdown\">\r\n\r\n                                <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\r\n                                    <Dropdown.Toggle id=\"dropdown-basic\" className='bg-transparent text-dark border-dark'>\r\n                                        {state[0].endDate !== null ? `${state[0].startDate.toString().slice(4, 15)} to ${state[0].endDate.toString().slice(4, 15)}` : \"Filter by date\"}\r\n                                    </Dropdown.Toggle>\r\n\r\n                                    <Dropdown.Menu>\r\n                                        <DateRangePicker\r\n                                            editableDateInputs={false}\r\n                                            onChange={item => setState([item.selection])}\r\n                                            moveRangeOnFirstSelection={true}\r\n                                            ranges={state}\r\n                                            months={2}\r\n                                            direction='horizontal'\r\n                                            maxDate={yesterday}\r\n                                        />\r\n                                        <div className='w-100'>\r\n                                            <button id=\"dropdown-basic\" className='btn btn-sm btn-primary float-end me-3' onClick={handleApply}>Done</button>\r\n                                            <button id=\"dropdown-basic\" className='btn btn-sm btn-outline-primary float-end me-3' onClick={() => {\r\n                                                setState([\r\n                                                    {\r\n                                                        startDate: new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000),\r\n                                                        endDate: yesterday,\r\n                                                        key: 'selection'\r\n                                                    }\r\n                                                ])\r\n                                            }}>Reset</button>\r\n\r\n                                        </div>\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tab-content p-3\" id=\"responsive-tabs-content\">\r\n                        {/* <div className=\"tab-pane fade show active\" id=\"video\" role=\"tabpanel\" aria-labelledby=\"video-tab\">\r\n                            <VideoGallery />\r\n                        </div> */}\r\n                        {/* <div className=\"tab-pane fade \" id=\"Upload\" role=\"tabpanel\" aria-labelledby=\"Upload-tab\">\r\n                            <UploadVideo />\r\n                        </div> */}\r\n                        {/* <div className=\"tab-pane fade \" id=\"playlist\" role=\"tabpanel\" aria-labelledby=\"playlist-tab\">\r\n                            {createTable == \"true\" ? <>\r\n                                <Playlist getPlalists={getPlalists} />\r\n                            </> : <>\r\n                                {playlists.length > 0 ? <>\r\n                                    <PlaylistsTable data={playlists} />\r\n                                </> : <>\r\n                                    <Newplaylist />\r\n                                </>}\r\n                            </>} */}\r\n\r\n                        {/* <Playlist /> */}\r\n                        {/* </div> */}\r\n                        <div className=\"tab-pane fade  show active\" id=\"Reports\" role=\"tabpanel\" aria-labelledby=\"Reports-tab\">\r\n                            <Report state={state} setState={setState} />\r\n                        </div>\r\n                        {/* <div className=\"tab-pane fade\" id=\"Settings\" role=\"tabpanel\" aria-labelledby=\"Settings-tab\">\r\n                            <VideoSettingsTabs />\r\n                        </div> */}\r\n\r\n                    </div>\r\n                </div>\r\n            </div >\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SSVpage"],"names":["firebaseConfig","apiKey","window","atob","authDomain","projectId","storageBucket","app","initializeApp","db","getFirestore","_ref","el","updatePinStatus","removeComment","visible","setVisible","useState","timestampNumber","Number","createdAt","timeFromNow","moment","fromNow","_jsxs","className","concat","id","onMouseEnter","onMouseLeave","children","_jsx","style","height","width","borderRadius","src","brand_logo","uName","GoDotFill","size","color","fontWeight","comment","visibility","cursor","isPinned","RiPushpin2Fill","onClick","RiPushpin2Line","IoTrashOutline","backgroundColor","show","handleClose","data","user","useSelector","state","auth","products","setProducts","loadingProducts","setLoadingProducts","comments","setComments","message","setMessage","pinMessage","setPinMessage","tab","setTab","pinnSecHeight","setPinsecHeight","chatEndRef","useRef","scrollToBottom","_chatEndRef$current","current","scrollIntoView","useEffect","async","commentRef","collection","videoId","q","query","orderBy","cms","getDocs","docs","map","doc","filter","obj","isRemoved","objectsWithPin1","setTimeout","error","console","fetchData","video_id","axios","get","brand_id","then","res","productResp","log","fetchProducts","handleSubmit","e","preventDefault","cData","first_name","Date","getTime","user_profile","vId","videoDocRef","setDoc","commentDocRef","addDoc","subComment","addVideoComment","target","reset","length","updateDoc","onSnapshot","snapshot","pinsecHeight","document","getElementById","offsetHeight","element2","element3","innerHeight","_Fragment","Modal","onHide","Body","maxWidth","margin","padding","controls","autoPlay","loop","muted","url","type","role","index","_parseInt","_parseInt2","currencySymbol","Intl","NumberFormat","undefined","currency","currencyName","formatToParts","find","part","value","alt","image","border","title","parseInt","discountPrice","toLocaleString","price","overflow","PinComment","class","Comment","ref","onSubmit","onChange","placeholder","disabled","askQuestData","setAskQuestData","pending","setPending","React","columns","name","selector","row","video_title","date","mobile","requestBody","FormData","append","format","startDate","endDate","post","catch","errr","fetchAskQuestionsData","Title","BsQuestionCircleFill","downloadExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","bookType","saveAs","Blob","BiExport","DataTable","progressPending","progressComponent","RotatingLines","strokeColor","setState","today","yesterday","setShow","singleVideoData","setSingleVideoData","askQuestionModelShow","setAskQuestionModelShow","askquestionData","setAskquestionData","filteredData","setFilteredData","filterText","setFilterText","filtered","setFiltered","authData","setData","setDate","getDate","dropdownOpen","setDropdownOpen","sortable","cell","whiteSpace","textOverflow","AiOutlinePlaySquare","total_views","total_unique_views","total_watchtime","toFixed","Math","round","average_watchtime","engagement_rate","ctr_rate","addtoCart","buyNow","askQuestion","CustomSortIconComponent","viewBox","fill","xmlns","d","getData","useCallback","response","resp","err","myFun","total","wtime","FaSearch","text","item","toLowerCase","includes","filterData","Dropdown","onToggle","toggleDropdown","innerWidth","Toggle","toString","slice","getFullYear","Menu","DateRangePicker","editableDateInputs","selection","moveRangeOnFirstSelection","ranges","months","direction","maxDate","minDate","handleApply","key","Item","downloadCSV","fieldsToExport","handleMissingKey","defaultValue","arguments","hasOwnProperty","csvContent","join","forEach","modifiedItem","csvBlob","FaFileCsv","excelData","field","aoa_to_sheet","FaFileExcel","downloadPDF","jsPDF","headers","fields","tableData","push","autoTable","head","body","headStyles","fillColor","textColor","styles","cellPadding","fontSize","columnStyles","cellWidth","top","startY","save","FaFilePdf","minWidth","subHeader","pagination","sortIcon","highlightOnHover","subHeaderComponent","VideoModal","AskQuestionModel","handleCloseAskQuestion","playlists","setPlaylists","location","useLocation","searchParams","URLSearchParams","search","playlist","getPlalists","navigate","useNavigate","Helmet","set","Report"],"sourceRoot":""}