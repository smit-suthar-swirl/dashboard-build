{"version":3,"file":"static/js/971.22b4bdd2.chunk.js","mappings":"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","sources":["components/ZeroToHeroCount.js","components/charts/EngageMent.js","components/charts/Perfomance.js","components/charts/SalesConversion.js","pages/DashBoard.js","utils/utils.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nfunction formatNumber(number) {\r\n    if (number >= 1e9) {\r\n        return (number / 1e9).toFixed(1) + 'b';\r\n    }\r\n    if (number >= 1e6) {\r\n        return (number / 1e6).toFixed(1) + 'm';\r\n    }\r\n    if (number >= 1e3) {\r\n        return (number / 1e3).toFixed(1) + 'k';\r\n    }\r\n    if (Number.isInteger(number)) {\r\n        return number;\r\n    } else {\r\n        return parseFloat(number).toFixed(2);\r\n    }\r\n}\r\n\r\nfunction ZeroToHeroCount({ targetNumber }) {\r\n    const [currentNumber, setCurrentNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const duration = 2000; // Animation duration in milliseconds\r\n        const increment = Math.ceil(targetNumber / (duration / 50)); // Assuming 50 steps per second\r\n\r\n        const interval = setInterval(() => {\r\n            setCurrentNumber((prevNumber) => {\r\n                const newNumber = prevNumber + increment;\r\n                return newNumber >= targetNumber ? targetNumber : newNumber;\r\n            });\r\n        }, 20); // Update every 20 milliseconds\r\n\r\n        return () => clearInterval(interval); // Cleanup function to clear interval on unmount\r\n    }, [targetNumber]);\r\n\r\n    return formatNumber(currentNumber);\r\n}\r\n\r\nexport default ZeroToHeroCount;\r\n","import React, { useState, useEffect, useCallback, useLayoutEffect } from 'react';\r\nimport { BarChart, Bar, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Rectangle, Label, Tooltip, Legend } from 'recharts';\r\nimport \"../chart.css\"\r\nimport ZeroToHeroCount from '../ZeroToHeroCount';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport { MdOutlineKeyboardArrowRight } from \"react-icons/md\";\r\nimport { FallingLines, InfinitySpin, TailSpin } from 'react-loader-spinner';\r\n\r\nconst EngageMent = ({ selectedDate, setTab, setAllAnalyticsData, setLoading }) => {\r\n    const [data, setData] = useState([])\r\n    const [overalldata, setOverallData] = useState({})\r\n    // const [loading, setLoading] = useState(true)\r\n\r\n    const user = useSelector((state) => state.auth.user)\r\n    function convertSecondsToTime(seconds) {\r\n        if (isNaN(seconds) || seconds < 0) {\r\n            return \"0\";\r\n        }\r\n\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        const remainingSeconds = seconds % 60;\r\n\r\n        if (hours > 0) {\r\n            return `${hours}hr ${minutes}min ${remainingSeconds}sec`;\r\n        } else if (minutes > 0) {\r\n            return `${minutes}min ${remainingSeconds}sec`;\r\n        } else {\r\n            return `${remainingSeconds}sec`;\r\n        }\r\n    }\r\n    // useEffect hook example (optional, use it if needed)\r\n    // useEffect(() => {\r\n    //     setData([\r\n    //         { name: 'Jan', uv: 4000, pv: 2400, amt: 400 },\r\n    //         { name: 'Feb', uv: 3000, pv: 1398, amt: 210 },\r\n    //         { name: 'Mar', uv: 2000, pv: 9800, amt: 290 },\r\n    //         { name: 'Apr', uv: 2780, pv: 3908, amt: 100 },\r\n    //         { name: 'May', uv: 1890, pv: 4800, amt: 181 },\r\n    //         { name: 'Jun', uv: 2390, pv: 3800, amt: 500 },\r\n    //         { name: 'July', uv: 3490, pv: 4300, amt: 100 },\r\n    //         { name: 'Aug', uv: 3490, pv: 4300, amt: 330 },\r\n    //         { name: 'Sep', uv: 3490, pv: 4300, amt: 430 },\r\n    //         { name: 'Oct', uv: 3490, pv: 4300, amt: 140 },\r\n    //         { name: 'Nov', uv: 3490, pv: 4300, amt: 230 },\r\n    //         { name: 'Dec', uv: 3490, pv: 4300, amt: 110 },\r\n    //     ])\r\n    // }, []);\r\n\r\n    const [activeTab, setActiveTab] = useState('tab1');\r\n\r\n    const handleTabClick = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n    // {\r\n    //     \"buyNow\": 1,\r\n    //         \"addtoCart\": 0,\r\n    //             \"askQuestion\": 0,\r\n    //                 \"date\": \"2024_04_02\",\r\n    //                     \"unique_views\": 33,\r\n    //                         \"id\": \"236633565_2024_04_02\",\r\n    //                             \"brand_id\": \"236633565\",\r\n    //                                 \"total_views\": 35,\r\n    //                                     \"watch_time\": 815,\r\n    //                                         \"engagement_rate\": \"8.57\",\r\n    //                                             \"ctr_rate\": \"94.29%\"\r\n    // }\r\n    function calculateTotals(data) {\r\n        return data.reduce((totals, entry) => {\r\n            totals.unique_views += parseInt(entry.total_unique_views);\r\n            totals.total_views += parseInt(entry.total_views);\r\n            totals.watch_time += parseInt(entry.total_watchtime);\r\n            totals.buyNow += parseInt(entry.buyNow);\r\n            totals.addtoCart += parseInt(entry.addtoCart);\r\n            totals.askQuestion += parseInt(entry.askQuestion);\r\n\r\n            return totals;\r\n        }, { buyNow: 0, addtoCart: 0, askQuestion: 0, unique_views: 0, total_views: 0, watch_time: 0 });\r\n    }\r\n    function addBarDate(array) {\r\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n        const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n        return array.map(obj => {\r\n            const [year, month, day] = obj.date.split('_').map(Number);\r\n            const date = new Date(year, month - 1, day);\r\n            const shortYear = date.getFullYear().toString().substr(-2); // Extract last two digits of the year\r\n            const barDate = `${date.getDate()} ${months[date.getMonth()]} ${shortYear} ${days[date.getDay()]}`;\r\n            return { ...obj, bar_date: barDate };\r\n        });\r\n    }\r\n    const getDataForEngagement = useCallback(async () => {\r\n        try {\r\n            setLoading(true)\r\n            // ?brand_id=${user.brand_id}&start_date=${format(selectedDate.startDate, 'yyyy-MM-dd')}&end_date=${format(selectedDate.endDate, 'yyyy-MM-dd')}\r\n            const response = await axios.get(`https://goswirl.world:3001/getAccumulatedAnalyticsDataByBrandIdAndDateForDashboard?brand_id=${user.brand_id}&start_date=${format(selectedDate.startDate, 'yyyy-MM-dd')}&end_date=${format(selectedDate.endDate, 'yyyy-MM-dd')}`);\r\n            if (response.data.resp) {\r\n                setAllAnalyticsData(response.data.resp)\r\n\r\n                let totalData = calculateTotals(response.data.resp); // Assuming calculateTotals is defined somewhere\r\n                const repeatViews = totalData.total_views - totalData.unique_views\r\n                console.log(totalData);\r\n                const engagement_rate =\r\n                    ((parseInt(totalData.addtoCart) +\r\n                        parseInt(totalData.buyNow) +\r\n                        parseInt(totalData.askQuestion) +\r\n                        parseInt(repeatViews)) /\r\n                        parseInt(totalData.total_views)) *\r\n                        100\r\n                        ? (\r\n                            ((parseInt(totalData.addtoCart) +\r\n                                parseInt(totalData.buyNow) +\r\n                                parseInt(totalData.askQuestion) +\r\n                                parseInt(repeatViews)) /\r\n                                parseInt(totalData.total_views)) *\r\n                            100\r\n                        ).toFixed(2)\r\n                        : 0\r\n                let x = (totalData.buyNow + totalData.addtoCart) / totalData.unique_views\r\n                const ctr_rate = (x * 100).toFixed(2)\r\n\r\n                totalData = { ...totalData, engagement_rate: isNaN(engagement_rate) ? 0 : engagement_rate, ctr_rate: isNaN(ctr_rate) ? 0 : ctr_rate }\r\n\r\n                setOverallData(totalData);\r\n            }\r\n            const newData = addBarDate(response.data.resp); // Assuming addBarDate is defined somewhere\r\n            setData(newData);\r\n            setLoading(false)\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false)\r\n        }\r\n    }, [user, selectedDate]);\r\n    useLayoutEffect(() => {\r\n        getDataForEngagement()\r\n    }, [selectedDate, getDataForEngagement])\r\n\r\n    const CustomXAxisTick = ({ x, y, payload }) => {\r\n        // Format the date string to display only the part you want\r\n        const formattedDate = payload.value.slice(0, 9); // Assuming you want to display from the month onwards\r\n\r\n        return (\r\n            <text style={{ fontSize: \"10px\" }} x={x} y={y} dy={16} textAnchor=\"middle\" fill=\"#666\">\r\n                {formattedDate}\r\n            </text>\r\n        );\r\n    };\r\n    const titleToolVal = () => {\r\n        if (activeTab === \"tab1\") {\r\n            return \"Engagement Rate\"\r\n        } else if (activeTab === \"tab2\") {\r\n            return \"CTR Rate\"\r\n        } else if (activeTab === \"tab3\") {\r\n            return \"Add To Cart\"\r\n        } else if (activeTab === \"tab4\") {\r\n            return \"Buy Now\"\r\n        } else if (activeTab === \"tab5\") {\r\n            return \"Ask Questions\"\r\n        } else {\r\n            return \"Value\"\r\n        }\r\n    }\r\n    const CustomTooltip = ({ active, payload, label }) => {\r\n        if (active && payload && payload.length) {\r\n            return (\r\n                <div className=\"custom-tooltip bg-white p-2\" style={{ borderRight: \"2px solid #77BBFF\", borderLeft: \"2px solid #77BBFF\", borderRadius: \"5px\" }}>\r\n                    <span className=\"label\">Date : {`${label}`}</span> <br />\r\n                    {/* {activeTab !== \"tab3\" && <span>Value : {payload[0].value}</span> } */}\r\n                    {/* {activeTab === \"tab3\" ? <span>Watch Time : {convertSecondsToTime(payload[0].value)}</span> : <span>Value : {payload[0].value}</span>} */}\r\n                    <span>{titleToolVal()} : {activeTab === \"tab1\" || activeTab === \"tab2\" ? `${payload[0].value} %` : payload[0].value}</span>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex w-100 align-items-center\">\r\n                <ul className=\"nav nav-tabs\">\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'tab1' ? 'active' : ''}`} onClick={() => handleTabClick('tab1')}>\r\n                            <p>Engagement rate</p>\r\n                            <h3><ZeroToHeroCount targetNumber={overalldata?.engagement_rate ? parseFloat(overalldata?.engagement_rate) : 0} />%</h3>\r\n                            {/* <h3>{overalldata?.engagement_rate} %</h3> */}\r\n\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'tab2' ? 'active' : ''}`} onClick={() => handleTabClick('tab2')}>\r\n                            <p>CTR</p>\r\n                            <h3><ZeroToHeroCount targetNumber={overalldata?.ctr_rate ? parseFloat(overalldata?.ctr_rate) : 0} />%</h3>\r\n                            {/* <h3>{overalldata?.ctr_rate} %</h3> */}\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'tab3' ? 'active' : ''}`} onClick={() => handleTabClick('tab3')}>\r\n                            <p>Add to cart</p>\r\n                            <h3><ZeroToHeroCount targetNumber={overalldata?.addtoCart ? parseFloat(overalldata?.addtoCart) : 0} /></h3>\r\n                            {/* <h3>{overalldata?.addtoCart}</h3> */}\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'tab4' ? 'active' : ''}`} onClick={() => handleTabClick('tab4')}>\r\n                            <p>Buy now</p>\r\n                            <h3><ZeroToHeroCount targetNumber={overalldata?.buyNow ? parseFloat(overalldata?.buyNow) : 0} /></h3>\r\n                            {/* <h3>{overalldata?.buyNow}</h3> */}\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'tab5' ? 'active' : ''}`} onClick={() => handleTabClick('tab5')}>\r\n                            <p>Ask question</p>\r\n                            <h3><ZeroToHeroCount targetNumber={overalldata?.askQuestion ? parseFloat(overalldata?.askQuestion) : 0} /></h3>\r\n                            {/* <h3>{overalldata?.askQuestion}</h3> */}\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item d-none\">\r\n                        <div className={`nav-link ${activeTab === 'tab6' ? 'active' : ''}`} onClick={() => handleTabClick('tab6')}>\r\n                            <p>Share</p>\r\n                            <h3><ZeroToHeroCount targetNumber={overalldata?.engagement_rate ? parseFloat(overalldata?.engagement_rate) : 0} />%</h3>\r\n                            {/* <h3>{overalldata?.engagement_rate}</h3> */}\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item d-none\">\r\n                        <div className={`nav-link ${activeTab === 'tab7' ? 'active' : ''}`} onClick={() => handleTabClick('tab7')}>\r\n                            <p>Mute</p>\r\n                            <h3><ZeroToHeroCount targetNumber={overalldata?.askQuestion ? overalldata?.askQuestion : 0} />%</h3>\r\n                            {/* <h3>{overalldata?.askQuestion}</h3> */}\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n                <div className='ms-auto'>\r\n                    <Link to=\"/admin/svideos\" ><button className='btn btn-sm btn-outline-dark' onClick={() => { setTab('Reports') }}>View all  <MdOutlineKeyboardArrowRight /></button></Link>\r\n                </div>\r\n            </div>\r\n            {/* <div>\r\n            .overlay {\r\n    position: absolute;\r\n    width: 100vh;\r\n    height: 74vh;\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    z-index: 1000;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n} */}\r\n\r\n            {/* {loading && <div style={{ position: \"absolute\", width: \"95%\", height: \"40vh\", display: \"flex\", zIndex: \"1000\", alignItems: 'center', justifyContent: \"center\", overflow: 'hidden', backgroundColor: \"rgba(0,0,0,0.1)\" }}>\r\n\r\n                <TailSpin\r\n                    visible={true}\r\n                    height=\"60\"\r\n                    width=\"60\"\r\n                    color=\"rgba(0,0,0,0.5)\"\r\n                    ariaLabel=\"tail-spin-loading\"\r\n                    radius=\"1\"\r\n                    wrapperStyle={{}}\r\n                    wrapperClass=\"\"\r\n                />\r\n            </div>} */}\r\n            <div>\r\n                <ResponsiveContainer className=\"chart_engagement\" width=\"100%\" height=\"100%\">\r\n                    <BarChart\r\n                        width={500}\r\n                        height={300}\r\n                        data={data}\r\n                        margin={{\r\n                            top: 20,\r\n                            right: 0,\r\n                            left: 0,\r\n                            bottom: 5,\r\n                        }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"1 1\" />\r\n                        <XAxis dataKey=\"bar_date\" tick={<CustomXAxisTick />} />\r\n                        <YAxis />\r\n                        {/* <XAxis dataKey=\"name\" /> */}\r\n                        <Tooltip content={<CustomTooltip />} />\r\n                        {/* <XAxis dataKey=\"name\">\r\n                        <Label value=\"Dates\" offset={-5} position=\"insideBottom\" />\r\n                    </XAxis>\r\n                    <YAxis>\r\n                        <Label value=\"Views\" offset={7} position=\"insideLeft\" angle={-90} />\r\n                    </YAxis> */}\r\n\r\n                        {/* <Tooltip /> */}\r\n                        {/* <Legend /> */}\r\n                        {activeTab === \"tab1\" && <Bar dataKey=\"engagement_rate\" maxBarSize={20} fill=\"#77BBFF\" />}\r\n                        {activeTab === \"tab2\" && <Bar dataKey=\"ctr_rate\" maxBarSize={20} fill=\"#77BBFF\" />}\r\n                        {activeTab === \"tab3\" && <Bar dataKey=\"addtoCart\" maxBarSize={20} fill=\"#77BBFF\" />}\r\n                        {activeTab === \"tab4\" && <Bar dataKey=\"buyNow\" maxBarSize={20} fill=\"#77BBFF\" />}\r\n                        {activeTab === \"tab5\" && <Bar dataKey=\"askQuestion\" maxBarSize={20} fill=\"#77BBFF\" />}\r\n\r\n                        {activeTab === \"tab1\" && <Legend payload={\r\n                            [1].map(\r\n                                (item, index) => ({\r\n                                    id: \"index\",\r\n                                    type: \"rect\",\r\n                                    value: `Engagement Rate`,\r\n                                    color: \"#77BBFF\"\r\n                                })\r\n                            )\r\n                        } />}\r\n                        {activeTab === \"tab2\" && <Legend payload={\r\n                            [1].map(\r\n                                (item, index) => ({\r\n                                    id: \"index\",\r\n                                    type: \"rect\",\r\n                                    value: `CTR Rate`,\r\n                                    color: \"#77BBFF\"\r\n                                })\r\n                            )\r\n                        } />}\r\n                        {activeTab === \"tab3\" && <Legend payload={\r\n                            [1].map(\r\n                                (item, index) => ({\r\n                                    id: \"index\",\r\n                                    type: \"rect\",\r\n                                    value: `Add To Cart`,\r\n                                    color: \"#77BBFF\"\r\n                                })\r\n                            )\r\n                        } />}\r\n                        {activeTab === \"tab4\" && <Legend payload={\r\n                            [1].map(\r\n                                (item, index) => ({\r\n                                    id: \"index\",\r\n                                    type: \"rect\",\r\n                                    value: `Buy Now`,\r\n                                    color: \"#77BBFF\"\r\n                                })\r\n                            )\r\n                        } />}\r\n                        {activeTab === \"tab5\" && <Legend payload={\r\n                            [1].map(\r\n                                (item, index) => ({\r\n                                    id: \"index\",\r\n                                    type: \"rect\",\r\n                                    value: `Ask Questions`,\r\n                                    color: \"#77BBFF\"\r\n                                })\r\n                            )\r\n                        } />}\r\n\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EngageMent;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { BarChart, Bar, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Legend, Tooltip } from 'recharts';\r\nimport \"../chart.css\"\r\nimport axios from 'axios';\r\nimport { numberFormatShort } from '../../utils/utils';\r\nimport { useSelector } from 'react-redux';\r\nimport { format } from 'date-fns';\r\nimport \"../chart.css\"\r\nimport { Link } from 'react-router-dom';\r\nimport { MdOutlineKeyboardArrowRight } from \"react-icons/md\";\r\n\r\nconst Perfomance = ({ selectedDate, setTab, allAnalyticsData }) => {\r\n    const [data, setData] = useState([])\r\n    const [overalldata, setOverallData] = useState({})\r\n    const user = useSelector((state) => state.auth.user)\r\n\r\n    const [activeTab, setActiveTab] = useState('tab1');\r\n\r\n    const handleTabClick = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n\r\n    function convertSecondsToTime(seconds) {\r\n        if (isNaN(seconds) || seconds < 0) {\r\n            return \"0\";\r\n        }\r\n\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        const remainingSeconds = seconds % 60;\r\n\r\n        if (hours > 0) {\r\n            return `${hours}hr ${minutes}min ${remainingSeconds}sec`;\r\n        } else if (minutes > 0) {\r\n            return `${minutes}min ${remainingSeconds}sec`;\r\n        } else {\r\n            return `${remainingSeconds}sec`;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function calculateTotals(data) {\r\n        return data.reduce((totals, entry) => {\r\n            console.log(entry);\r\n            totals.unique_views += entry.total_unique_views;\r\n            totals.total_views += entry.total_views;\r\n            totals.watch_time += entry.watch_time;\r\n\r\n            return totals;\r\n        }, { unique_views: 0, total_views: 0, watch_time: 0 });\r\n    }\r\n    function addBarDate(array) {\r\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n        const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n        return array.map(obj => {\r\n            const [year, month, day] = obj.date.split('_').map(Number);\r\n            const date = new Date(year, month - 1, day);\r\n            const shortYear = date.getFullYear().toString().substr(-2); // Extract last two digits of the year\r\n            const barDate = `${date.getDate()} ${months[date.getMonth()]} ${shortYear} ${days[date.getDay()]}`;\r\n            return { ...obj, bar_date: barDate };\r\n        });\r\n    }\r\n\r\n\r\n    const getDataForPerfomance = useCallback(async (allAnalyticsData) => {\r\n        try {\r\n            // const response = await axios.get(`https://goswirl.world:3001/getBrandVideoDataByDateAndBrandId?brandId=${user?.brand_id}&start_date=${format(selectedDate.startDate, 'yyyy-MM-dd')}&end_date=${format(selectedDate.endDate, 'yyyy-MM-dd')}`);\r\n\r\n            // if (response.data.resp) {\r\n            const totalData = calculateTotals(allAnalyticsData); // Assuming calculateTotals is defined somewhere\r\n            console.log(allAnalyticsData);\r\n            console.log(totalData);\r\n            setOverallData(totalData);\r\n            // }\r\n\r\n            const newData = addBarDate(allAnalyticsData); // Assuming addBarDate is defined somewhere\r\n            setData(newData);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, [user, selectedDate]);\r\n    console.log(allAnalyticsData);\r\n    console.log(overalldata);\r\n    useEffect(() => {\r\n        if (allAnalyticsData.length > 0) {\r\n            getDataForPerfomance(allAnalyticsData)\r\n        }\r\n\r\n    }, [selectedDate, getDataForPerfomance, allAnalyticsData])\r\n    const CustomXAxisTick = ({ x, y, payload }) => {\r\n        // Format the date string to display only the part you want\r\n        const formattedDate = payload.value.slice(0, 9); // Assuming you want to display from the month onwards\r\n\r\n        return (\r\n            <text style={{ fontSize: \"10px\" }} x={x} y={y} dy={16} textAnchor=\"middle\" fill=\"#666\">\r\n                {formattedDate}\r\n            </text>\r\n        );\r\n    };\r\n\r\n    const titleToolVal = () => {\r\n        if (activeTab === \"tab1\") {\r\n            return \"Views\"\r\n        } else if (activeTab === \"tab2\") {\r\n            return \"Unique Views\"\r\n        } else if (activeTab === \"tab3\") {\r\n            return \"Watch Time\"\r\n        }\r\n    }\r\n\r\n    const CustomTooltip = ({ active, payload, label }) => {\r\n        if (active && payload && payload.length) {\r\n            return (\r\n                <div className=\"custom-tooltip bg-white p-2\" style={{ borderRight: \"2px solid #77BBFF\", borderLeft: \"2px solid #77BBFF\", borderRadius: \"5px\" }}>\r\n                    <span className=\"label\">Date : {`${label}`}</span> <br />\r\n                    {/* {activeTab !== \"tab3\" && <span>Value : {payload[0].value}</span> } */}\r\n                    {/* {activeTab === \"tab3\" ? <span>Watch Time : {convertSecondsToTime(payload[0].value)}</span> : <span>Value : {payload[0].value}</span>} */}\r\n                    <span>{titleToolVal()} : {activeTab === \"tab3\" ? convertSecondsToTime(payload[0].value) : payload[0].value}</span>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"d-flex w-100 align-items-center\">\r\n                <ul className=\"nav nav-tabs\">\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'tab1' ? 'active' : ''}`} onClick={() => handleTabClick('tab1')}>\r\n                            <p>Total Views</p>\r\n                            <h3>{numberFormatShort(overalldata?.total_views)}</h3>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'tab2' ? 'active' : ''}`} onClick={() => handleTabClick('tab2')}>\r\n                            <p>Total Unique Views</p>\r\n                            <h3>{numberFormatShort(overalldata?.unique_views)}</h3>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'tab3' ? 'active' : ''}`} onClick={() => handleTabClick('tab3')}>\r\n                            <p>Video Watch Time</p>\r\n                            <h3>{convertSecondsToTime(overalldata?.watch_time)}</h3>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item d-none\">\r\n                        <div className={`nav-link ${activeTab === 'tab4' ? 'active' : ''}`} onClick={() => handleTabClick('tab4')}>\r\n                            <p>Drop-out rate</p>\r\n                            <h3>10% </h3>\r\n                        </div>\r\n                    </li>\r\n\r\n                </ul>\r\n                <div className='ms-auto'>\r\n                    <Link to=\"/admin/svideos\"><button className='btn btn-sm btn-outline-dark' onClick={() => { setTab('Reports') }}> View all <MdOutlineKeyboardArrowRight /></button></Link>\r\n                </div>\r\n                {/* <div className=\"tab-content mt-3\">\r\n                    <div className={`tab-pane fade ${activeTab === 'tab1' ? 'show active' : ''}`} id=\"tab1\" role=\"tabpanel\">\r\n                        <h5>Content of Tab 1</h5>\r\n                    </div>\r\n                    <div className={`tab-pane fade ${activeTab === 'tab2' ? 'show active' : ''}`} id=\"tab2\" role=\"tabpanel\">\r\n                        <h5>Content of Tab 2</h5>\r\n                    </div>\r\n                    <div className={`tab-pane fade ${activeTab === 'tab3' ? 'show active' : ''}`} id=\"tab3\" role=\"tabpanel\">\r\n                        <h5>Content of Tab 3</h5>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n            <ResponsiveContainer className=\"chart_engagement\" width=\"100%\" height=\"100%\">\r\n                <BarChart\r\n                    width={500}\r\n                    height={300}\r\n                    data={data}\r\n                    margin={{\r\n                        top: 20,\r\n                        right: 0,\r\n                        left: 0,\r\n                        bottom: 5,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"1 1\" />\r\n                    <XAxis dataKey=\"bar_date\" tick={<CustomXAxisTick />} />\r\n                    <YAxis />\r\n                    {/* <XAxis dataKey=\"bar_date\" tick={<CustomXAxisTick />} label={{ value: 'Month', position: 'insideLeft', offset: -10, style: { fontWeight: 'bold', fontSize: '12px' } }} />\r\n                    <YAxis label={{ value: 'Sales', angle: -90, position: 'insideLeft', offset: 0, style: { fontWeight: 'bold', fontSize: '12px' } }} /> */}\r\n                    <Tooltip content={<CustomTooltip />} />\r\n\r\n\r\n\r\n                    {activeTab === \"tab1\" && <Bar dataKey=\"total_views\" maxBarSize={20} fill=\"#77BBFF\" />}\r\n                    {activeTab === \"tab2\" && <Bar dataKey=\"unique_views\" maxBarSize={20} fill=\"#77BBFF\" />}\r\n                    {activeTab === \"tab3\" && <Bar dataKey=\"watch_time\" maxBarSize={20} fill=\"#77BBFF\" />}\r\n\r\n                    {activeTab === \"tab1\" && <Legend payload={\r\n                        [1].map(\r\n                            (item, index) => ({\r\n                                id: \"index\",\r\n                                type: \"rect\",\r\n                                value: `Total Views`,\r\n                                color: \"#77BBFF\"\r\n                            })\r\n                        )\r\n                    } />}\r\n                    {activeTab === \"tab2\" && <Legend payload={\r\n                        [1].map(\r\n                            (item, index) => ({\r\n                                id: \"index\",\r\n                                type: \"rect\",\r\n                                value: `Unique Views`,\r\n                                color: \"#77BBFF\"\r\n                            })\r\n                        )\r\n                    } />}\r\n                    {activeTab === \"tab3\" && <Legend payload={\r\n                        [1].map(\r\n                            (item, index) => ({\r\n                                id: \"index\",\r\n                                type: \"rect\",\r\n                                value: `Watch Time`,\r\n                                color: \"#77BBFF\"\r\n                            })\r\n                        )\r\n                    } />\r\n                    }\r\n\r\n\r\n                    {/* <Bar dataKey=\"uv\" fill=\"#82ca9d\" activeBar={<Rectangle fill=\"gold\" stroke=\"purple\" />} /> */}\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Perfomance;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { BarChart, Bar, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Rectangle } from 'recharts';\r\nimport \"../chart.css\"\r\nconst SalesConversion = () => {\r\n    const [data, setData] = useState([\r\n        { name: 'Jan', uv: 4000, pv: 2400, amt: 400 },\r\n        { name: 'Feb', uv: 3000, pv: 1398, amt: 210 },\r\n        { name: 'Mar', uv: 2000, pv: 9800, amt: 290 },\r\n        { name: 'Apr', uv: 2780, pv: 3908, amt: 100 },\r\n        { name: 'May', uv: 1890, pv: 4800, amt: 181 },\r\n        { name: 'Jun', uv: 2390, pv: 3800, amt: 500 },\r\n        { name: 'July', uv: 3490, pv: 4300, amt: 100 },\r\n        { name: 'Aug', uv: 3490, pv: 4300, amt: 330 },\r\n        { name: 'Sep', uv: 3490, pv: 4300, amt: 430 },\r\n        { name: 'Oct', uv: 3490, pv: 4300, amt: 140 },\r\n        { name: 'Nov', uv: 3490, pv: 4300, amt: 230 },\r\n        { name: 'Dec', uv: 3490, pv: 4300, amt: 110 },\r\n    ]);\r\n\r\n    // useEffect hook example (optional, use it if needed)\r\n    useEffect(() => {\r\n        setData([\r\n            { name: 'Jan', uv: 4000, pv: 2400, amt: 400 },\r\n            { name: 'Feb', uv: 3000, pv: 1398, amt: 210 },\r\n            { name: 'Mar', uv: 2000, pv: 9800, amt: 290 },\r\n            { name: 'Apr', uv: 2780, pv: 3908, amt: 100 },\r\n            { name: 'May', uv: 1890, pv: 4800, amt: 181 },\r\n            { name: 'Jun', uv: 2390, pv: 3800, amt: 500 },\r\n            { name: 'July', uv: 3490, pv: 4300, amt: 100 },\r\n            { name: 'Aug', uv: 3490, pv: 4300, amt: 330 },\r\n            { name: 'Sep', uv: 3490, pv: 4300, amt: 430 },\r\n            { name: 'Oct', uv: 3490, pv: 4300, amt: 140 },\r\n            { name: 'Nov', uv: 3490, pv: 4300, amt: 230 },\r\n            { name: 'Dec', uv: 3490, pv: 4300, amt: 110 },\r\n        ])\r\n    }, []);\r\n\r\n    const [activeTab, setActiveTab] = useState('totalsales');\r\n\r\n    const handleTabClick = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n    return (\r\n        <>\r\n            <div >\r\n                <ul className=\"nav nav-tabs\">\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'totalsales' ? 'active' : ''}`} onClick={() => handleTabClick('totalsales')}>\r\n                            <p>Total sales</p>\r\n                            <h3>$84.8k</h3>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'videosales' ? 'active' : ''}`} onClick={() => handleTabClick('videosales')}>\r\n                            <p>Sales from videos</p>\r\n                            <h3>$42.4k</h3>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className={`nav-link ${activeTab === 'productsales' ? 'active' : ''}`} onClick={() => handleTabClick('productsales')}>\r\n                            <p>Sales from products</p>\r\n                            <h3>$42.4k</h3>\r\n                        </div>\r\n                    </li>\r\n\r\n                </ul>\r\n                {/* <div className=\"tab-content mt-3\">\r\n                    <div className={`tab-pane fade ${activeTab === 'totalsales' ? 'show active' : ''}`} id=\"totalsales\" role=\"tabpanel\">\r\n                        <h5>Content of Tab 1</h5>\r\n                    </div>\r\n                    <div className={`tab-pane fade ${activeTab === 'videosales' ? 'show active' : ''}`} id=\"videosales\" role=\"tabpanel\">\r\n                        <h5>Content of Tab 2</h5>\r\n                    </div>\r\n                    <div className={`tab-pane fade ${activeTab === 'productsales' ? 'show active' : ''}`} id=\"productsales\" role=\"tabpanel\">\r\n                        <h5>Content of Tab 3</h5>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n            <ResponsiveContainer className=\"chart_engagement\" width=\"100%\" height=\"100%\">\r\n                <BarChart\r\n                    width={500}\r\n                    height={300}\r\n                    data={data}\r\n                    margin={{\r\n                        top: 20,\r\n                        right: 0,\r\n                        left: 0,\r\n                        bottom: 5,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    {/* <Tooltip /> */}\r\n                    {/* <Legend /> */}\r\n                    <Bar dataKey=\"amt\" maxBarSize={20} fill=\"#77BBFF\" activeBar={<Rectangle fill=\"pink\" stroke=\"blue\" />} />\r\n                    {/* <Bar dataKey=\"uv\" fill=\"#82ca9d\" activeBar={<Rectangle fill=\"gold\" stroke=\"purple\" />} /> */}\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SalesConversion;\r\n","import React, { useEffect, useState } from 'react'\r\nimport img from \"../assets/images/fake-dashboard.jpg\"\r\nimport EngageMent from '../components/charts/EngageMent'\r\nimport Perfomance from '../components/charts/Perfomance'\r\nimport SalesConversion from '../components/charts/SalesConversion'\r\nimport { DateRangePicker } from 'react-date-range'\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { Helmet } from \"react-helmet\";\r\nimport \"./dashboard.css\"\r\nimport { useSelector } from 'react-redux'\r\nimport { TailSpin } from 'react-loader-spinner'\r\nconst DashBoard = ({ state, setState, setTab }) => {\r\n    const today = new Date();\r\n    const yesterday = new Date(today);\r\n    yesterday.setDate(today.getDate() - 1);\r\n    const authData = useSelector((state => state.auth.user))\r\n    const [allAnalyticsData, setAllAnalyticsData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const [xstate, setxState] = useState([\r\n        {\r\n            startDate: new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000),\r\n            endDate: yesterday,\r\n            key: 'selection'\r\n        }\r\n    ]);\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n    const handleApply = () => {\r\n        // Your apply logic here\r\n        setDropdownOpen(false); // Close the dropdown\r\n        setState(xstate)\r\n    };\r\n\r\n    useEffect(() => {\r\n        setxState(state)\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>SWIRL | Dashboard</title>\r\n            </Helmet>\r\n            <div className='card '>\r\n                <div className=\"row p-2\" >\r\n                    <div className=\"col\">\r\n                        <div className='d-flex'>\r\n                            <ul className=\"nav nav-tabs\" id=\"responsive-tabs\" role=\"tablist\">\r\n                                <li className=\"nav-item\" role=\"presentation\">\r\n                                    <button className=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#home\" type=\"button\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Shoppable Video</button>\r\n                                </li>\r\n                                <li className=\"nav-item d-none\" role=\"presentation\">\r\n                                    <button className=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#profile\" type=\"button\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\" disabled>Live Stream</button>\r\n                                </li>\r\n\r\n                            </ul>\r\n                            <div className='ms-auto d-flex align-items-center' >\r\n                                <div className=\"dropdown\">\r\n\r\n                                    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\r\n                                        <Dropdown.Toggle id=\"dropdown-basic\" className='bg-transparent text-dark border-dark'>\r\n                                            {state[0].endDate !== null ? `${state[0].startDate.toString().slice(4, 15)} to ${state[0].endDate.toString().slice(4, 15)}` : \"Filter by date\"}\r\n                                        </Dropdown.Toggle>\r\n\r\n                                        <Dropdown.Menu>\r\n                                            <DateRangePicker\r\n                                                editableDateInputs={false}\r\n                                                onChange={item => setxState([item.selection])}\r\n                                                moveRangeOnFirstSelection={true}\r\n                                                ranges={xstate}\r\n                                                months={2}\r\n                                                direction='horizontal'\r\n                                            // maxDate={yesterday}\r\n                                            // minDate={authData?.brand_id == \"236633565\" ? new Date(2024, 2, 15) : new Date(2024, 3, 5)}\r\n                                            // rangeColors={['#17171C']}\r\n\r\n                                            />\r\n                                            <div className='w-100'>\r\n                                                <button id=\"dropdown-basic\" className='btn btn-sm btn-primary float-end me-3' onClick={handleApply}>Done</button>\r\n                                                <button id=\"dropdown-basic\" className='btn btn-sm btn-outline-primary float-end me-3' onClick={() => {\r\n                                                    setxState([\r\n                                                        {\r\n                                                            startDate: new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000),\r\n                                                            endDate: yesterday,\r\n                                                            key: 'selection'\r\n                                                        }\r\n                                                    ])\r\n                                                }}>Reset</button>\r\n\r\n                                            </div>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tab-content p-3\" id=\"responsive-tabs-content\">\r\n                            <div className=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\r\n                                {loading && <div style={{ position: \"absolute\", width: \"95%\", height: \"68vh\", display: \"flex\", zIndex: \"1000\", alignItems: 'center', justifyContent: \"center\", overflow: 'hidden', backgroundColor: \"rgba(255,255,255,0.4)\" }}>\r\n\r\n                                    <TailSpin\r\n                                        visible={true}\r\n                                        height=\"60\"\r\n                                        width=\"60\"\r\n                                        color=\"rgba(0,0,0,0.5)\"\r\n                                        ariaLabel=\"tail-spin-loading\"\r\n                                        radius=\"1\"\r\n                                        wrapperStyle={{}}\r\n                                        wrapperClass=\"\"\r\n                                    />\r\n                                </div>}\r\n                                <ul className=\"nav nav-tabs\" id=\"responsive-tabs\" role=\"tablist\">\r\n\r\n                                    <li className=\"nav-item\" role=\"presentation\">\r\n                                        <button className=\"nav-link active\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#engagement\" type=\"button\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Engagment</button>\r\n                                    </li>\r\n                                    <li className=\"nav-item\" role=\"presentation\">\r\n                                        <button className=\"nav-link \" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#Performance\" type=\"button\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Performance</button>\r\n                                    </li>\r\n                                    <li className=\"nav-item d-none\" role=\"presentation\">\r\n                                        <button className=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#sconversion\" type=\"button\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\" disabled>Sales Conversion</button>\r\n                                    </li>\r\n\r\n                                </ul>\r\n                                <div className=\"tab-content p-3\" id=\"responsive-tabs-content\">\r\n\r\n                                    <div className=\"tab-pane fade show active\" id=\"engagement\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\r\n                                        <EngageMent selectedDate={state[0]} setTab={setTab} setAllAnalyticsData={setAllAnalyticsData} setLoading={setLoading} />\r\n\r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"Performance\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\r\n                                        <Perfomance selectedDate={state[0]} setTab={setTab} allAnalyticsData={allAnalyticsData} />\r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"sconversion\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\r\n                                        <SalesConversion selectedDate={state[0]} setTab={setTab} />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"tab-pane fade\" id=\"profile\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\r\n                                <div style={{ height: \"60vh\", width: \"70vw\", position: \"absolute\" }}>\r\n                                    <img src={img} alt='coming_soon' style={{ height: \"60vh\", width: \"70vw\" }} />\r\n                                </div>\r\n                                <div style={{ height: \"60vh\", width: \"70vw\", backgroundColor: \"rgba(0,0,0,0.6)\", position: \"relative\", display: \"grid\", placeItems: \"center\" }}>\r\n\r\n                                    <div className='text-center text-white'>\r\n                                        <h2>Coming soon...</h2>\r\n                                        <p>We are working on it.</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashBoard","function numberFormatShort(n, precision = 1) {\r\n    if (n < 900) {\r\n        // 0 - 900\r\n        let n_format = parseInt(n);\r\n        let suffix = \"\";\r\n        return n_format + suffix;\r\n    } else if (n < 900000) {\r\n        // 0.9k-850k\r\n        let n_format = (parseInt(n) / 1000).toFixed(precision);\r\n        let suffix = \"K\";\r\n        return n_format + suffix;\r\n    } else if (n < 900000000) {\r\n        // 0.9m-850m\r\n        let n_format = (parseInt(n) / 1000000).toFixed(precision);\r\n        let suffix = \"M\";\r\n        return n_format + suffix;\r\n    } else if (n < 900000000000) {\r\n        // 0.9b-850b\r\n        let n_format = (parseInt(n) / 1000000000).toFixed(precision);\r\n        let suffix = \"B\";\r\n        return n_format + suffix;\r\n    } else if (n === undefined || n === null) {\r\n        return 0\r\n    } else {\r\n        // 0.9t+\r\n        let n_format = (parseInt(n) / 1000000000000).toFixed(precision);\r\n        let suffix = \"T\";\r\n        return n_format + suffix;\r\n    }\r\n}\r\n\r\nfunction animateCount(targetNumber, duration) {\r\n    let currentNumber = 0;\r\n    const increment = Math.ceil(targetNumber / (duration / 50)); // Assuming 50 steps per second\r\n\r\n    const interval = setInterval(() => {\r\n        currentNumber += increment;\r\n        document.getElementById('counter').innerText = currentNumber;\r\n\r\n        if (currentNumber >= targetNumber) {\r\n            clearInterval(interval);\r\n            document.getElementById('counter').innerText = targetNumber;\r\n        }\r\n    }, 20); // Update every 20 milliseconds\r\n}\r\nmodule.exports = {\r\n    numberFormatShort,\r\n    animateCount\r\n}"],"names":["_ref","targetNumber","currentNumber","setCurrentNumber","useState","useEffect","increment","Math","ceil","interval","setInterval","prevNumber","newNumber","clearInterval","number","toFixed","Number","isInteger","parseFloat","selectedDate","setTab","setAllAnalyticsData","setLoading","data","setData","overalldata","setOverallData","user","useSelector","state","auth","activeTab","setActiveTab","handleTabClick","tab","getDataForEngagement","useCallback","async","response","axios","get","concat","brand_id","format","startDate","endDate","resp","totalData","reduce","totals","entry","unique_views","parseInt","total_unique_views","total_views","watch_time","total_watchtime","buyNow","addtoCart","askQuestion","calculateTotals","repeatViews","console","log","engagement_rate","ctr_rate","isNaN","newData","array","months","days","map","obj","year","month","day","date","split","Date","shortYear","getFullYear","toString","substr","barDate","getDate","getMonth","getDay","bar_date","addBarDate","error","useLayoutEffect","CustomXAxisTick","_ref2","x","y","payload","formattedDate","value","slice","_jsx","style","fontSize","dy","textAnchor","fill","children","CustomTooltip","_ref3","active","label","length","_jsxs","className","borderRight","borderLeft","borderRadius","_Fragment","onClick","ZeroToHeroCount","Link","to","MdOutlineKeyboardArrowRight","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tick","YAxis","Tooltip","content","Bar","maxBarSize","Legend","item","index","id","type","color","allAnalyticsData","convertSecondsToTime","seconds","hours","floor","minutes","remainingSeconds","getDataForPerfomance","numberFormatShort","SalesConversion","name","uv","pv","amt","activeBar","Rectangle","stroke","setState","today","yesterday","setDate","loading","xstate","setxState","getTime","key","dropdownOpen","setDropdownOpen","Helmet","role","disabled","Dropdown","show","onToggle","toggleDropdown","Toggle","Menu","DateRangePicker","editableDateInputs","onChange","selection","moveRangeOnFirstSelection","ranges","direction","handleApply","position","display","zIndex","alignItems","justifyContent","overflow","backgroundColor","TailSpin","visible","ariaLabel","radius","wrapperStyle","wrapperClass","EngageMent","Perfomance","src","img","alt","placeItems","module","exports","n","precision","arguments","undefined","animateCount","duration","document","getElementById","innerText"],"sourceRoot":""}