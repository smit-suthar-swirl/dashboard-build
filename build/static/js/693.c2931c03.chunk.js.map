{"version":3,"file":"static/js/693.c2931c03.chunk.js","mappings":"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","sources":["components/upload/SelectPlayList.js","components/upload/SelecteProducts.js","components/video-preview/VideoPreviewModel.js","firebase-config.js","components/videomodal/Comment.js","components/videomodal/PinComment.js","components/videomodal/VideoModal.js","components/ask-question-modal/AskQuestionModel.js","components/reports/Report.js","pages/SSVpage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Select, { components } from 'react-select';\r\nimport { MdDragIndicator } from \"react-icons/md\";\r\nimport { IoClose } from \"react-icons/io5\";\r\n\r\nconst SelectPlayList = ({ selectedPlalist, data, setselectedPlalist }) => {\r\n    const handleItemSelect = (selectedOption) => {\r\n        if (selectedOption.length > 0) {\r\n\r\n            if (parseInt(selectedOption[selectedOption.length - 1].videoCount) > 9) {\r\n                // setselectedPlalist(selectedOption.slice(0, selectedOption.length - 1));\r\n            } else {\r\n                setselectedPlalist(selectedOption)\r\n            }\r\n        } else {\r\n            setselectedPlalist(selectedOption)\r\n        }\r\n\r\n    };\r\n\r\n    const handleDragStart = (e, index) => {\r\n        e.dataTransfer.setData('index', index);\r\n    };\r\n\r\n    const handleDrop = (e, index) => {\r\n        const draggedIndex = e.dataTransfer.getData('index');\r\n        const draggedItem = selectedPlalist[draggedIndex];\r\n\r\n        const newItems = [...selectedPlalist];\r\n        newItems.splice(draggedIndex, 1);\r\n        newItems.splice(index, 0, draggedItem);\r\n\r\n        setselectedPlalist(newItems);\r\n    };\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleInputChange = (index, value) => {\r\n        const newItems = [...selectedPlalist];\r\n        newItems[index].name = value;\r\n        setselectedPlalist(newItems);\r\n    };\r\n\r\n    const handleRemoveItem = (index) => {\r\n        const newItems = [...selectedPlalist];\r\n        newItems.splice(index, 1);\r\n        setselectedPlalist(newItems);\r\n    };\r\n\r\n    const CustomOption = ({ children, ...props }) => {\r\n        return (\r\n            <components.Option {...props} isDisabled={parseInt(props.data.videoCount) > 9 ? true : false}>\r\n                <div className=\"w-100 d-flex\">\r\n                    <span>{children} {\" \"}{parseInt(props.data.videoCount) > 9 ? \"(Max videos selected)\" : \"\"}</span>\r\n                    <span\r\n                        className=\"text-dark float-end ms-auto\"\r\n                        style={{\r\n                            fontSize: \"14px\",\r\n                            paddingTop: \"3px\",\r\n                            paddingLeft: \"3px\",\r\n                            paddingRight: \"3px\",\r\n                            borderRadius: \"15px\",\r\n                            backgroundColor: \"rgb(238, 238, 119)\",\r\n                        }}\r\n                    >\r\n                        <small>\r\n                            {props.data.videoCount}{\" \"}\r\n                            {parseInt(props.data.videoCount) > 1 ? \"Videos\" : \"Video\"}\r\n                        </small>\r\n                    </span>\r\n                </div>\r\n\r\n            </components.Option>\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                <Select\r\n                    options={data}\r\n                    isMulti\r\n                    value={selectedPlalist}\r\n                    onChange={handleItemSelect}\r\n                    placeholder=\"Select playlist\"\r\n                    getOptionLabel={(option) => option.name}\r\n                    getOptionValue={(option) => option.id}\r\n                    closeMenuOnSelect={false}\r\n                    components={{ Option: CustomOption }}\r\n                // components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                />\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n                {selectedPlalist.map((item, index) => (\r\n                    <div\r\n                        key={index}\r\n                        onDragStart={(e) => handleDragStart(e, index)}\r\n                        onDragOver={handleDragOver}\r\n                        onDrop={(e) => handleDrop(e, index)}\r\n                        draggable\r\n                        className='m-1'\r\n                        style={{ background: \"#EEEE77\", color: \"#17171C\", padding: \"3px 9px\", borderRadius: '15px', cursor: \"pointer\" }}\r\n                    >\r\n                        <small> <MdDragIndicator /> {item.name} <IoClose style={{ marginTop: \"-2px\" }} onClick={() => handleRemoveItem(index)} /></small>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default SelectPlayList;\r\n","import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { MdDragIndicator } from \"react-icons/md\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport { toast } from 'react-toastify';\r\n\r\nconst SelecteProducts = ({ data, selectedItems, setSelectedItems }) => {\r\n\r\n    const handleItemSelect = (selectedOption) => {\r\n        setSelectedItems(selectedOption);\r\n    };\r\n\r\n    const handleDragStart = (e, index) => {\r\n        e.dataTransfer.setData('index', index);\r\n    };\r\n\r\n    const handleDrop = (e, index) => {\r\n        const draggedIndex = e.dataTransfer.getData('index');\r\n        const draggedItem = selectedItems[draggedIndex];\r\n\r\n        const newItems = [...selectedItems];\r\n        newItems.splice(draggedIndex, 1);\r\n        newItems.splice(index, 0, draggedItem);\r\n\r\n        setSelectedItems(newItems);\r\n    };\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleInputChange = (index, value) => {\r\n        const newItems = [...selectedItems];\r\n        newItems[index].productTitle = value;\r\n        setSelectedItems(newItems);\r\n    };\r\n\r\n    const handleRemoveItem = (index) => {\r\n        const newItems = [...selectedItems];\r\n        newItems.splice(index, 1);\r\n        setSelectedItems(newItems);\r\n    };\r\n    const customStyles = {\r\n        control: (provided) => ({\r\n            ...provided,\r\n            width: '100%', // Make the input field full-width\r\n        }),\r\n        option: (provided) => ({\r\n            ...provided,\r\n            fontSize: '12px', // Adjust the font size for smaller tags\r\n        }),\r\n        // singleValue: (provided) => ({\r\n        //     ...provided,\r\n        //     fontSize: '12px', // Adjust the font size for smaller tags\r\n        //     width: '300px'\r\n        // }),\r\n    };\r\n    const truncateLabel = (label, maxLength) => {\r\n        if (label?.length <= maxLength) {\r\n            return label;\r\n        }\r\n        return label?.substring(0, maxLength) + '...';\r\n    };\r\n\r\n    const customFormatTagsLabel = ({ productTitle }, type) => {\r\n\r\n        if (!productTitle) return\r\n        if (type === \"option\") {\r\n            return productTitle\r\n        } else {\r\n            return truncateLabel(productTitle, 40);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className='mt-3'>\r\n                <Select\r\n                    options={data}\r\n                    // formatOptionLabel={(e) => customFormatTagsLabel(e, \"tag\")}\r\n                    formatSelectedOptionLabel={(e) => customFormatTagsLabel(e, 'option')}\r\n                    hideSelectedOptions={true}\r\n                    className='w-100'\r\n                    isMulti={true}\r\n                    value={selectedItems}\r\n                    getOptionLabel={(option) => option.productTitle}\r\n                    getOptionValue={(option) => option.productId}\r\n                    onChange={handleItemSelect}\r\n                    placeholder=\"Attach Products\"\r\n                    closeMenuOnSelect={false}\r\n                    styles={customStyles}\r\n                    backspaceRemovesValue\r\n                    isOptionDisabled={() => selectedItems.length === 7}\r\n\r\n                />\r\n            </div>\r\n            <div style={{ display: \"flex\", flexWrap: 'wrap' }}>\r\n                {selectedItems.map((item, index) => (\r\n                    <div\r\n                        key={index}\r\n                        onDragStart={(e) => handleDragStart(e, index)}\r\n                        onDragOver={handleDragOver}\r\n                        onDrop={(e) => handleDrop(e, index)}\r\n                        draggable\r\n                        className='m-1'\r\n                        style={{ background: \"#EEEE77\", color: \"#17171C\", padding: \"3px 9px\", borderRadius: '15px', cursor: \"pointer\" }}\r\n                    >\r\n                        <small title={item.productTitle}> <MdDragIndicator /> {item.productTitle.slice(0, 20)} <IoClose style={{ marginTop: \"-2px\" }} onClick={() => handleRemoveItem(index)} /></small>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelecteProducts;\r\n","import React from 'react'\r\nimport { Modal } from 'react-bootstrap';\r\nconst VideoPreviewModel = ({ show, handleClose, url }) => {\r\n    return (\r\n        <Modal show={show} className='d-grid modal_video' size='lg' onHide={handleClose}>\r\n\r\n            <Modal.Body>\r\n                <div className='row m-0 p-0' >\r\n                    <div style={{ maxWidth: \"400px\", margin: \"0\", padding: \"0\" }}>\r\n                        <video className='modal_video' controls width=\"600\" height=\"400\" autoPlay loop>\r\n                            <source src={url} type=\"video/mp4\" />\r\n                            Your browser does not support the video tag.\r\n                        </video>\r\n                    </div>\r\n\r\n                </div>\r\n            </Modal.Body>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default VideoPreviewModel","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"@firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: window.atob('QUl6YVN5QXVCWEJUb2NzaFU1a2V4T28tTzNqNW40SkZsblZReU9v'),\r\n    authDomain: 'swirl-short-vido.firebaseapp.com',\r\n    projectId: 'swirl-short-vido',\r\n    storageBucket: 'swirl-short-vido.appspot.com'\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const db = getFirestore(app);","import React, { useEffect, useRef, useState } from 'react'\r\nimport { RiPushpin2Fill, RiPushpin2Line, RiPushpinFill } from \"react-icons/ri\";\r\nimport { FaEdit, FaTrash } from 'react-icons/fa';\r\nimport { MdOutlineEdit } from \"react-icons/md\";\r\nimport { IoTrashOutline } from \"react-icons/io5\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nconst Comment = ({ el, updatePinStatus, removeComment }) => {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    // Convert the timestamp to a number\r\n    const timestampNumber = Number(el.createdAt);\r\n\r\n    // Create a Moment.js object from the timestamp\r\n    const momentTime = moment(timestampNumber);\r\n    const timeFromNow = momentTime.fromNow()\r\n\r\n\r\n    return (\r\n        <div className={`d-flex ps-2 pe-2 pt-2 hover-target-${el.id}`} onMouseEnter={() => {\r\n            setVisible(true)\r\n        }} onMouseMove={() => {\r\n            setVisible(true)\r\n        }}\r\n            onMouseOver={() => {\r\n                setVisible(true)\r\n            }}\r\n            onMouseLeave={() => { setVisible(false) }}>\r\n            {el.brand_logo ? <img style={{ height: \"30px\", width: \"30px\", borderRadius: \"50%\" }} src={el.brand_logo} /> : <>\r\n                <svg width=\"37\" height=\"37\" viewBox=\"0 0 30 31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <g filter=\"url(#filter0_b_284_9460)\">\r\n                        <circle cx=\"15\" cy=\"15.6431\" r=\"15\" fill=\"#E8E8E8\"></circle>\r\n                    </g>\r\n                    <g clip-path=\"url(#clip0_284_9460)\">\r\n                        <path d=\"M9.66699 22.3096C9.66699 20.8951 10.2289 19.5385 11.2291 18.5383C12.2293 17.5381 13.5858 16.9762 15.0003 16.9762C16.4148 16.9762 17.7714 17.5381 18.7716 18.5383C19.7718 19.5385 20.3337 20.8951 20.3337 22.3096H19.0003C19.0003 21.2487 18.5789 20.2313 17.8288 19.4811C17.0786 18.731 16.0612 18.3096 15.0003 18.3096C13.9395 18.3096 12.922 18.731 12.1719 19.4811C11.4218 20.2313 11.0003 21.2487 11.0003 22.3096H9.66699ZM15.0003 16.3096C12.7903 16.3096 11.0003 14.5196 11.0003 12.3096C11.0003 10.0996 12.7903 8.30957 15.0003 8.30957C17.2103 8.30957 19.0003 10.0996 19.0003 12.3096C19.0003 14.5196 17.2103 16.3096 15.0003 16.3096ZM15.0003 14.9762C16.4737 14.9762 17.667 13.7829 17.667 12.3096C17.667 10.8362 16.4737 9.6429 15.0003 9.6429C13.527 9.6429 12.3337 10.8362 12.3337 12.3096C12.3337 13.7829 13.527 14.9762 15.0003 14.9762Z\" fill=\"#747477\"></path>\r\n                    </g>\r\n                    <defs>\r\n                        <filter id=\"filter0_b_284_9460\" x=\"-10\" y=\"-9.35693\" width=\"50\" height=\"50\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\r\n                            <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"></feFlood>\r\n                            <feGaussianBlur in=\"BackgroundImageFix\" stdDeviation=\"5\"></feGaussianBlur>\r\n                            <feComposite in2=\"SourceAlpha\" operator=\"in\" result=\"effect1_backgroundBlur_284_9460\"></feComposite>\r\n                            <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_backgroundBlur_284_9460\" result=\"shape\"></feBlend>\r\n                        </filter>\r\n                        <clipPath id=\"clip0_284_9460\">\r\n                            <rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(7 7.64307)\"></rect>\r\n                        </clipPath>\r\n                    </defs>\r\n                </svg></>}\r\n            <div className='d-flex ms-2 w-100 justify-content-between'>\r\n                <div>\r\n                    <b>{el.uName}<GoDotFill size={10} color='#D9D9D9' /><small className='ps-1' style={{ color: \"rgba(0,0,0,0.5)\" }}>{timeFromNow}</small></b>\r\n                    {/* editVideoComment({...el, comment: updatedMessage }) */}\r\n                    <p style={{ fontWeight: \"lighter\", color: \"#515151\", textWrap: 'wrap', wordBreak: 'break-all' }}>{el?.comment?.includes(\"http\") ? <a href={el.comment} target='_blank'>{el.comment}</a> : el.comment} </p>\r\n                </div>\r\n                <div className={`d-flex hidden-div-${el.id} gap-1`} style={{ visibility: visible ? \"visible\" : \"hidden\", cursor: \"pointer\" }}>\r\n\r\n                    {el.isPinned == 1 ? <RiPushpin2Fill onClick={() => updatePinStatus(el)} size={21} /> : <RiPushpin2Line onClick={() => updatePinStatus(el)} size={21} />}\r\n                    <IoTrashOutline size={18} onClick={() => removeComment(el)} color='red' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment","import React, { useState } from 'react'\r\nimport { RiPushpin2Fill, RiPushpin2Line, RiPushpinFill } from \"react-icons/ri\";\r\nimport { FaTrash } from 'react-icons/fa';\r\nimport { IoTrashOutline } from \"react-icons/io5\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport moment from 'moment';\r\nconst PinComment = ({ el, updatePinStatus, removeComment }) => {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    // Convert the timestamp to a number\r\n    const timestampNumber = Number(el.createdAt);\r\n\r\n    // Create a Moment.js object from the timestamp\r\n    const momentTime = moment(timestampNumber);\r\n    const timeFromNow = momentTime.fromNow()\r\n\r\n\r\n    return (\r\n        <div className={`d-flex ps-2 pe-2 pt-2 hover-target-${el.id}`} style={{ backgroundColor: \"#F3F4F8\" }} onMouseEnter={() => {\r\n            setVisible(true)\r\n        }}\r\n            onMouseMove={() => {\r\n                setVisible(true)\r\n            }}\r\n            onMouseLeave={() => { setVisible(false) }}>\r\n            {el.brand_logo ? <img style={{ height: \"30px\", width: \"30px\", borderRadius: \"50%\" }} src={el.brand_logo} /> : <>\r\n                <svg width=\"37\" height=\"37\" viewBox=\"0 0 30 31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <g filter=\"url(#filter0_b_284_9460)\">\r\n                        <circle cx=\"15\" cy=\"15.6431\" r=\"15\" fill=\"#E8E8E8\"></circle>\r\n                    </g>\r\n                    <g clip-path=\"url(#clip0_284_9460)\">\r\n                        <path d=\"M9.66699 22.3096C9.66699 20.8951 10.2289 19.5385 11.2291 18.5383C12.2293 17.5381 13.5858 16.9762 15.0003 16.9762C16.4148 16.9762 17.7714 17.5381 18.7716 18.5383C19.7718 19.5385 20.3337 20.8951 20.3337 22.3096H19.0003C19.0003 21.2487 18.5789 20.2313 17.8288 19.4811C17.0786 18.731 16.0612 18.3096 15.0003 18.3096C13.9395 18.3096 12.922 18.731 12.1719 19.4811C11.4218 20.2313 11.0003 21.2487 11.0003 22.3096H9.66699ZM15.0003 16.3096C12.7903 16.3096 11.0003 14.5196 11.0003 12.3096C11.0003 10.0996 12.7903 8.30957 15.0003 8.30957C17.2103 8.30957 19.0003 10.0996 19.0003 12.3096C19.0003 14.5196 17.2103 16.3096 15.0003 16.3096ZM15.0003 14.9762C16.4737 14.9762 17.667 13.7829 17.667 12.3096C17.667 10.8362 16.4737 9.6429 15.0003 9.6429C13.527 9.6429 12.3337 10.8362 12.3337 12.3096C12.3337 13.7829 13.527 14.9762 15.0003 14.9762Z\" fill=\"#747477\"></path>\r\n                    </g>\r\n                    <defs>\r\n                        <filter id=\"filter0_b_284_9460\" x=\"-10\" y=\"-9.35693\" width=\"50\" height=\"50\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\r\n                            <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"></feFlood>\r\n                            <feGaussianBlur in=\"BackgroundImageFix\" stdDeviation=\"5\"></feGaussianBlur>\r\n                            <feComposite in2=\"SourceAlpha\" operator=\"in\" result=\"effect1_backgroundBlur_284_9460\"></feComposite>\r\n                            <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_backgroundBlur_284_9460\" result=\"shape\"></feBlend>\r\n                        </filter>\r\n                        <clipPath id=\"clip0_284_9460\">\r\n                            <rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(7 7.64307)\"></rect>\r\n                        </clipPath>\r\n                    </defs>\r\n                </svg></>}\r\n            <div className='d-flex ms-2 w-100 justify-content-between'>\r\n                <div>\r\n                    <b>{el.uName}<GoDotFill size={10} color='#D9D9D9' /><small className='ps-1' style={{ color: \"rgba(0,0,0,0.5)\" }}>{timeFromNow}</small></b>\r\n                    <p style={{ fontWeight: \"lighter\", color: \"#515151\", textWrap: 'wrap', wordBreak: 'break-all' }}>{el?.comment?.includes(\"http\") ? <a href={el.comment} target='_blank'>{el.comment}</a> : el.comment} </p>\r\n                </div>\r\n                <div className={`d-flex hidden-div-${el.id} gap-1`} style={{ visibility: visible ? \"visible\" : \"hidden\", cursor: \"pointer\" }}>\r\n                    {el.isPinned == 1 ? <RiPushpin2Fill onClick={() => updatePinStatus(el)} size={21} /> : <RiPushpin2Line onClick={() => updatePinStatus(el)} size={21} />}\r\n                    <IoTrashOutline size={18} onClick={() => removeComment(el)} color='red' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PinComment","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { db } from '../../firebase-config';\r\nimport { getDocs, collection, orderBy, query, addDoc, doc, setDoc, updateDoc, onSnapshot } from 'firebase/firestore';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport \"./uploadmodel.css\"\r\nimport Comment from './Comment';\r\nimport PinComment from './PinComment';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst VideoModal = ({ show, handleClose, data }) => {\r\n    const [tab, setTab] = useState(\"products\")\r\n    const [loadingProducts, setLoadingProducts] = useState(false)\r\n    const [products, setProducts] = useState([])\r\n    const user = useSelector(state => state.auth.user);\r\n    const [comments, setComments] = useState([])\r\n    const [message, setMessage] = useState(\"\")\r\n    const [pinMessage, setPinMessage] = useState([])\r\n    const [scrolled, setScrolled] = useState(false);\r\n\r\n    const chatEndRef = useRef()\r\n    const scrolldivref = useRef(null);\r\n    const videoId = data.video_id\r\n    const fetchProducts = async () => {\r\n        setLoadingProducts(true)\r\n        try {\r\n            const res = await axios.get(`https://liveshopping.asia/getProductInfoByVideoId?brandId=${user.brand_id}&videoId=${data.video_id}`);\r\n            if (res.data) {\r\n                setProducts(res.data.productResp)\r\n                setLoadingProducts(false)\r\n                scrollToBottom()\r\n            } else {\r\n                setProducts([])\r\n                setLoadingProducts(false)\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setProducts([])\r\n            setLoadingProducts(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async (videoId) => {\r\n        try {\r\n            const commentRef = collection(db, 'ssv13_comments', `v${videoId}`, 'comments');\r\n            const q = query(commentRef, orderBy('createdAt', 'asc'));\r\n            const snapshot = await getDocs(q);\r\n\r\n            const commentsData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n            const cms = commentsData.filter(obj => obj.isRemoved !== 1);\r\n            const objectsWithPin1 = cms.filter(obj => obj.isPinned === 1);\r\n\r\n            setComments(cms)\r\n            setPinMessage(objectsWithPin1)\r\n            setTimeout(() => {\r\n                scrollToBottom()\r\n            }, 100);\r\n        } catch (error) {\r\n            console.error('Error fetching data: ', error);\r\n        }\r\n    };\r\n\r\n    const addVideoComment = async (vId, cData) => {\r\n        try {\r\n            const videoDocRef = doc(db, `ssv13_comments/v${vId}`);\r\n            await setDoc(videoDocRef, {});\r\n            const commentDocRef = await addDoc(collection(db, `ssv13_comments/v${vId}/comments`), cData);\r\n            scrollToBottom()\r\n            subComment()\r\n            return commentDocRef.id;\r\n        } catch (error) {\r\n            console.error(\"Error adding video comment document: \", error);\r\n            throw error;\r\n        }\r\n    };\r\n    const editVideoComment = async (updatedData) => {\r\n\r\n        try {\r\n            const commentDocRef = doc(db, `ssv13_comments/v${videoId}/comments/${updatedData.id}`);\r\n            await updateDoc(commentDocRef, updatedData);\r\n            subComment()\r\n        } catch (error) {\r\n            console.error(\"Error updating video comment document: \", error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const scrollToBottom = () => {\r\n        chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    const subComment = () => {\r\n        const commentRef = collection(db, 'ssv13_comments', `v${data.video_id}`, 'comments');\r\n        const q = query(commentRef, orderBy('createdAt', 'asc'));\r\n\r\n        const unsubscribe = onSnapshot(q, (snapshot) => {\r\n            const commentsData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n\r\n            const cms = commentsData.filter(obj => obj.isRemoved !== 1);\r\n            const objectsWithPin1 = cms.filter(obj => obj.isPinned === 1);\r\n            setComments(cms);\r\n            setPinMessage(objectsWithPin1);\r\n\r\n        }, (error) => {\r\n            console.error('Error fetching data: ', error);\r\n        });\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            let cData = {\r\n                uName: user.first_name,\r\n                comment: message,\r\n                createdAt: new Date().getTime(),\r\n                isPinned: 0,\r\n                isRemoved: 0,\r\n                brand_logo: user?.user_profile\r\n            }\r\n\r\n            await addVideoComment(data.video_id, cData)\r\n            subComment()\r\n            e.target.reset()\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const updatePinStatus = async (comment) => {\r\n        const commentDocRef = doc(db, 'ssv13_comments', `v${data.video_id}`, 'comments', comment.id);\r\n        if (comment.isPinned === 0) {\r\n            if (pinMessage.length < 4) {\r\n                await updateDoc(commentDocRef, { isPinned: comment.isPinned === 0 ? 1 : 0 });\r\n            } else {\r\n                toast.warn(\"4 pinned comment section added fullfiled\")\r\n            }\r\n        } else {\r\n            await updateDoc(commentDocRef, { isPinned: 0 });\r\n        }\r\n        // const commentDocRef = doc(db, 'ssv13_comments', `v${data.video_id}`, 'comments', comment.id);\r\n        // if (pinMessage.length < 4) {\r\n        //     await updateDoc(commentDocRef, { isPinned: comment.isPinned === 0 ? 1 : 0 });\r\n        // } else {\r\n        //     await updateDoc(commentDocRef, { isPinned: 0 });\r\n        // }\r\n        subComment()\r\n    }\r\n\r\n    const removeComment = async (comment) => {\r\n        const commentDocRef = doc(db, 'ssv13_comments', `v${data.video_id}`, 'comments', comment.id);\r\n        await updateDoc(commentDocRef, { isRemoved: 1 });\r\n        subComment()\r\n    }\r\n\r\n    const handleScroll = () => {\r\n        if (scrolldivref.current.scrollTop >= 100) {\r\n            setScrolled(true);\r\n        } else {\r\n            setScrolled(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (show) {\r\n            fetchProducts()\r\n        }\r\n    }, [show])\r\n\r\n    useEffect(() => {\r\n        if (show) {\r\n            setTimeout(() => {\r\n                setScrolled(false)\r\n                scrollToBottom()\r\n            }, 1000);\r\n        }\r\n    }, [videoId, show])\r\n\r\n    useEffect(() => {\r\n        if (show && tab === \"comments\") {\r\n            fetchData(data?.video_id);\r\n        }\r\n    }, [show, data.video_id, tab]);\r\n    const topref = useRef()\r\n    const scrollToTopOfElement = (elementId) => {\r\n\r\n        topref?.current.scrollIntoView();\r\n\r\n    };\r\n\r\n    if (show) {\r\n        return (\r\n            <Modal\r\n                show\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                onHide={handleClose}\r\n            >\r\n                <div className='video-modal-ssv'>\r\n                    <div className='video-modal-ssv-row'>\r\n                        <div className='video-modal-ssv-col'>\r\n                            <video className='modal_video_col' controls width=\"600\" autoPlay loop muted>\r\n                                <source src={data.url} type=\"video/mp4\" />\r\n                                Your browser does not support the video tag.\r\n                            </video>\r\n                        </div>\r\n                        <div className='video-modal-ssv-col'>\r\n                            <ul className=\"nav nav-tabs\" id=\"responsive-tabs\" role=\"tablist\">\r\n                                {products.length > 0 && <li className=\"nav-item\" role=\"presentation\">\r\n                                    <button className=\"nav-link active\" id=\"product-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#product\" type=\"button\" role=\"tab\" aria-controls=\"video\" aria-selected=\"true\" onClick={() => setTab(\"products\")}>Products</button>\r\n                                </li>}\r\n\r\n                                <li className=\"nav-item\" role=\"presentation\">\r\n                                    <button className=\"nav-link\" id=\"comments-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#comments\" type=\"button\" role=\"tab\" aria-controls=\"Reports\" aria-selected=\"false\" onClick={() => setTab(\"comments\")}>Comments</button>\r\n                                </li>\r\n                            </ul>\r\n                            <div className=\"tab-content\" id=\"responsive-tabs-content\" style={{ height: \"calc(100% - 42px)\" }}>\r\n                                <div className={`tab-pane fade ${products.length > 0 ? 'show active' : \"\"} h-100 `} id=\"product\" role=\"tabpanel\" aria-labelledby=\"product-tab\">\r\n                                    {loadingProducts ? (\r\n                                        <p className='text-muted mt-5 text-center'>Loading...</p>\r\n                                    ) : (\r\n                                        products.map((el, index) => {\r\n                                            const currencySymbol = new Intl.NumberFormat(undefined, {\r\n                                                style: \"currency\",\r\n                                                currency: el.currencyName,\r\n                                            })\r\n                                                .formatToParts(0)\r\n                                                .find((part) => part.type === \"currency\").value;\r\n\r\n                                            return (\r\n                                                <div className='p-2 mt-1 m-0 d-flex product_card' key={index}>\r\n                                                    <img alt='productmini' src={el.image} className='rounded' style={{ height: \"60px\", width: \"60px\", border: \"1px solid #aaa\" }} />\r\n                                                    <div className='ps-2 w-100'>\r\n                                                        <h6 className='mb-0 product_title_video_model' title={el.title}>{el.title}</h6>\r\n                                                        <p className='prouct_desc'>{currencySymbol}{parseInt(el.discountPrice).toLocaleString()} {el.discountPrice !== el.price && <span className='text-muted'><del>{currencySymbol}{parseInt(el.price).toLocaleString()}</del></span>} </p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            );\r\n                                        })\r\n                                    )}\r\n                                </div>\r\n                                <div className={`tab-pane fade ${products.length == 0 ? 'show active' : \"\"} h-100 `} id=\"comments\" role=\"tabpanel\" aria-labelledby=\"comments-tab\">\r\n                                    <div className='comment-section-main-div-ssv'>\r\n                                        <div className='section_comment_scroll' ref={scrolldivref} onScroll={handleScroll}>\r\n                                            <div ref={topref}></div>\r\n                                            <div className=\"pinned_section_closed\" style={{ display: scrolled && pinMessage.length > 0 ? \"\" : \"none\" }} onClick={scrollToTopOfElement}>\r\n                                                <p>\r\n                                                    Pinned comment\r\n                                                    <label className=\"JS-pinned-comment-counter-ssv13\">{pinMessage.length}</label>\r\n                                                </p>\r\n                                                <p style={{ marginLeft: \"auto\" }}>\r\n                                                    <svg width=\"13\" height=\"13\" viewBox=\"0 0 13 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                        <path d=\"M12.8764 5.78136L11.9331 6.72402L11.4618 6.25269L8.63377 9.08069L8.16244 11.438L7.2191 12.3807L4.3911 9.55202L1.0911 12.852L0.148438 11.9094L3.44844 8.60936L0.619771 5.78136L1.56244 4.83802L3.92044 4.36669L6.74844 1.53869L6.2771 1.06736L7.21977 0.124023L12.8764 5.78136Z\" fill=\"#334499\"></path>\r\n                                                    </svg>\r\n                                                </p>\r\n                                            </div>\r\n                                            {pinMessage.length > 0 && (\r\n                                                <div className='pin display-flex flex-column'>\r\n                                                    <div id='pinnedcommentsection'>\r\n                                                        {pinMessage.map((el) => (\r\n                                                            <PinComment el={el} updatePinStatus={updatePinStatus} removeComment={removeComment} key={el.id} />\r\n                                                        ))}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                            {comments.length > 0 ? (\r\n                                                <div className='display-flex flex-column' id='unpinnedcommentsection' style={{ overflow: \"auto\" }}>\r\n                                                    {comments.map((el) => (\r\n                                                        <Comment editVideoComment={editVideoComment} el={el} updatePinStatus={updatePinStatus} removeComment={removeComment} key={el.id} />\r\n                                                    ))}\r\n                                                </div>\r\n                                            ) : (\r\n                                                <p className='text-muted text-center mt-5'>No comments</p>\r\n                                            )}\r\n                                            <div ref={chatEndRef}></div>\r\n\r\n                                        </div>\r\n                                        <div className='form-comment p-1 border-top'>\r\n                                            <form className='d-flex' onSubmit={handleSubmit}>\r\n                                                <input className='form-control mt-auto' max={250} maxLength={250} onChange={(e) => setMessage(e.target.value)} placeholder='Type something here..' type='text' />\r\n                                                <button type='submit' className='btn btn-sm btn-dark ms-2' disabled={message.length === 0}>Send</button>\r\n                                            </form>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nexport default VideoModal;","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport DataTable from 'react-data-table-component';\r\nimport \"./ask.css\"\r\nimport { BsQuestionCircleFill } from 'react-icons/bs';\r\nimport { format } from 'date-fns';\r\nimport axios from 'axios';\r\nimport { BiExport } from 'react-icons/bi';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport { RotatingLines } from 'react-loader-spinner';\r\nconst AskQuestionModel = ({ show, handleClose, data }) => {\r\n    const [askQuestData, setAskQuestData] = useState([])\r\n    const [pending, setPending] = React.useState(false);\r\n    const columns = [\r\n        {\r\n            name: 'Video Title',\r\n            selector: row => data.video_title,\r\n        },\r\n        {\r\n            name: 'Name',\r\n            selector: row => row.name,\r\n        },\r\n        {\r\n            name: 'Date',\r\n            selector: row => data.date,\r\n        },\r\n        {\r\n            name: 'Mobile',\r\n            selector: row => row.mobile,\r\n        },\r\n        {\r\n            name: 'Message',\r\n            selector: row => row.message,\r\n        }\r\n    ];\r\n\r\n    async function fetchAskQuestionsData() {\r\n        setPending(true)\r\n        try {\r\n            let requestBody = new FormData();\r\n            requestBody.append(\"brand_id\", data.brand_id);\r\n            requestBody.append(\"start_date\", format(data.startDate, 'yyyy-MM-dd'));\r\n            requestBody.append(\"end_date\", format(data.endDate, 'yyyy-MM-dd'));\r\n            requestBody.append(\"video_id\", data.video_id);\r\n            const response = await axios.post(\r\n                \"https://bigleap.live/index.php/APIv1/ShortVideoAnalytics/getAskquestion\",\r\n                requestBody\r\n            ).then((res) => {\r\n                setAskQuestData(res.data.data)\r\n                setPending(false)\r\n            }).catch((errr) => {\r\n                console.log(errr);\r\n                setPending(false)\r\n            })\r\n\r\n\r\n\r\n        } catch (error) {\r\n            setPending(false)\r\n            throw error; // Rethrow the error if any occurs\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (show) {\r\n            fetchAskQuestionsData(data.date)\r\n        }\r\n    }, [data.date])\r\n    const downloadExcel = () => {\r\n        const worksheet = XLSX.utils.json_to_sheet(askQuestData);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n        const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n        saveAs(new Blob([excelBuffer], { type: 'application/octet-stream' }), 'askQuestData.xlsx');\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal show={show} className='d-grid w-100 askquestion_modal ' size='lg' onHide={handleClose}>\r\n                <Modal.Title className='p-3 pb-0'>Asked Questions <BsQuestionCircleFill style={{ cursor: \"pointer\" }} title='These are raised questions asked by viewers on video or product' /><button className='btn btn-sm btn-outline-dark float-end' onClick={() => downloadExcel()}><span className='mt-3'>Export</span> <BiExport size={25} /></button><hr /></Modal.Title>\r\n                <Modal.Body className='p-3 pt-0'>\r\n                    <DataTable\r\n                        columns={columns}\r\n                        data={askQuestData}\r\n                        progressPending={pending}\r\n                        progressComponent={<div className='p-3 m-4' >\r\n                            <RotatingLines height={30} width={30} strokeColor=\"grey\" />\r\n                        </div>}\r\n\r\n                    />\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AskQuestionModel;\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport DataTable from 'react-data-table-component';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { DateRangePicker } from 'react-date-range'\r\nimport { FaFileCsv, FaFileExcel, FaFilePdf, FaSearch } from 'react-icons/fa';\r\nimport VideoModal from '../videomodal/VideoModal';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable'; // Importing jspdf-autotable for table creation\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { format } from 'date-fns';\r\nimport AskQuestionModel from '../ask-question-modal/AskQuestionModel';\r\nimport { AiOutlinePlaySquare } from 'react-icons/ai';\r\nimport { RotatingLines, TailSpin } from 'react-loader-spinner';\r\nimport { BiExport } from 'react-icons/bi';\r\n\r\nconst Report = ({ state, setState }) => {\r\n    const today = new Date();\r\n    const yesterday = new Date(today);\r\n    const [show, setShow] = useState(false);\r\n    const [singleVideoData, setSingleVideoData] = useState([])\r\n    const [askQuestionModelShow, setAskQuestionModelShow] = useState(false)\r\n    const [askquestionData, setAskquestionData] = useState([])\r\n    const [filteredData, setFilteredData] = useState([])\r\n    const [filterText, setFilterText] = useState(\"\")\r\n    const [filtered, setFiltered] = useState(false)\r\n    const handleClose = () => setShow(false);\r\n    const [pending, setPending] = React.useState(false);\r\n    const handleCloseAskQuestion = () => setAskQuestionModelShow(false);\r\n\r\n    const authData = useSelector((state => state.auth.user))\r\n    const [data, setData] = useState([])\r\n    yesterday.setDate(today.getDate() - 1);\r\n    // const [state, setState] = useState([\r\n    //     {\r\n    //         startDate: new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000),\r\n    //         endDate: yesterday,\r\n    //         key: 'selection'\r\n    //     }\r\n    // ]);\r\n\r\n    const [xstate, setxState] = useState([\r\n        {\r\n            startDate: new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000),\r\n            endDate: yesterday,\r\n            key: 'selection'\r\n        }\r\n    ]);\r\n    // useEffect(() => {\r\n    //     return () => {\r\n    //         setState([\r\n    //             {\r\n    //                 startDate: new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000),\r\n    //                 endDate: yesterday,\r\n    //                 key: 'selection'\r\n    //             }\r\n    //         ])\r\n    //     }\r\n    // }, [])\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n    const handleApply = () => {\r\n        // Your apply logic here\r\n        setDropdownOpen(false); // Close the dropdown\r\n        setState(xstate)\r\n    };\r\n    function convertSecondsToTime(seconds) {\r\n        if (isNaN(seconds) || seconds < 0) {\r\n            return \"0\";\r\n        }\r\n\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        const remainingSeconds = seconds % 60;\r\n\r\n        if (hours > 0) {\r\n            return `${hours}hr ${minutes}min ${remainingSeconds}sec`;\r\n        } else if (minutes > 0) {\r\n            return `${minutes}min ${remainingSeconds}sec`;\r\n        } else {\r\n            return `${remainingSeconds}sec`;\r\n        }\r\n    }\r\n    const myFun = () => {\r\n        let total = 0\r\n        let wtime = 0\r\n        data && data.map((el) => {\r\n            total += parseInt(el.total_views)\r\n            wtime += parseInt(el.total_watchtime)\r\n\r\n        })\r\n\r\n    }\r\n    const columns = [\r\n        {\r\n            // name: 'Sr',\r\n            selector: row => row.index + 1,\r\n            sortable: true,\r\n            width: \"4%\"\r\n        },\r\n        {\r\n            name: 'Video Title',\r\n            selector: row => row.video_title,\r\n            sortable: true,\r\n            width: \"22.2%\",\r\n            cell: (row) => {\r\n                return <>\r\n                    <p className='pt-4' title={row.video_title} style={{ padding: \"2px\", overflow: \"hidden\", whiteSpace: \"nowrap\", maxWidth: \"280px\", textOverflow: \"ellipsis\", cursor: \"pointer\" }} onClick={() => {\r\n                        setSingleVideoData(row)\r\n                        setShow(true)\r\n                    }}>{row.video_title ? row.video_title : \"no title\"} </p >\r\n                    <span onClick={() => {\r\n                        setSingleVideoData(row)\r\n                        setShow(true)\r\n                    }} style={{ cursor: \"pointer\" }}>  <AiOutlinePlaySquare size={20} className='ms-1' /></span>\r\n                </>\r\n            },\r\n\r\n        },\r\n        {\r\n            name: 'Total Views',\r\n            selector: row => row.total_views,\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(255, 0, 0,.1)\"\r\n            }\r\n        },\r\n        {\r\n            name: `Unique  Views`,\r\n            selector: row => row.total_unique_views,\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(255, 0, 0,.1)\"\r\n            }\r\n        },\r\n        {\r\n            name: 'Watch Time [Mins]',\r\n            selector: row => row.total_watchtime,\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(255, 0, 0,.1)\"\r\n            },\r\n            cell: (row) => {\r\n                return (parseInt(row.total_watchtime) / 60).toFixed(2)\r\n            }\r\n        },\r\n        {\r\n            name: 'Avg. Watch Time [Secs]',\r\n            selector: row => Math.round(row.average_watchtime),\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(255, 0, 0,.1)\"\r\n            },\r\n\r\n        },\r\n\r\n        {\r\n            name: 'Add To Cart',\r\n            selector: row => row.addtoCart,\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(0, 255, 71, .1)\"\r\n            }\r\n        },\r\n        {\r\n            name: 'Buy Now',\r\n            selector: row => row.buyNow,\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(0, 255, 71, .1)\"\r\n            }\r\n        },\r\n        {\r\n            name: 'Ask Question',\r\n            selector: row => row.askQuestion,\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(0, 255, 71, .1)\"\r\n            },\r\n            cell: (row) => {\r\n                return row.askQuestion > 0 ? <p onClick={() => {\r\n                    setAskQuestionModelShow(true)\r\n                    setAskquestionData(row)\r\n                }} style={{ cursor: \"pointer\" }}><span className='badge_ask_count'>{row.askQuestion}</span></p> : <p style={{ padding: \"3px 5px\" }}>{row.askQuestion}</p>\r\n            }\r\n        },\r\n        {\r\n            name: 'Engage. Rate %',\r\n            selector: row => row.engagement_rate === null ? `${\"0\" + \"%\"}` : `${Math.round(row.engagement_rate)}%`,\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(0, 255, 71, .1)\"\r\n            }\r\n        },\r\n        {\r\n            name: 'CTR%',\r\n            selector: row => `${Math.round(row.ctr_rate)}%`,\r\n            sortable: true,\r\n            style: {\r\n                backgroundColor: \"rgba(0, 255, 71, .1)\"\r\n            }\r\n        },\r\n    ]\r\n    // const handleRowClicked = (row) => {\r\n    //     setSingleVideoData(row)\r\n    //     setShow(true)\r\n    // }\r\n    const CustomSortIconComponent = () => {\r\n        return <>\r\n\r\n            <div className='ms-3'>\r\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M13.3333 2.6665V10.6665H15.3333L12.6667 13.9998L10 10.6665H12V2.6665H13.3333ZM8 11.9998V13.3332H2V11.9998H8ZM9.33333 7.33317V8.6665H2V7.33317H9.33333ZM9.33333 2.6665V3.99984H2V2.6665H9.33333Z\" fill=\"#09121F\" />\r\n                </svg>\r\n            </div>\r\n        </>\r\n    };\r\n\r\n    const getData = useCallback(async () => {\r\n        setPending(true)\r\n        try {\r\n            await axios.get(`https://goswirl.world:3001/getAnalyticsDataByBrandIdAndDate?brand_id=${authData?.brand_id}&start_date=${format(state[0].startDate, 'yyyy-MM-dd')}&end_date=${format(state[0].endDate, 'yyyy-MM-dd')}`).then((response) => {\r\n                setData(response.data.resp)\r\n                if (response.data) {\r\n                    setPending(false)\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                setPending(false)\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, [authData.brand_id, state])\r\n\r\n\r\n    const filterData = (text) => {\r\n        setFilterText(text)\r\n        const res = data.filter(item => item.video_title && item.video_title.toLowerCase().includes(filterText.toLowerCase()));\r\n        setFilteredData(res)\r\n\r\n    }\r\n    // const downloadExcel = () => {\r\n    //     // Define your custom column headers\r\n    //     const headers = ['Total Unique Views', 'Video Title', 'Brand Id', 'Video Id', 'Total Watch Time', 'Id', 'Url', 'Duration', 'Total Views', 'Date', 'Buy Now', 'Add To Cart', 'Ask Questions', 'Average Watch time', 'Engagement Rate', 'CTR'/* Add more titles as needed */];\r\n\r\n    //     // Function to handle missing keys and set default value\r\n    //     const handleMissingKey = (obj, key, defaultValue = '-') => {\r\n    //         return obj.hasOwnProperty(key) ? obj[key] : defaultValue;\r\n    //     };\r\n\r\n    //     // Convert data to an array of arrays with headers as the first row\r\n    //     const excelData = [headers, ...data.map(item => [\r\n    //         handleMissingKey(item, 'total_unique_views'),\r\n    //         handleMissingKey(item, 'video_title'),\r\n    //         handleMissingKey(item, 'brand_id'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'video_id'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'total_watchtime'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'id'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'url'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'duration'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'total_views'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'date'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'buyNow'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'addtoCart'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'askQuestion'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'average_watchtime'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'engagement_rate'), /* Add more fields as needed */\r\n    //         handleMissingKey(item, 'ctr'), /* Add more fields as needed */\r\n    //     ])];\r\n\r\n    //     // Convert data to worksheet\r\n    //     const worksheet = XLSX.utils.aoa_to_sheet(excelData);\r\n\r\n    //     // Create workbook and append the worksheet\r\n    //     const workbook = XLSX.utils.book_new();\r\n    //     XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n\r\n    //     // Convert workbook to Excel buffer\r\n    //     const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n\r\n    //     // Trigger download\r\n    //     saveAs(new Blob([excelBuffer], { type: 'application/octet-stream' }), 'data.xlsx');\r\n    // };\r\n\r\n\r\n    const downloadExcel = () => {\r\n        // Define your custom column headers\r\n        const headers = ['Date', 'Video Title', 'Total Views', 'Unique Views', \"Watch Time [Mins]\", 'Avg Watch Time [Secs]', 'Buy Now', 'Add to Cart', 'Ask Question', 'Engagement %', 'CTR %'   /* Add more titles as needed */];\r\n\r\n        // Function to handle missing keys and set default value\r\n        const handleMissingKey = (obj, key, defaultValue = '-') => {\r\n            return obj.hasOwnProperty(key) ? obj[key] : defaultValue;\r\n        };\r\n\r\n        // Define which fields to export\r\n        const fieldsToExport = ['date', 'video_title', 'total_views', 'total_unique_views', 'total_watchtime', 'average_watchtime', 'buyNow', 'addtoCart', 'askQuestion', 'engagement_rate', 'ctr_rate'];\r\n\r\n        // Convert data to an array of arrays with headers as the first row\r\n        const modifiedData = data.map(item => {\r\n            // Make changes to the 'video_title' key (example: convert to uppercase)\r\n            const modifiedItem = { ...item, total_watchtime: (parseInt(item.total_watchtime) / 60).toFixed(2) };\r\n            return fieldsToExport.map(field => handleMissingKey(modifiedItem, field));\r\n        });\r\n\r\n        const excelData = [headers, ...modifiedData];\r\n\r\n        // Convert data to worksheet\r\n        const worksheet = XLSX.utils.aoa_to_sheet(excelData);\r\n\r\n        // Create workbook and append the worksheet\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n\r\n        // Convert workbook to Excel buffer\r\n        const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n\r\n        // Trigger download\r\n        saveAs(new Blob([excelBuffer], { type: 'application/octet-stream' }), 'data.xlsx');\r\n    };\r\n\r\n\r\n\r\n    const downloadCSV = () => {\r\n        // Define your custom column headers\r\n        const headers = ['Date', 'Video Title', 'Total Views', 'Unique Views', \"Watch Time [Mins]\", 'Avg Watch Time [Secs]', 'Buy Now', 'Add to Cart', 'Ask Question', 'Engagement %', 'CTR %'   /* Add more titles as needed */];\r\n        const fieldsToExport = ['date', 'video_title', 'total_views', 'total_unique_views', 'total_watchtime', 'average_watchtime', 'buyNow', 'addtoCart', 'askQuestion', 'engagement_rate', 'ctr_rate'];\r\n\r\n        // Function to handle missing keys and set default value\r\n        const handleMissingKey = (obj, key, defaultValue = '-') => {\r\n            return obj.hasOwnProperty(key) ? obj[key] : defaultValue;\r\n        };\r\n\r\n        // Convert data to CSV string\r\n        let csvContent = headers.join(',') + '\\n';\r\n        data.forEach(item => {\r\n            // Modify the 'video_title' key (example: convert to uppercase)\r\n            const modifiedItem = { ...item, total_watchtime: (parseInt(item.total_watchtime) / 60).toFixed(2) };\r\n\r\n            const row = [\r\n                handleMissingKey(modifiedItem, fieldsToExport[0]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[1]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[2]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[3]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[4]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[5]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[6]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[7]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[8]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[9]),\r\n                handleMissingKey(modifiedItem, fieldsToExport[10]),\r\n            ];\r\n            csvContent += row.join(',') + '\\n';\r\n        });\r\n\r\n        // Create Blob from CSV string\r\n        const csvBlob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n\r\n        // Trigger download\r\n        saveAs(csvBlob, 'data.csv');\r\n    };\r\n\r\n\r\n\r\n    const downloadPDF = () => {\r\n        const doc = new jsPDF('l', 'pt', 'a4', true); // Landscape orientation\r\n\r\n        // Define your custom column headers\r\n        const headers = ['Date', 'Video Title', 'Total Views', 'Unique Views', \"Watch Time [Mins]\", 'Avg Watch Time [Secs]', 'Buy Now', 'Add to Cart', 'Ask Question', 'Engagement %', 'CTR %'   /* Add more titles as needed */];\r\n        const fields = ['date', 'video_title', 'total_views', 'total_unique_views', 'total_watchtime', 'average_watchtime', 'buyNow', 'addtoCart', 'askQuestion', 'engagement_rate', 'ctr_rate'];\r\n\r\n        // Function to handle missing keys and set default value\r\n        const handleMissingKey = (obj, key, defaultValue = '-') => {\r\n            return obj.hasOwnProperty(key) ? obj[key] : defaultValue;\r\n        };\r\n\r\n        // Convert data to an array of arrays with custom column headers\r\n        const tableData = [headers];\r\n        data.forEach(item => {\r\n            // Modify the 'video_title' key (example: convert to uppercase)\r\n            const modifiedItem = { ...item, total_watchtime: (parseInt(item.total_watchtime) / 60).toFixed(2) };\r\n\r\n            const row = fields.map(field => handleMissingKey(modifiedItem, field));\r\n            tableData.push(row);\r\n        });\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: tableData.slice(1), // Exclude headers from body data\r\n            headStyles: {\r\n                fillColor: [238, 238, 119],\r\n                textColor: [0, 0, 0]\r\n            },\r\n            styles: { cellPadding: 1, fontSize: 5 },\r\n            columnStyles: { 0: { cellWidth: 'auto' } },\r\n            margin: { top: 20 },\r\n            startY: 20\r\n        });\r\n        doc.save('data.pdf');\r\n    };\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (filterText !== \"\") {\r\n            setFiltered(true)\r\n        } else {\r\n            setFiltered(false)\r\n        }\r\n    }, [filterText])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        myFun()\r\n    }, [state, getData])\r\n\r\n\r\n    useEffect(() => {\r\n        setxState(state)\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='d-flex'>\r\n                <div className='ms-auto d-flex align-items-center mb-3' >\r\n                    <div className=\"dropdown d-flex\">\r\n                        <div className=\"input-group input-group me-1\">\r\n                            <span className=\"input-group-text border-end-0 border-dark\" >\r\n                                <FaSearch />\r\n                            </span>\r\n                            <input\r\n                                type=\"search\"\r\n                                className=\"form-control border-start-0 border-dark\"\r\n                                name='search'\r\n                                value={filterText}\r\n                                placeholder='Search video...'\r\n                                onChange={(e) => filterData(e.target.value)}\r\n\r\n\r\n                            // onChange={(e) => handleInputChange(\"mobile\", e.target.value)}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        {/* <input className='form-control video_search border-dark me-1 text-dark' placeholder='Search video...' type='search' /> */}\r\n                        <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\r\n                            {window.innerWidth > 556 ? <Dropdown.Toggle id=\"dropdown-basic\" className='bg-transparent text-dark border-dark'>\r\n                                <span>\r\n                                    {state[0].endDate !== null ? `${state[0].startDate.toString().slice(4, 15)} to ${state[0].endDate.toString().slice(4, 15)}` : \"Filter by date\"}\r\n                                </span>\r\n                            </Dropdown.Toggle> : <Dropdown.Toggle id=\"dropdown-basic\" className='bg-transparent text-dark border-dark'>\r\n                                <span>\r\n                                    {state[0].endDate !== null ? `${state[0].startDate.getFullYear().toString().slice(2, 4)}/${state[0].startDate.getFullYear().toString().slice(2, 4)}/${state[0].startDate.getFullYear().toString().slice(2, 4)} - ${state[0].startDate.getFullYear().toString().slice(2, 4)}/${state[0].startDate.getFullYear().toString().slice(2, 4)}/${state[0].startDate.getFullYear().toString().slice(2, 4)}` : \"Filter by date\"}\r\n                                </span>\r\n                            </Dropdown.Toggle>}\r\n\r\n\r\n                            <Dropdown.Menu>\r\n                                <DateRangePicker\r\n                                    editableDateInputs={false}\r\n                                    onChange={item => setxState([item.selection])}\r\n                                    moveRangeOnFirstSelection={true}\r\n                                    ranges={xstate}\r\n                                    months={2}\r\n                                    direction='horizontal'\r\n                                    maxDate={yesterday}\r\n                                    minDate={authData?.brand_id == \"236633565\" ? new Date(2024, 2, 15) : new Date(2024, 3, 5)}\r\n                                />\r\n                                <div className='w-100'>\r\n                                    <button id=\"dropdown-basic\" className='btn btn-sm btn-primary float-end me-3' onClick={handleApply}>Done</button>\r\n                                    <button id=\"dropdown-basic\" className='btn btn-sm btn-outline-primary float-end me-3' onClick={() => {\r\n                                        setState([\r\n                                            {\r\n                                                startDate: new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000),\r\n                                                endDate: yesterday,\r\n                                                key: 'selection'\r\n                                            }\r\n                                        ])\r\n                                    }}>Reset</button>\r\n\r\n                                </div>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        <Dropdown className='ms-1'>\r\n                            {window.innerWidth > 556 ? <Dropdown.Toggle className='bg-transparent text-dark border-dark'>\r\n                                Export\r\n                            </Dropdown.Toggle> : <Dropdown.Toggle className='bg-transparent text-dark border-dark'>\r\n                                <BiExport />\r\n                            </Dropdown.Toggle>}\r\n\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item onClick={downloadCSV}><FaFileCsv color='gray' /> Export as CSV </Dropdown.Item>\r\n                                <Dropdown.Item onClick={downloadExcel}><FaFileExcel color='green' /> Export as XLS</Dropdown.Item>\r\n                                <Dropdown.Item onClick={downloadPDF}><FaFilePdf color='red' /> Export as PDF</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n            <div style={{ width: \"100%\", overflow: \"auto\", height: \"auto\" }}>\r\n                <div style={{ border: \"1px solid #E0E0E0\", minWidth: \"1500px\" }}>\r\n                    <DataTable\r\n                        columns={columns}\r\n                        data={filtered ? filteredData?.map((item, index) => ({ ...item, index })) : data?.map((item, index) => ({ ...item, index }))}\r\n                        subHeader\r\n                        progressPending={pending}\r\n                        pagination\r\n                        progressComponent={<div className='p-3 m-4' >\r\n                            <RotatingLines height={30} width={30} strokeColor=\"grey\" />\r\n                        </div>}\r\n                        sortIcon={<CustomSortIconComponent />}\r\n                        highlightOnHover\r\n                        // sortIconRenderer={() => <CustomSortIconComponent />}\r\n                        // onRowClicked={handleRowClicked}\r\n                        className=\"custom-datatable\"\r\n\r\n                        subHeaderComponent={\r\n                            <>\r\n                                <div className='d-flex w-100 table_header_row' >\r\n                                    <div className='table_blank_column'></div>\r\n                                    <div className='table_higher_column' >\r\n                                        <div className='d-flex text-center'>\r\n                                            <div className='perfomance_column'>Performance</div>\r\n                                            <div className='engagement_column' >Engagement</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </>}\r\n                    />\r\n\r\n                    {/* code for server side rendering  */}\r\n                    {/* <DataTable\r\ntitle=\"My Data Table\"\r\ncolumns={columns}\r\ndata={data}\r\npagination={true}\r\npaginationServer={true}\r\npaginationTotalRows={data.length} // This should be total rows count from your server\r\nonChangePage={async (page, totalRows) => {\r\n// Fetch data for the new page from the server\r\nsetLoading(true);\r\nconst response = await fetch(`your-api-endpoint?page=${page}&pageSize=${totalRows}`);\r\nconst responseData = await response.json();\r\nsetData(responseData);\r\nsetLoading(false);\r\n}}\r\nprogressPending={loading}\r\n/> */}\r\n                </div>\r\n            </div>\r\n            <VideoModal show={show} handleClose={handleClose} data={singleVideoData} />\r\n            <AskQuestionModel show={askQuestionModelShow} handleClose={handleCloseAskQuestion} data={{ ...askquestionData, ...state[0] }} />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Report","import React, { useEffect, useState } from 'react'\r\nimport \"./table.css\"\r\nimport { Helmet } from \"react-helmet\";\r\nimport Report from '../components/reports/Report';\r\nimport UploadVideo from '../components/upload-video/UploadVideo';\r\nimport VideoGallery from './VideoGallery';\r\n// import Playlist from '../components/playlist/newplaylist';\r\nimport Playlist from './playlist';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport Newplaylist from '../components/playlist/Newplaylist.js';\r\nimport { PlaylistsTable } from '../components/playlist/PlaylistsTable.js';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport VideoSettingsTabs from '../components/video-settings/VideoSettingsTabs.js';\r\nimport PlaylistEdit from './PlaylistEdit.js';\r\n\r\nconst SSVpage = ({ state, setState }) => {\r\n    const [playlists, setPlaylists] = useState([])\r\n    const user = useSelector(state => state.auth.user)\r\n    const location = useLocation();\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const createTable = searchParams.get('createTable');\r\n    const Tableedit = searchParams.get('Tableedit');\r\n\r\n    const getPlalists = async () => {\r\n        try {\r\n            await axios.get(`https://liveshopping.asia/getPlaylistByBrandId?brandId=${user.brand_id}`).then((res) => {\r\n                if (res.data.playlist) {\r\n                    setPlaylists(res.data.playlist)\r\n                } else {\r\n                    setPlaylists([])\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPlalists()\r\n    }, [user])\r\n    const navigate = useNavigate()\r\n\r\n    const setCreateTable = (value) => {\r\n        searchParams.set('createTable', value);\r\n        navigate({ search: searchParams.toString() });\r\n    };\r\n    const setTableedit = (value) => {\r\n        searchParams.set('Tableedit', value);\r\n        navigate({ search: searchParams.toString() });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>SWIRL | Short Videos</title>\r\n            </Helmet>\r\n            <div>\r\n                <div className=\"col\">\r\n                    <div className='d-flex'>\r\n                        <ul className=\"nav nav-tabs\" id=\"responsive-tabs\" role=\"tablist\">\r\n                            {/* <li className=\"nav-item\" role=\"presentation\">\r\n                                <button className=\"nav-link show  active\" id=\"video-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#video\" type=\"button\" role=\"tab\" aria-controls=\"video\" aria-selected=\"true\" onClick={() => { { setCreateTable(false) } { setTableedit(false) } }} >Video gallery </button>\r\n                            </li> */}\r\n                            {/* \r\n                            <li className=\"nav-item\" role=\"presentation\">\r\n                                <button className=\"nav-link\" id=\"Upload-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#Upload\" type=\"button\" role=\"tab\" aria-controls=\"Upload\" aria-selected=\"false\" disabled>Upload video</button>\r\n    </li>*/}\r\n                            {/* <li className=\"nav-item\" role=\"presentation\">\r\n                                <button className=\"nav-link\" id=\"playlist-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#playlist\" type=\"button\" role=\"tab\" aria-controls=\"playlist\" aria-selected=\"false\" onClick={() => { { setCreateTable(false) } { setTableedit(false) } }}>Playlist</button>\r\n                            </li>\r\n                            <li className=\"nav-item \" role=\"presentation\">\r\n                                <button className=\"nav-link \" id=\"Upload-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#Upload\" type=\"button\" role=\"tab\" aria-controls=\"Upload\" aria-selected=\"false\" onClick={() => { { setCreateTable(false) } { setTableedit(false) } }}>Upload video</button>\r\n                            </li> */}\r\n                            <li className=\"nav-item\" role=\"presentation\">\r\n                                <button className=\"nav-link \" id=\"Reports-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#Reports\" type=\"button\" role=\"tab\" aria-controls=\"Reports\" aria-selected=\"false\" onClick={() => { { setCreateTable(false) } { setTableedit(false) } }}>Reports</button>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\" role=\"presentation\">\r\n                                <button className=\"nav-link\" id=\"Settings-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#Settings\" type=\"button\" role=\"tab\" aria-controls=\"Settings\" aria-selected=\"false\" >Settings</button>\r\n                            </li> */}\r\n\r\n                        </ul>\r\n                        <div className='ms-auto d-flex align-items-center' >\r\n                            {/* <div className=\"dropdown\">\r\n\r\n                                <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\r\n                                    <Dropdown.Toggle id=\"dropdown-basic\" className='bg-transparent text-dark border-dark'>\r\n                                        {state[0].endDate !== null ? `${state[0].startDate.toString().slice(4, 15)} to ${state[0].endDate.toString().slice(4, 15)}` : \"Filter by date\"}\r\n                                    </Dropdown.Toggle>\r\n\r\n                                    <Dropdown.Menu>\r\n                                        <DateRangePicker\r\n                                            editableDateInputs={false}\r\n                                            onChange={item => setState([item.selection])}\r\n                                            moveRangeOnFirstSelection={true}\r\n                                            ranges={state}\r\n                                            months={2}\r\n                                            direction='horizontal'\r\n                                            maxDate={yesterday}\r\n                                        />\r\n                                        <div className='w-100'>\r\n                                            <button id=\"dropdown-basic\" className='btn btn-sm btn-primary float-end me-3' onClick={handleApply}>Done</button>\r\n                                            <button id=\"dropdown-basic\" className='btn btn-sm btn-outline-primary float-end me-3' onClick={() => {\r\n                                                setState([\r\n                                                    {\r\n                                                        startDate: new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000),\r\n                                                        endDate: yesterday,\r\n                                                        key: 'selection'\r\n                                                    }\r\n                                                ])\r\n                                            }}>Reset</button>\r\n\r\n                                        </div>\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tab-content p-3\" id=\"responsive-tabs-content\">\r\n                        {/* <div className=\"tab-pane fade \" id=\"video\" role=\"tabpanel\" aria-labelledby=\"video-tab\">\r\n                            <VideoGallery />\r\n                        </div>\r\n                        <div className=\"tab-pane fade \" id=\"Upload\" role=\"tabpanel\" aria-labelledby=\"Upload-tab\">\r\n                            <UploadVideo />\r\n                        </div>\r\n                        <div className=\"tab-pane fade \" id=\"playlist\" role=\"tabpanel\" aria-labelledby=\"playlist-tab\">\r\n                            {Tableedit === \"true\" ? (\r\n                                <PlaylistEdit getPlalists={getPlalists} />\r\n                            ) : (\r\n                                <>\r\n                                    {createTable === \"true\" ? (\r\n                                        <Playlist getPlalists={getPlalists} />\r\n                                    ) : (\r\n                                        <>\r\n                                            {playlists.length > 0 ? (\r\n                                                <PlaylistsTable data={playlists} />\r\n                                            ) : (\r\n                                                <Newplaylist />\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                        </div> */}\r\n                        <div className=\"tab-pane fade show active\" id=\"Reports\" role=\"tabpanel\" aria-labelledby=\"Reports-tab\">\r\n                            <Report state={state} setState={setState} />\r\n                        </div>\r\n                        {/* <div className=\"tab-pane fade\" id=\"Settings\" role=\"tabpanel\" aria-labelledby=\"Settings-tab\">\r\n                            <VideoSettingsTabs />\r\n                        </div> */}\r\n\r\n                    </div>\r\n                </div>\r\n            </div >\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SSVpage"],"names":["_ref","selectedPlalist","data","setselectedPlalist","handleDragOver","e","preventDefault","_jsxs","children","_jsx","Select","options","isMulti","value","onChange","selectedOption","length","parseInt","videoCount","placeholder","getOptionLabel","option","name","getOptionValue","id","closeMenuOnSelect","components","Option","_ref2","props","isDisabled","className","style","fontSize","paddingTop","paddingLeft","paddingRight","borderRadius","backgroundColor","display","map","item","index","onDragStart","handleDragStart","dataTransfer","setData","onDragOver","onDrop","handleDrop","draggedIndex","getData","draggedItem","newItems","splice","draggable","background","color","padding","cursor","MdDragIndicator","IoClose","marginTop","onClick","handleRemoveItem","selectedItems","setSelectedItems","formatSelectedOptionLabel","customFormatTagsLabel","type","productTitle","truncateLabel","label","maxLength","substring","hideSelectedOptions","productId","styles","control","provided","width","backspaceRemovesValue","isOptionDisabled","flexWrap","title","slice","show","handleClose","url","Modal","size","onHide","Body","maxWidth","margin","controls","height","autoPlay","loop","src","firebaseConfig","apiKey","window","atob","authDomain","projectId","storageBucket","app","initializeApp","db","getFirestore","_el$comment","el","updatePinStatus","removeComment","visible","setVisible","useState","timestampNumber","Number","createdAt","timeFromNow","moment","fromNow","concat","onMouseEnter","onMouseMove","onMouseOver","onMouseLeave","brand_logo","_Fragment","viewBox","fill","xmlns","filter","cx","cy","r","d","x","y","filterUnits","result","in","stdDeviation","in2","operator","mode","transform","uName","GoDotFill","fontWeight","textWrap","wordBreak","comment","includes","href","target","visibility","isPinned","RiPushpin2Fill","RiPushpin2Line","IoTrashOutline","tab","setTab","loadingProducts","setLoadingProducts","products","setProducts","user","useSelector","state","auth","comments","setComments","message","setMessage","pinMessage","setPinMessage","scrolled","setScrolled","chatEndRef","useRef","scrolldivref","videoId","video_id","editVideoComment","async","commentDocRef","doc","updatedData","updateDoc","subComment","error","console","scrollToBottom","_chatEndRef$current","current","scrollIntoView","behavior","commentRef","collection","q","query","orderBy","onSnapshot","snapshot","cms","docs","obj","isRemoved","objectsWithPin1","handleSubmit","cData","first_name","Date","getTime","user_profile","vId","videoDocRef","setDoc","addDoc","addVideoComment","reset","log","toast","warn","handleScroll","scrollTop","useEffect","res","axios","get","brand_id","productResp","fetchProducts","setTimeout","getDocs","fetchData","topref","scrollToTopOfElement","elementId","centered","muted","role","currencySymbol","Intl","NumberFormat","undefined","currency","currencyName","formatToParts","find","part","alt","image","border","discountPrice","toLocaleString","price","ref","onScroll","marginLeft","PinComment","overflow","Comment","onSubmit","max","disabled","askQuestData","setAskQuestData","pending","setPending","React","columns","selector","row","video_title","date","mobile","requestBody","FormData","append","format","startDate","endDate","post","then","catch","errr","fetchAskQuestionsData","Title","BsQuestionCircleFill","downloadExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","bookType","saveAs","Blob","BiExport","DataTable","progressPending","progressComponent","RotatingLines","strokeColor","setState","today","yesterday","setShow","singleVideoData","setSingleVideoData","askQuestionModelShow","setAskQuestionModelShow","askquestionData","setAskquestionData","filteredData","setFilteredData","filterText","setFilterText","filtered","setFiltered","authData","setDate","getDate","xstate","setxState","key","dropdownOpen","setDropdownOpen","sortable","cell","whiteSpace","textOverflow","AiOutlinePlaySquare","total_views","total_unique_views","total_watchtime","toFixed","Math","round","average_watchtime","addtoCart","buyNow","askQuestion","engagement_rate","ctr_rate","CustomSortIconComponent","useCallback","response","resp","err","myFun","total","wtime","FaSearch","text","toLowerCase","filterData","Dropdown","onToggle","toggleDropdown","innerWidth","Toggle","toString","getFullYear","Menu","DateRangePicker","editableDateInputs","selection","moveRangeOnFirstSelection","ranges","months","direction","maxDate","minDate","handleApply","Item","downloadCSV","fieldsToExport","handleMissingKey","defaultValue","arguments","hasOwnProperty","csvContent","join","forEach","modifiedItem","csvBlob","FaFileCsv","excelData","field","aoa_to_sheet","FaFileExcel","downloadPDF","jsPDF","headers","fields","tableData","push","autoTable","head","body","headStyles","fillColor","textColor","cellPadding","columnStyles","cellWidth","top","startY","save","FaFilePdf","minWidth","subHeader","pagination","sortIcon","highlightOnHover","subHeaderComponent","VideoModal","AskQuestionModel","handleCloseAskQuestion","playlists","setPlaylists","location","useLocation","searchParams","URLSearchParams","search","playlist","getPlalists","navigate","useNavigate","Helmet","set","setTableedit","Report"],"sourceRoot":""}